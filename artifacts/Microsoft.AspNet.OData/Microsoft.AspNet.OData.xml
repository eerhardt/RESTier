<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.OData</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.OData.ClrPropertyInfoAnnotation">
            <summary>
            Represents a mapping from an <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> to a CLR property info.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.ClrPropertyInfoAnnotation.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.ClrPropertyInfoAnnotation"/> class.
            </summary>
            <param name="clrPropertyInfo">The backing CLR property info for the EDM property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.ClrPropertyInfoAnnotation.ClrPropertyInfo">
            <summary>
            Gets the backing CLR property info for the EDM property.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.ClrTypeAnnotation">
            <summary>
            Represents a mapping from an <see cref="T:Microsoft.OData.Edm.IEdmType"/> to a CLR type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.ClrTypeAnnotation.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.ClrTypeAnnotation"/> class.
            </summary>
            <param name="clrType">The backing CLR type for the EDM type.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.ClrTypeAnnotation.ClrType">
            <summary>
            Gets the backing CLR type for the EDM type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Delta">
            <summary>
            A class the tracks changes (i.e. the Delta) for an entity.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Delta.Clear">
            <summary>
            Clears the Delta and resets the underlying Entity.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Delta.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            <remarks>
            Only properties that exist on Entity can be set.
            If there is a type mismatch the request will fail.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Delta.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            <remarks>
            Only properties that exist on Entity can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>True if the Property was found</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Delta.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            <remarks>
            Only properties that exist on Entity can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Delta.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Overrides the DynamicObject TrySetMember method, so that only the properties
            of Entity can be set.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Delta.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Overrides the DynamicObject TryGetMember method, so that only the properties
            of Entity can be got.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Delta.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this Delta as an 
            enumeration of Property Names 
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Delta.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this Delta as an 
            enumeration of Property Names 
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmComplexObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmComplexObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNet.OData.IEdmComplexObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmComplexObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initialzes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmComplexObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmComplexObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNet.OData.IEdmComplexObject})">
            <summary>
            Initialzes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmComplexObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmComplexObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmDeltaCollectionType">
            <summary>
            Implementing IEdmCollectionType to identify collection of DeltaFeed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaCollectionType.TypeKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaCollectionType.ElementType">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmDeltaDeletedEntityObject"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Deleted Entry object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaDeletedEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedEntityObject.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject.Reason">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaDeletedEntityObject.DeltaKind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmDeltaDeletedLink">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmDeltaDeletedLink"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Deleted Link object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedLink.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaDeletedLink.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedLink.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaDeletedLink.Source">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaDeletedLink.Target">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaDeletedLink.Relationship">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaDeletedLink.DeltaKind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmDeltaEntityKind">
            <summary>
            The Kind of the object within the DeltaPayload used to distinguish between Entry/DeletedEntry/DeltaLink/AddedLink.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.EdmDeltaEntityKind.Entry">
            <summary>
            Corresponds to EdmEntityObject (Equivalent of ODataEntry in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.EdmDeltaEntityKind.DeletedEntry">
            <summary>
            Corresponds to EdmDeltaDeletedEntityObject (Equivalent of ODataDeltaDeletedEntry in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.EdmDeltaEntityKind.DeletedLinkEntry">
            <summary>
            Corresponds to EdmDeltaDeletedLink (Equivalent of ODataDeltaDeletedLink in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.EdmDeltaEntityKind.LinkEntry">
            <summary>
            Corresponds to EdmDeltaLink (Equivalent of ODataDeltaLink in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.EdmDeltaEntityKind.Unknown">
            <summary>
            Corresponds to any Unknown item added.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmDeltaLink">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmDeltaLink"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Added/Modified Link object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaLink.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaLink"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaLink.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmDeltaLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaLink.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaLink.Source">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaLink.Target">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaLink.Relationship">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaLink.DeltaKind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmDeltaType">
            <summary>
            Implementing IEdmType to identify objects which are part of DeltaFeed Payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaType.TypeKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmDeltaType.DeltaKind">
            <summary>
            Returning DeltaKind of the object within DeltaFeed payload
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmEntityObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmEntityObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNet.OData.IEdmEntityObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEntityObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmEntityObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEntityObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNet.OData.IEdmEntityObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmEntityObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEntityObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmEnumObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmEnumObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmEnumObject.Value">
            <summary>
            Gets the value of the enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmEnumObject.IsNullable">
            <summary>
            Gets or sets whether the enum object is nullable or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumType"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumTypeReference,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumTypeReference"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumTypeReference"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEnumObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmEnumObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNet.OData.IEdmEnumObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEnumObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initialzes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmEnumObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEnumObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNet.OData.IEdmEnumObject})">
            <summary>
            Initialzes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmEnumObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmEnumObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.EdmStructuredObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmStructuredObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredTypeReference"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmStructuredObject.ExpectedEdmType">
            <summary>
            Gets or sets the expected <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of the entity or complex type of this object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmStructuredObject.ActualEdmType">
            <summary>
            Gets or sets the actual <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> of the entity or complex type of this object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EdmStructuredObject.IsNullable">
            <summary>
            Gets or sets whether the EDM object is nullable or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.TrySetPropertyValue(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.TryGetPropertyType(System.String,System.Type@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.TryGetDynamicProperties">
            <summary>
            Get all dynamic properties
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.GetChangedPropertyNames">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.GetUnchangedPropertyNames">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.EdmStructuredObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.EntityInstanceContext">
            <summary>
            An instance of <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext"/> gets passed to the self link (
            <see cref="M:NavigationSourceConfiguration.HasIdLink"/>,
            <see cref="M:NavigationSourceConfiguration.HasEditLink"/>,
            <see cref="M:NavigationSourceConfiguration.HasReadLink"/>
            ) and navigation link (
            <see cref="M:NavigationSourceConfiguration.HasNavigationPropertyLink"/>,
            <see cref="M:NavigationSourceConfiguration.HasNavigationPropertiesLink"/>
            ) builders and can be used by the link builders to generate links.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EntityInstanceContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.EntityInstanceContext.#ctor(Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext,Microsoft.OData.Edm.IEdmEntityTypeReference,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext"/> class.
            </summary>
            <param name="serializerContext">The backing <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
            <param name="entityType">The EDM entity type of this instance context.</param>
            <param name="entityInstance">The object representing the instance of this context.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.SerializerContext">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.Request">
            <summary>
            Gets or sets the HTTP request that caused this instance to be generated.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.EdmModel">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to which this instance belongs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.NavigationSource">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> to which this instance belongs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.EntityType">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this entity instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.EdmObject">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.OData.IEdmEntityObject"/> backing this instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.EntityInstance">
            <summary>
            Gets or sets the value of this entity instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.Url">
            <summary>
            Gets or sets a <see cref="!:UrlHelper"/> that may be used to generate links while serializing this entity
            instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
            <summary>
            Gets or sets a value indicating whether ActionAvailabilityChecks should be performed or not.
            </summary>
            <remarks>
            This value is used to tell the formatter whether to check availability of an action before including a link
            to it. When in a feed we skip this check.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.EntityInstanceContext.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property with the given name from the <see cref="T:Microsoft.AspNet.OData.IEdmObject"/> of this instance if present; throws if the property is
            not present.
            </summary>
            <param name="propertyName">The name of the property to get.</param>
            <returns>The value of the property if present.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.EntityInstanceContext`1">
            <summary>
            An instance of <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext`1"/> gets passed to the self link (<see cref="M:EntitySetConfiguration.HasIdLink"/>, <see cref="M:EntitySetConfiguration.HasEditLink"/>, <see cref="M:EntitySetConfiguration.HasReadLink"/>)
            and navigation link (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink"/>, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink"/>) builders and can be used by the link builders to generate links.
            </summary>
            <typeparam name="TEntityType">The entity type</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.OData.EntityInstanceContext`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext`1"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.EntityInstanceContext`1.EntityInstance">
            <summary>
            Gets or sets the entity instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.FeedContext">
            <summary>
            Contains context information about the feed currently being serialized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.FeedContext.Request">
            <summary>
            Gets or sets the HTTP request that caused this instance to be generated.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.FeedContext.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.FeedContext.EntitySetBase">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmEntitySetBase"/> this instance belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.FeedContext.Url">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.Routing.UrlHelper"/> to be used for generating links while serializing this
            feed instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.FeedContext.FeedInstance">
            <summary>
            Gets the value of this feed instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IDelta">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.IDelta" /> allows and tracks changes to an object.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.IDelta.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this IDelta as an
            enumerable of Property Names
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.IDelta.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this IDelta as an
            enumerable of Property Names
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>Returns <c>true</c> if successful and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.IDelta.Clear">
            <summary>
            Clears the <see cref="T:Microsoft.AspNet.OData.IDelta" />.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmChangedObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNet.OData.IEdmChangedObject"/>.
            Base interface to be implemented by any Delta object required to be part of the DeltaFeed Payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.IEdmChangedObject.DeltaKind">
            <summary>
            DeltaKind for the objects part of the DeltaFeed Payload.
            Used to determine which Delta object to create during serialization.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmComplexObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmDeltaDeletedEntityObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNet.OData.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeltaDeletedEntry.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.IEdmDeltaDeletedEntityObject.Id">
            <summary>
            The id of the deleted entity (same as the odata.id returned or computed when calling GET on resource), which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.IEdmDeltaDeletedEntityObject.Reason">
            <summary>
            Optional. Either deleted, if the entity was deleted (destroyed), or changed if the entity was removed from membership in the result (i.e., due to a data change).
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmDeltaDeletedLink">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNet.OData.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeltaDeletedLink.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmDeltaLink">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNet.OData.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeltaLink.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmDeltaLinkBase">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNet.OData.IEdmChangedObject"/>.
            Holds the properties necessary to create either ODataDeltaLink or ODataDeltaDeletedLink.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.IEdmDeltaLinkBase.Source">
            <summary>
            The Uri of the entity from which the relationship is defined, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.IEdmDeltaLinkBase.Target">
            <summary>
            The Uri of the related entity, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.IEdmDeltaLinkBase.Relationship">
            <summary>
            The name of the relationship property on the parent object.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmEntityObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmEnumObject">
            <summary>
            Represents an instance of an enum value.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.IEdmObject.GetEdmType">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> of this instance.
            </summary>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> of this instance.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.IEdmStructuredObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.IEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Gets the value of the property with the given name.
            </summary>
            <param name="propertyName">The name of the property to get.</param>
            <param name="value">When this method returns, contains the value of the property with the given name, if the property is found;
            otherwise, null. The parameter is passed uninitialized.</param>
            <returns><c>true</c> if the instance contains the property with the given name; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.NonValidatingParameterBindingAttribute">
            <summary>
            An attribute to disable WebApi model validation for a particular type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.NullEdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmComplexObject"/> that is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.NullEdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.NullEdmComplexObject"/> class.
            </summary>
            <param name="edmType">The EDM type of this object.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.NullEdmComplexObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.NullEdmComplexObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.ODataQueryContext">
            <summary>
            This defines some context information used to perform query composition. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.ODataQueryContext.#ctor(Microsoft.OData.Edm.IEdmModel,System.Type,Microsoft.AspNet.OData.Routing.ODataPath)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/> with <see cref="T:Microsoft.OData.Edm.IEdmModel" />, element CLR type,
            and <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath" />.
            </summary>
            <param name="model">The EdmModel that includes the <see cref="T:Microsoft.OData.Edm.IEdmType"/> corresponding to
            the given <paramref name="elementClrType"/>.</param>
            <param name="elementClrType">The CLR type of the element of the collection being queried.</param>
            <param name="path">The parsed <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.ODataQueryContext.#ctor(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType,Microsoft.AspNet.OData.Routing.ODataPath)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/> with <see cref="T:Microsoft.OData.Edm.IEdmModel" />, element EDM type,
            and <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath" />.
            </summary>
            <param name="model">The EDM model the given EDM type belongs to.</param>
            <param name="elementType">The EDM type of the element of the collection being queried.</param>
            <param name="path">The parsed <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.ODataQueryContext.Model">
            <summary>
            Gets the given <see cref="T:Microsoft.OData.Edm.IEdmModel"/> that contains the EntitySet.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.ODataQueryContext.ElementType">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmType"/> of the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.ODataQueryContext.NavigationSource">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> that contains the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.ODataQueryContext.ElementClrType">
            <summary>
            Gets the CLR type of the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.ODataQueryContext.Path">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.PageResult">
            <summary>
            Represents a feed of entities that includes additional information that OData formats support.
            </summary>
            <remarks>
            Currently limited to:
            <list type="bullet">
            <item><description>The Count of all matching entities on the server (requested using $count=true).</description></item>
            <item><description>The NextLink to retrieve the next page of results (added if the server enforces Server Driven Paging).</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.PageResult"/> class.
            </summary>
            <param name="nextPageLink">The link for the next page of items in the feed.</param>
            <param name="count">The total count of items in the feed.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.PageResult.NextPageLink">
            <summary>
            Gets the link for the next page of items in the feed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.PageResult.Count">
            <summary>
            Gets the total count of items in the feed.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.PageResult`1">
            <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
            <remarks>
            Currently limited to:
            <list type="bullet">
            <item><description>The Count of all matching entities on the server (requested using $count=true).</description></item>
            <item><description>The NextLink to retrieve the next page of results (added if the server enforces Server Driven Paging).</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
            <summary>
            Creates a partial set of results - used when server driven paging is enabled.
            </summary>
            <param name="items">The subset of matching results that should be serialized in this page.</param>
            <param name="nextPageLink">A link to the next page of matching results (if more exists).</param>
            <param name="count">A total count of matching results so clients can know the number of matches on the server.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.PageResult`1.Items">
            <summary>
            Gets the collection of entities for this feed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.PageResult`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.QueryableRestrictions">
            <summary>
            Represents a queryable restriction on an EDM property, including not filterable, not sortable,
            not navigable, not expandable, not countable, automatically expand.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.QueryableRestrictions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.QueryableRestrictions"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.QueryableRestrictions.#ctor(Microsoft.AspNet.OData.Builder.PropertyConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.QueryableRestrictions"/> class.
            </summary>
            <param name="propertyConfiguration">The PropertyConfiguration containing queryable restrictions.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictions.NotFilterable">
            <summary>
            Gets or sets whether the property is not filterable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictions.NonFilterable">
            <summary>
            Gets or sets whether the property is nonfilterable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictions.NotSortable">
            <summary>
            Gets or sets whether the property is not sortable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictions.Unsortable">
            <summary>
            Gets or sets whether the property is unsortable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictions.NotNavigable">
            <summary>
            Gets or sets whether the property is not navigable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictions.NotExpandable">
            <summary>
            Gets or sets whether the property is not expandable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictions.NotCountable">
            <summary>
            Gets or sets whether the property is not countable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictions.AutoExpand">
            <summary>
            Gets or sets whether the property is automatically expanded. default is false.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.QueryableRestrictionsAnnotation">
            <summary>
            Represents an annotation to add the queryable restrictions on an EDM property, including not filterable, 
            not sortable, not navigable, not expandable, not countable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.QueryableRestrictionsAnnotation.#ctor(Microsoft.AspNet.OData.QueryableRestrictions)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.QueryableRestrictionsAnnotation"/> class.
            </summary>
            <param name="restrictions">The queryable restrictions for the EDM property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.QueryableRestrictionsAnnotation.Restrictions">
            <summary>
            Gets the restrictions for the EDM property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.TypeHelper.IsQueryPrimitiveType(System.Type)">
            <summary>
            Determines whether the given type is a primitive type or
            is a <see cref="T:System.String"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Decimal"/>,
            <see cref="T:System.Guid"/>, <see cref="T:System.DateTimeOffset"/> or <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="type">The type</param>
            <returns><c>true</c> if the type is a primitive type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.TypeHelper.GetInnerMostElementType(System.Type)">
            <summary>
            Returns the innermost element type for a given type, dealing with
            nullables, arrays, etc.
            </summary>
            <param name="type">The type from which to get the innermost type.</param>
            <returns>The innermost element type</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.TypeHelper.GetImplementedIEnumerableType(System.Type)">
            <summary>
            Returns type of T if the type implements IEnumerable of T, otherwise, return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ActionConfiguration">
            <summary>
            ActionConfiguration represents an OData action that you wish to expose via your service.
            <remarks>
            ActionConfigurations are exposed via $metadata as a <Action/> element for bound function and <ActionImport/> element for unbound function.
            </remarks> 
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Builder.ActionConfiguration" /> class.
            </summary>
            <param name="builder">The ODataModelBuilder to which this ActionConfiguration should be added.</param>
            <param name="name">The name of this ActionConfiguration.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ActionConfiguration.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ActionConfiguration.IsSideEffecting">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.HasActionLink(System.Func{Microsoft.AspNet.OData.EntityInstanceContext,System.Uri},System.Boolean)">
            <summary>
            Register a factory that creates actions links.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.GetActionLink">
            <summary>
            Retrieves the currently registered action link factory.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetName">The name of the entity set which contains the returned entity.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(Microsoft.AspNet.OData.Builder.EntitySetConfiguration{``0})">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetConfiguration">The entity set which contains the returned entity.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
            <summary>
            Sets the return type to a collection of entities.
            </summary>
            <typeparam name="TElementEntityType">The entity type.</typeparam>
            <param name="entitySetName">The name of the entity set which contains the returned entities.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(Microsoft.AspNet.OData.Builder.EntitySetConfiguration{``0})">
            <summary>
            Sets the return type to a collection of entities.
            </summary>
            <typeparam name="TElementEntityType">The entity type.</typeparam>
            <param name="entitySetConfiguration">The entity set which contains the returned entities.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.Returns``1">
            <summary>
            Established the return type of the Action.
            <remarks>Used when the return type is a single Primitive or ComplexType.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsCollection``1">
            <summary>
            Establishes the return type of the Action
            <remarks>Used when the return type is a collection of either Primitive or ComplexTypes.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration)">
            <summary>
            Specifies the bindingParameter name, type and whether it is alwaysBindable, use only if the Action "isBindable".
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsEntityViaEntitySetPath``1(System.String)">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsEntityViaEntitySetPath``1(System.String[])">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsCollectionViaEntitySetPath``1(System.String)">
            <summary>
            Sets the return type to a collection of EntityType instances.
            </summary>
            <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionConfiguration.ReturnsCollectionViaEntitySetPath``1(System.String[])">
            <summary>
            Sets the return type to a collection of EntityType instances.
            </summary>
            <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ActionLinkBuilder">
            <summary>
            ActionLinkBuilder can be used to annotate an Action. 
            This is how formatters create links to invoke bound actions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionLinkBuilder.#ctor(System.Func{Microsoft.AspNet.OData.EntityInstanceContext,System.Uri},System.Boolean)">
            <summary>
            Create a new ActionLinkBuilder based on an actionLinkFactory.
            <remarks>
            If the action is not available the actionLinkFactory delegate should return NULL.
            </remarks>
            </summary>
            <param name="actionLinkFactory">The actionLinkFactory this ActionLinkBuilder should use when building links.</param>
            <param name="followsConventions">
            A value indicating whether the action link factory generates links that follow OData conventions.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ActionLinkBuilder.FollowsConventions">
            <summary>
            Gets a boolean indicating whether the link factory follows OData conventions or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionLinkBuilder.BuildActionLink(Microsoft.AspNet.OData.EntityInstanceContext)">
            <summary>
            Builds the action link for the given entity.
            </summary>
            <param name="context">An instance context wrapping the entity instance.</param>
            <returns>The generated action link.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{Microsoft.AspNet.OData.EntityInstanceContext,System.Uri},System.Func{Microsoft.AspNet.OData.EntityInstanceContext,System.Boolean})">
            <summary>
            Creates an action link factory that builds an action link, but only when appropriate based on the expensiveAvailabilityCheck, and whether expensive checks should be made,
            which is deduced by looking at the EntityInstanceContext.SkipExpensiveActionAvailabilityChecks property.
            </summary>
            <param name="baseFactory">The action link factory that actually builds links if all checks pass.</param>
            <param name="expensiveAvailabilityCheck">The availability check function that is expensive but when called returns whether the action is available.</param>
            <returns>The new action link factory.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ActionOnDeleteAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a navigation property to specify the applied
            action whether delete should also remove the associated item on the other end of the association.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ActionOnDeleteAttribute.#ctor(Microsoft.OData.Edm.EdmOnDeleteAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.ActionOnDeleteAttribute"/> class.
            </summary>
            <param name="onDeleteAction">The action applied on delete.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ActionOnDeleteAttribute.OnDeleteAction">
            <summary>
            Gets the action whether delete should also remove the associated item on the other end of the association.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.BindableProcedureFinder">
            <summary>
            This class builds a cache that allows for efficient look up of bindable procedure by EntityType. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.BindableProcedureFinder.#ctor(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Constructs a concurrent cache for looking up bindable procedures for any EntityType in the provided model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.BindableProcedureFinder.FindProcedures(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Finds procedures that can be invoked on the given entity type. This would include all the procedures that are bound
            to the given type and its base types.
            </summary>
            <param name="entityType">The EDM entity type.</param>
            <returns>A collection of procedures bound to the entity type.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.BindingParameterConfiguration">
            <summary>
            Represents a BindingParameter.
            <remarks>
            Actions/Functions can have at most one BindingParameter.
            This parameter has similar semantics to the 'this' keyword in C# extensions methods.
            <example>
            For example given a url that identifies a Movie, if there is an action that has a bindingParameter that is a Movie,
            you can bind the Action to the url.
            
            i.e. if ~/Movies(1) identifies a Movie, and there exists a Checkout action that has a Movie BindingParameter,
            you can invoke that Action at this url ~/Movies(1)/Checkout
            </example>
            The BindingParameter type must either be an EntityType or a Collection of EntityTypes.
            </remarks>
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName">
            <summary>
            The default parameter name for an action's binding parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.BindingParameterConfiguration.#ctor(System.String,Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration)">
            <summary>
            Create a BindingParameterConfiguration
            </summary>
            <param name="name">The name of the Binding Parameter</param>
            <param name="parameterType">The type of the Binding Parameter</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.CollectionPropertyConfiguration">
            <summary>
            CollectionPropertyConfiguration represents a CollectionProperty on either an EntityType or ComplexType.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Constructs a CollectionPropertyConfiguration using the <paramref name="property">property</paramref> provided.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionPropertyConfiguration.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionPropertyConfiguration.RelatedClrType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionPropertyConfiguration.ElementType">
            <summary>
            Returns the type of Elements in the Collection
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.CollectionPropertyConfiguration.IsOptional">
            <summary>
            Sets the CollectionProperty to optional (i.e. nullable).
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.CollectionPropertyConfiguration.IsRequired">
            <summary>
            Sets the CollectionProperty to required (i.e. non-nullable).
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration">
            <summary>
            Represents a Collection of some named type.
            <example>
            Collection(Namespace.Customer) or Collection(Namespace.Address).
            </example>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration.#ctor(Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration,System.Type)">
            <summary>
            Constructs a collection that contains elements of the specified ElementType
            and that is represented in CLR using the specified clrType.
            </summary>
            <param name="elementType">The EdmTypeConfiguration of the elements in the collection</param>
            <param name="clrType">The type of this collection when manifested in CLR.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration.ElementType">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration" /> of elements in this collection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration.ClrType">
            <summary>
            Gets the CLR type associated with this collection type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration.FullName">
            <summary>
            Gets the fullname (including namespace) of this collection type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration.Namespace">
            <summary>
            Gets the namespace of this collection type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration.Name">
            <summary>
            Gets the name of this collection type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration.Kind">
            <summary>
            Gets the kind of the <see cref="T:Microsoft.OData.Edm.IEdmType" />. In this case, it is <see cref="F:Microsoft.OData.Edm.EdmTypeKind.Collection" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> used to create this configuration.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ComplexPropertyConfiguration">
            <summary>
            Represents the configuration for a complex property of a structural type (an entity type or a complex type).
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.ComplexPropertyConfiguration"/> class.
            </summary>
            <param name="property">The property of the configuration.</param>
            <param name="declaringType">The declaring type of the property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ComplexPropertyConfiguration.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ComplexPropertyConfiguration.RelatedClrType">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexPropertyConfiguration.IsOptional">
            <summary>
            Marks the current complex property as optional.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexPropertyConfiguration.IsRequired">
            <summary>
            Marks the current complex property as required.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration">
            <summary>
            Allows configuration to be performed for a complex type in a model. A <see cref="T:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration"/>
            can be obtained by using the method <see cref="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.ComplexType``1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration"/> class.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration"/> class.
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> being used.</param>
            <param name="clrType">The backing CLR type for this entity type.</param>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration.BaseType">
            <summary>
            Gets or sets the base type of this complex type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration.Abstract">
            <summary>
            Marks this complex type as abstract.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration.DerivesFromNothing">
            <summary>
            Sets the base type of this complex type to <c>null</c> meaning that this complex type
            does not derive from anything.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration.DerivesFrom(Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration)">
            <summary>
            Sets the base type of this complex type.
            </summary>
            <param name="baseType">The base complex type.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration`1">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration`1.Abstract">
            <summary>
            Marks this complex type as abstract.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration`1.BaseType">
            <summary>
            Gets the base type of this complex type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration`1.DerivesFromNothing">
            <summary>
            Sets the base type of this complex type to <c>null</c> meaning that this complex type
            does not derive from anything.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ComplexTypeConfiguration`1.DerivesFrom``1">
            <summary>
            Sets the base type of this complex type.
            </summary>
            <typeparam name="TBaseType">The base complex type.</typeparam>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ContainedAttribute">
            <summary>
            Mark a navigation property as containment.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.DynamicPropertyDictionaryAnnotation">
            <summary>
            This annotation indicates the mapping from a <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> to a <see cref="P:Microsoft.AspNet.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo"/>.
            The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> is an open type and the <see cref="P:Microsoft.AspNet.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo"/> is the specific
            property which is used in an open type to save/retrieve the dynamic properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.DynamicPropertyDictionaryAnnotation.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Builder.DynamicPropertyDictionaryAnnotation"/> class.
            </summary>
            <param name="propertyInfo">The backing <see cref="P:Microsoft.AspNet.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo">
            <summary>
            Gets the <see cref="P:Microsoft.AspNet.OData.Builder.DynamicPropertyDictionaryAnnotation.PropertyInfo"/> which backs the dynamic properties of the open type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EdmTypeBuilder">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Builder.EdmTypeBuilder"/> builds <see cref="T:Microsoft.OData.Edm.IEdmType"/>'s from <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/>'s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EdmTypeBuilder.GetTypesAndProperties(System.Collections.Generic.IEnumerable{Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration})">
            <summary>
            Builds <see cref="T:Microsoft.OData.Edm.IEdmType"/> and <see cref="T:Microsoft.OData.Edm.IEdmProperty"/>'s from <paramref name="configurations"/>
            </summary>
            <param name="configurations">A collection of <see cref="T:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration"/>'s</param>
            <returns>The built dictionary of <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/>'s indexed by their backing CLR type,
            and dictionary of <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/>'s indexed by their backing CLR property info</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EdmTypeBuilder.GetTypeKind(System.Type)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.EdmPrimitiveTypeKind"/> that maps to the <see cref="T:System.Type"/>
            </summary>
            <param name="clrType">The clr type</param>
            <returns>The corresponding Edm primitive kind.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EntityCollectionConfiguration`1">
            <summary>
            EntityCollectionConfiguration represents a Collection of Entities.
            This class can be used to configure things that get bound to entities, like Actions bound to a collection.
            </summary>
            <typeparam name="TEntityType">The EntityType that is the ElementType of the EntityCollection</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
            <summary>
            Creates a new Action that binds to Collection(EntityType).
            </summary>
            <param name="name">The name of the Action</param>
            <returns>An <see cref="T:Microsoft.AspNet.OData.Builder.ActionConfiguration"/> to allow further configuration of the Action.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityCollectionConfiguration`1.Function(System.String)">
            <summary>
            Creates a new Function that binds to Collection(EntityType).
            </summary>
            <param name="name">The name of the Function</param>
            <returns>A <see cref="T:Microsoft.AspNet.OData.Builder.FunctionConfiguration"/> to allow further configuration of the Function.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EntitySetConfiguration">
            <summary>
            Allows configuration to be performed for an entity set in a model.
            A <see cref="T:Microsoft.AspNet.OData.Builder.EntitySetConfiguration"/> can be obtained by using the method <see cref="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntitySetConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.EntitySetConfiguration"/> class.
            The default constructor is intended for use by unit testing only.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntitySetConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.EntitySetConfiguration"/> class.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</param>
            <param name="entityClrType">The <see cref="T:System.Type"/> of the entity type contained in this entity set.</param>
            <param name="name">The name of the entity set.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntitySetConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,Microsoft.AspNet.OData.Builder.EntityTypeConfiguration,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.EntitySetConfiguration"/> class.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</param>
            <param name="entityType">The entity type <see cref="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration"/> contained in this entity set.</param>
            <param name="name">The name of the entity set.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{Microsoft.AspNet.OData.FeedContext,System.Uri})">
            <summary>
            Adds a self link to the feed.
            </summary>
            <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
            <returns>The navigation source configuration currently being configured.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
            <summary>
            Gets the builder used to generate self links for feeds for this navigation source.
            </summary>
            <returns>The link builder.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EntitySetConfiguration`1">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            <typeparam name="TEntityType">The element type of the entity set.</typeparam>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{Microsoft.AspNet.OData.FeedContext,System.String})">
            <summary>
            Adds a self link to the feed.
            </summary>
            <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{Microsoft.AspNet.OData.FeedContext,System.Uri})">
            <summary>
            Adds a self link to the feed.
            </summary>
            <param name="feedSelfLinkFactory">The builder used to generate the link URL.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration"/> class.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration"/> class.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> being used.</param>
            <param name="clrType">The backing CLR type for this entity type.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.Kind">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.EdmTypeKind"/> of this <see cref="T:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.NavigationProperties">
            <summary>
            Gets the collection of <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration"/> of this entity type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.Keys">
            <summary>
            Gets the collection of keys for this entity type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.EnumKeys">
            <summary>
            Gets the collection of enum keys for this entity type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.BaseType">
            <summary>
            Gets or sets the base type of this entity type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.Abstract">
            <summary>
            Marks this entity type as abstract.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
            <summary>
            Configures the key property(s) for this entity type.
            </summary>
            <param name="keyProperty">The property to be added to the key properties of this entity type.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.RemoveKey(Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration)">
            <summary>
            Removes the property from the entity keys collection.
            </summary>
            <param name="keyProperty">The key to be removed.</param>
            <remarks>This method just disable the property to be not a key anymore. It does not remove the property all together.
            To remove the property completely, use the method <see cref="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)"/></remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.RemoveKey(Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration)">
            <summary>
            Removes the enum property from the entity enum keys collection.
            </summary>
            <param name="enumKeyProperty">The key to be removed.</param>
            <remarks>This method just disable the property to be not a key anymore. It does not remove the property all together.
            To remove the property completely, use the method <see cref="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)"/></remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
            <summary>
            Sets the base type of this entity type to <c>null</c> meaning that this entity type 
            does not derive from anything.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.DerivesFrom(Microsoft.AspNet.OData.Builder.EntityTypeConfiguration)">
            <summary>
            Sets the base type of this entity type.
            </summary>
            <param name="baseType">The base entity type.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.OData.Edm.EdmMultiplicity)">
            <summary>
            Adds a non-contained EDM navigation property to this entity type.
            </summary>
            <param name="navigationProperty">The backing CLR property.</param>
            <param name="multiplicity">The <see cref="T:Microsoft.OData.Edm.EdmMultiplicity"/> of the navigation property.</param>
            <returns>Returns the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration"/> of the added property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.AddContainedNavigationProperty(System.Reflection.PropertyInfo,Microsoft.OData.Edm.EdmMultiplicity)">
            <summary>
            Adds a contained EDM navigation property to this entity type.
            </summary>
            <param name="navigationProperty">The backing CLR property.</param>
            <param name="multiplicity">The <see cref="T:Microsoft.OData.Edm.EdmMultiplicity"/> of the navigation property.</param>
            <returns>Returns the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration"/> of the added property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
            <summary>
            Removes the property from the entity.
            </summary>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/> of the property to be removed.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
            <typeparam name="TEntityType">The backing CLR type for this <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration"/>.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> being used.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.BaseType">
            <summary>
            Gets the base type of this entity type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
            <summary>
            Gets the collection of <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration"/> of this entity type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.Collection">
            <summary>
            Used to access a Collection of Entities through which you can configure
            actions and functions that are bindable to EntityCollections.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.Abstract">
            <summary>
            Marks this entity type as abstract.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
            <summary>
            Sets the base type of this entity type to <c>null</c> meaning that this entity type 
            does not derive from anything.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
            <summary>
            Sets the base type of this entity type.
            </summary>
            <typeparam name="TBaseType">The base entity type.</typeparam>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Configures the key property(s) for this entity type.
            </summary>
            <typeparam name="TKey">The type of key.</typeparam>
            <param name="keyDefinitionExpression">A lambda expression representing the property to be used as the primary key. For example, in C# t => t.Id and in Visual Basic .Net Function(t) t.Id.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Configures a many relationship from this entity type.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Configures an optional relationship from this entity type.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            Configures an optional relationship with referential constraint from this entity type.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t =&gt; t.Customer</c> and in Visual Basic .NET <c>Function(t) t.Customer</c>.</param>
            <param name="referentialConstraintExpression">A lambda expression representing the referential constraint. For example,
             in C# <c>(o, c) =&gt; o.CustomerId == c.Id</c> and in Visual Basic .NET <c>Function(o, c) c.CustomerId == c.Id</c>.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Configures a required relationship from this entity type.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship. For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            Configures a required relationship with referential constraint from this entity type.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t =&gt; t.Customer</c> and in Visual Basic .NET <c>Function(t) t.Customer</c>.</param>
            <param name="referentialConstraintExpression">A lambda expression representing the referential constraint. For example,
             in C# <c>(o, c) =&gt; o.CustomerId == c.Id</c> and in Visual Basic .NET <c>Function(o, c) c.CustomerId == c.Id</c>.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.ContainsMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Configures a relationship from this entity type to a contained collection navigation property.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for
             the relationship. For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET
             <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.ContainsOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Configures an optional relationship from this entity type to a single contained navigation property.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for
             the relationship. For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET
             <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.ContainsRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Configures a required relationship from this entity type to a single contained navigation property.
            </summary>
            <typeparam name="TTargetEntity">The type of the entity at the other end of the relationship.</typeparam>
            <param name="navigationPropertyExpression">A lambda expression representing the navigation property for
             the relationship. For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET
             <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
            <summary>
            Create an Action that binds to this EntityType.
            </summary>
            <param name="name">The name of the action.</param>
            <returns>The ActionConfiguration to allow further configuration of the new Action.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration`1.Function(System.String)">
            <summary>
            Create a Function that binds to this EntityType.
            </summary>
            <param name="name">The name of the function.</param>
            <returns>The FunctionConfiguration to allow further configuration of the new Function.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EnumMemberConfiguration">
            <summary>
            Represents the configuration for an enum member of an enum type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumMemberConfiguration.#ctor(System.Enum,Microsoft.AspNet.OData.Builder.EnumTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.EnumMemberConfiguration"/> class.
            </summary>
            <param name="member">The member of the enum type.</param>
            <param name="declaringType">The declaring type of the member.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumMemberConfiguration.Name">
            <summary>
            Gets or sets the name of the member.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumMemberConfiguration.DeclaringType">
            <summary>
            Gets the declaring type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumMemberConfiguration.MemberInfo">
            <summary>
            Gets the mapping CLR <see cref="T:System.Enum"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumMemberConfiguration.AddedExplicitly">
            <summary>
            Gets or sets a value that is <c>true</c> if the member was added by the user; <c>false</c> if it was inferred through conventions.
            </summary>
            <remarks>The default value is <c>true</c></remarks>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration">
            <summary>
            Used to configure an enum property of an entity type or complex type.
            This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration"/> class.
            </summary>
            <param name="property">The property of the configuration.</param>
            <param name="declaringType">The declaring type of the property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration.Kind">
            <summary>
            Gets the type of this property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration.RelatedClrType">
            <summary>
            Gets the backing CLR type of this property type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration.IsOptional">
            <summary>
            Configures the property to be optional.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration.IsRequired">
            <summary>
            Configures the property to be required.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration.IsConcurrencyToken">
            <summary>
            Configures the property to be used in concurrency checks. For OData this means to be part of the ETag.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmEnumType"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.Kind">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.EdmTypeKind"/> of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.IsFlags">
            <summary>
            Gets the <see cref="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.IsFlags"/> of this enum type. 
            If it is true, a combined value is equivalent to the bitwise OR of the discrete values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.ClrType">
            <summary>
            Gets the backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.UnderlyingType">
            <summary>
            Gets this enum underlying <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.FullName">
            <summary>
            Gets the full name of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.Namespace">
            <summary>
            Gets or sets the namespace of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.Name">
            <summary>
            Gets or sets the name of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.Members">
            <summary>
            Gets all possible members(defined values) of this enum type, which will be added to the EDM model as edm:Member elements.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.IgnoredMembers">
            <summary>
            Gets the members from the backing CLR type that are to be ignored on this enum type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.AddedExplicitly">
            <summary>
            Gets or sets a value that is <c>true</c> if the type's name or namespace was set by the user; 
            <c>false</c> if it was inferred through conventions.
            </summary>
            <remarks>The default value is <c>false</c>.</remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.ModelBuilder">
            <summary>
            Get the <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.RemovedMembers">
            <summary>
            Gets the collection of explicitly removed members.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.ExplicitMembers">
            <summary>
            Gets the collection of explicitly added members.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.AddMember(System.Enum)">
            <summary>
            Adds an enum member to this enum type.
            </summary>
            <param name="member">The member being added.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.EnumMemberConfiguration"/> so that the member can be configured further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration.RemoveMember(System.Enum)">
            <summary>
            Removes the given member.
            </summary>
            <param name="member">The member being removed.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration`1">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmEnumType"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration`1.Members">
            <summary>
            Gets the collection of EDM enum members that belong to this type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration`1.FullName">
            <summary>
            Gets the full name of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration`1.Namespace">
            <summary>
            Gets or sets the namespace of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration`1.Name">
            <summary>
            Gets or sets the name of this EDM type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration`1.RemoveMember(`0)">
            <summary>
            Excludes a member from the type.
            </summary>
            <param name="member">The member being excluded.</param>
            <remarks>This method is used to exclude members from the enum type that would have been added by convention during model discovery.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.EnumTypeConfiguration`1.Member(`0)">
            <summary>
            Adds a required enum member to the EDM type.
            </summary>
            <param name="enumMember">The member being added.</param>
            <returns>A configuration object that can be used to further configure the type.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.FunctionConfiguration">
            <summary>
            FunctionConfiguration represents an OData function that you wish to expose via your service.
            <remarks>
            FunctionConfigurations are exposed via $metadata as a <Function/> element for bound function and <FunctionImport/> element for unbound function.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Builder.FunctionConfiguration" /> class.
            </summary>
            <param name="builder">The ODataModelBuilder to which this FunctionConfiguration should be added.</param>
            <param name="name">The name of this FunctionConfiguration.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.FunctionConfiguration.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.FunctionConfiguration.IsComposable">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.FunctionConfiguration.IsSideEffecting">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.FunctionConfiguration.SupportedInFilter">
            <summary>
            Gets/Sets a value indicating whether the function is supported in $filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.FunctionConfiguration.SupportedInOrderBy">
            <summary>
            Gets/Sets a value indicating whether the function is supported in $orderby.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.FunctionConfiguration.IncludeInServiceDocument">
            <summary>
            Gets/Set a value indicating whether the procedure is included in service document or not.
            Meaningful only for function imports; ignore for bound functions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.HasFunctionLink(System.Func{Microsoft.AspNet.OData.EntityInstanceContext,System.Uri},System.Boolean)">
            <summary>
            Register a factory that creates functions links.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.GetFunctionLink">
            <summary>
            Retrieves the currently registered function link factory.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.ReturnsFromEntitySet``1(System.String)">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetName">The entitySetName which contains the return EntityType instance</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
            <summary>
            Sets the return type to a collection of EntityType instances.
            </summary>
            <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetName">The entitySetName which contains the returned EntityType instances</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.Returns``1">
            <summary>
            Established the return type of the Function.
            <remarks>Used when the return type is a single Primitive or ComplexType.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.ReturnsCollection``1">
            <summary>
            Establishes the return type of the Function
            <remarks>Used when the return type is a collection of either Primitive or ComplexTypes.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.SetBindingParameter(System.String,Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration)">
            <summary>
            Specifies the bindingParameter name, type and whether it is alwaysBindable, use only if the Function "isBindable".
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.ReturnsEntityViaEntitySetPath``1(System.String)">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.ReturnsEntityViaEntitySetPath``1(System.String[])">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.ReturnsCollectionViaEntitySetPath``1(System.String)">
            <summary>
            Sets the return type to a collection of EntityType instances.
            </summary>
            <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionConfiguration.ReturnsCollectionViaEntitySetPath``1(System.String[])">
            <summary>
            Sets the return type to a collection of EntityType instances.
            </summary>
            <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.FunctionLinkBuilder">
            <summary>
            FunctionLinkBuilder can be used to annotate an Function.
            This is how formatters create links to invoke bound functions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionLinkBuilder.#ctor(System.Func{Microsoft.AspNet.OData.EntityInstanceContext,System.Uri},System.Boolean)">
            <summary>
            Create a new FunctionLinkBuilder based on an functionLinkFactory.
            <remarks>
            If the function is not available the functionLinkFactory delegate should return NULL.
            </remarks>
            </summary>
            <param name="functionLinkFactory">The functionLinkFactory this FunctionLinkBuilder should use when building links.</param>
            <param name="followsConventions">
            A value indicating whether the function link factory generates links that follow OData conventions.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.FunctionLinkBuilder.FollowsConventions">
            <summary>
            Gets a boolean indicating whether the link factory follows OData conventions or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionLinkBuilder.BuildFunctionLink(Microsoft.AspNet.OData.EntityInstanceContext)">
            <summary>
            Builds the function link for the given entity.
            </summary>
            <param name="context">An instance context wrapping the entity instance.</param>
            <returns>The generated function link.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.FunctionLinkBuilder.CreateFunctionLinkFactory(System.Func{Microsoft.AspNet.OData.EntityInstanceContext,System.Uri},System.Func{Microsoft.AspNet.OData.EntityInstanceContext,System.Boolean})">
            <summary>
            Creates an function link factory that builds an function link, but only when appropriate based on the expensiveAvailabilityCheck, and whether expensive checks should be made,
            which is deduced by looking at the EntityInstanceContext.SkipExpensiveFunctionAvailabilityChecks property.
            </summary>
            <param name="baseFactory">The function link factory that actually builds links if all checks pass.</param>
            <param name="expensiveAvailabilityCheck">The availability check function that is expensive but when called returns whether the function is available.</param>
            <returns>The new function link factory.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration">
            <summary>
            Represents an EdmType
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration.ClrType">
            <summary>
            The CLR type associated with the EdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration.FullName">
            <summary>
            The fullname (including namespace) of the EdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration.Namespace">
            <summary>
            The namespace of the EdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration.Name">
            <summary>
            The name of the EdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration.Kind">
            <summary>
            The kind of the EdmType.
            Examples include EntityType, ComplexType, PrimitiveType, CollectionType, EnumType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
            <summary>
            The ODataModelBuilder used to create this IEdmType.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration">
            <summary>
            Represents a navigation source
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.Bindings">
            <summary>
            Gets the navigation targets of <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.EntityType">
            <summary>
            Gets the entity type contained in this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.ClrType">
            <summary>
            Gets the backing <see cref="T:System.Type"/> for the entity type contained in this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.Name">
            <summary>
            Gets the name of this navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.HasUrl(System.String)">
            <summary>
            Configures the navigation source URL.
            </summary>
            <param name="url">The navigation source URL.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.HasEditLink(Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Configures the edit link for this navigation source.
            </summary>
            <param name="editLinkBuilder">The builder used to generate the edit link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.HasReadLink(Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Configures the read link for this navigation source.
            </summary>
            <param name="readLinkBuilder">The builder used to generate the read link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.HasIdLink(Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Configures the ID link for this navigation source.
            </summary>
            <param name="idLinkBuilder">The builder used to generate the ID.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.HasNavigationPropertyLink(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,Microsoft.AspNet.OData.Builder.NavigationLinkBuilder)">
            <summary>
            Configures the navigation link for the given navigation property for this navigation source.
            </summary>
            <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
            <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration},Microsoft.AspNet.OData.Builder.NavigationLinkBuilder)">
            <summary>
            Configures the navigation link for the given navigation properties for this navigation source.
            </summary>
            <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
            <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.AddBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration)">
            <summary>
            Binds the given navigation property to the target navigation source.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <param name="targetNavigationSource">The target navigation source.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> so that it can be further configured.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.RemoveBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Removes the binding for the given navigation property.
            </summary>
            <param name="navigationConfiguration">The navigation property</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.FindBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Finds the binding for the given navigation property and tries to create it if it doesnot exist.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> so that it can be further configured.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.FindBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
            <summary>
            Finds the binding for the given navigation property.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <param name="autoCreate">Tells whether the binding should be auto created if it does not exist.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> so that it can be further configured.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.GetUrl">
            <summary>
            Gets the navigation source URL.
            </summary>
            <returns>The navigation source URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.GetEditLink">
            <summary>
            Gets the builder used to generate edit links for this navigation source.
            </summary>
            <returns>The link builder.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.GetReadLink">
            <summary>
            Gets the builder used to generate read links for this navigation source.
            </summary>
            <returns>The link builder.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.GetIdLink">
            <summary>
            Gets the builder used to generate ID for this navigation source.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.GetNavigationPropertyLink(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Gets the builder used to generate navigation link for the given navigation property for this navigation source.
            </summary>
            <param name="navigationProperty">The navigation property.</param>
            <returns>The link builder.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration.FindBinding(System.String)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> for the navigation property with the given name.
            </summary>
            <param name="propertyName">The name of the navigation property.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration" />.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.LinkGenerationHelpers">
            <summary>
            Contains helper methods for generating OData links that follow OData URL conventions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.LinkGenerationHelpers.GenerateSelfLink(Microsoft.AspNet.OData.EntityInstanceContext,System.Boolean)">
            <summary>
            Generates a self link following the OData URL conventions for the entity represented by <paramref name="entityContext"/>.
            </summary>
            <param name="entityContext">The <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext"/> representing the entity for which the self link needs to be generated.</param>
            <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
            <returns>The self link following the OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.LinkGenerationHelpers.GenerateNavigationPropertyLink(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmNavigationProperty,System.Boolean)">
            <summary>
            Generates a navigation link following the OData URL conventions for the entity represented by <paramref name="entityContext"/> and the given 
            navigation property.
            </summary>
            <param name="entityContext">The <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext"/> representing the entity for which the navigation link needs to be generated.</param>
            <param name="navigationProperty">The EDM navigation property.</param>
            <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
            <returns>The navigation link following the OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.LinkGenerationHelpers.GenerateActionLink(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Generates an action link following the OData URL conventions for the action <paramref name="action"/> and bound to the entity
            represented by <paramref name="entityContext"/>.
            </summary>
            <param name="entityContext">The <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext"/> representing the entity for which the action link needs to be generated.</param>
            <param name="action">The action for which the action link needs to be generated.</param>
            <returns>The generated action link following OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.LinkGenerationHelpers.GenerateFunctionLink(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Generates an function link following the OData URL conventions for the function <paramref name="function"/> and bound to the entity
            represented by <paramref name="entityContext"/>.
            </summary>
            <param name="entityContext">The <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext"/> representing the entity for which the function link needs to be generated.</param>
            <param name="function">The function for which the function link needs to be generated.</param>
            <returns>The generated function link following OData URL conventions.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.LowerCamelCaser">
            <summary>
            Default lower camel caser to resolve property names for <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/>.
            The rule is to convert the leading upper case characters to lower case, 
            until a character, which is not the first character and is followed by a non-upper case character, is met.
            id => id, ID => id, MyName => myName, IOStream => ioStream, MyID => myid, yourID => yourID
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.LowerCamelCaser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.LowerCamelCaser"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.LowerCamelCaser.#ctor(Microsoft.AspNet.OData.Builder.NameResolverOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.LowerCamelCaser"/> class.
            </summary>
            <param name="options">Name resolver options for camelizing.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.LowerCamelCaser.ApplyLowerCamelCase(Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies lower camel case.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/> to be applied on.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.LowerCamelCaser.ToLowerCamelCase(System.String)">
            <summary>
            Converts a <see cref="T:System.String"/> to lower camel case.
            </summary>
            <param name="name">The name to be converted with lower camel case.</param>
            <returns>The converted name.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NameResolverOptions">
            <summary>
            Options for resolving names.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.NameResolverOptions.ProcessReflectedPropertyNames">
            <summary>
            Process reflected property names.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.NameResolverOptions.ProcessDataMemberAttributePropertyNames">
            <summary>
            Process property names in DataMemberAttribute
            such as [DataMember(Name = "DataMemberCustomerName")].
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.NameResolverOptions.ProcessExplicitPropertyNames">
            <summary>
            Process explicit property names
            such as entityTypeConfiguration.Property(e => e.Key).Name="Id".
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NavigationLinkBuilder">
            <summary>
            Encapsulates a navigation link factory and whether the link factory follows conventions or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationLinkBuilder"/> class.
            </summary>
            <param name="navigationLinkFactory">The navigation link factory for creating navigation links.</param>
            <param name="followsConventions">Represents whether this factory follows OData conventions or not.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationLinkBuilder.Factory">
            <summary>
            Gets the navigation link factory for creating navigation links.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationLinkBuilder.FollowsConventions">
            <summary>
            Gets a value representing whether this factory follows OData conventions or not.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration">
            <summary>
            Used to configure the binding for a navigation property for a navigation source.
            This configuration functionality is exposed by the model builder Fluent API, see <see
            cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> class.
            </summary>
            <param name="navigationProperty">The navigation property for the binding.</param>
            <param name="navigationSource">The target navigation source of the binding.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
            <summary>
            Gets the navigation property of the binding.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration.TargetNavigationSource">
            <summary>
            Gets the target navigation source of the binding.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration">
            <summary>
            Represents the configuration for a navigation property of an entity type.
            </summary>
            <remarks>This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.OData.Edm.EdmMultiplicity,Microsoft.AspNet.OData.Builder.EntityTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration"/> class.
            </summary>
            <param name="property">The backing CLR property.</param>
            <param name="multiplicity">The <see cref="T:Microsoft.OData.Edm.EdmMultiplicity"/>.</param>
            <param name="declaringType">The declaring entity type.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType">
            <summary>
            Gets the declaring entity type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.Multiplicity">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.EdmMultiplicity"/> of this navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.ContainsTarget">
            <summary>
            Gets whether this navigation property is a containment, default to false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.RelatedClrType">
            <summary>
            Gets the backing CLR type of this property type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.Kind">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.PropertyKind"/> of this property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.OnDeleteAction">
            <summary>
            Gets or sets the delete action for this navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.DependentProperties">
            <summary>
            Gets the foreign keys in the referential constraint of this navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.PrincipalProperties">
            <summary>
            Gets the target keys in the referential constraint of this navigation property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.Optional">
            <summary>
            Marks the navigation property as optional.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.Required">
            <summary>
            Marks the navigation property as required.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.Contained">
            <summary>
            Marks the navigation property as containment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.NonContained">
            <summary>
            Marks the navigation property as non-contained.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.CascadeOnDelete">
            <summary>
            Configures cascade delete to be on for the navigation property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.CascadeOnDelete(System.Boolean)">
            <summary>
            Configures whether or not cascade delete is on for the navigation property.
            </summary>
            <param name="cascade"><c>true</c> indicates delete should also remove the associated items;
            <c>false</c> indicates no additional action on delete.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.HasConstraint(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
            <summary>
            Configures the referential constraint with the specified <parameref name="dependentPropertyInfo"/>
            and <parameref name="principalPropertyInfo" />.
            </summary>
            <param name="dependentPropertyInfo">The dependent property info for the referential constraint.</param>
            <param name="principalPropertyInfo">The principal property info for the referential constraint.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration.HasConstraint(System.Collections.Generic.KeyValuePair{System.Reflection.PropertyInfo,System.Reflection.PropertyInfo})">
            <summary>
            Configures the referential constraint with the dependent and principal property pair.
            </summary>
            <param name="constraint">The dependent and principal property pair.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NavigationSourceAndAnnotations">
            <summary>
            This class is used in internal as a helper class to build the Edm model.
            This class wrappers a relationship between Edm type and the CLR type configuration.
            This relationship is used to builder the navigation property and the corresponding links.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration">
            <summary>
            Allows configuration to be performed for a navigation source (entity set, singleton) in a model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration"/> class.
            The default constructor is intended for use by unit testing only.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration"/> class.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</param>
            <param name="entityClrType">The <see cref="T:System.Type"/> of the entity type contained in this navigation source.</param>
            <param name="name">The name of the navigation source.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,Microsoft.AspNet.OData.Builder.EntityTypeConfiguration,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration"/> class.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</param>
            <param name="entityType">The entity type <see cref="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration"/> contained in this navigation source.</param>
            <param name="name">The name of the navigation source.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.Bindings">
            <summary>
            Gets the navigation targets of <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.EntityType">
            <summary>
            Gets the entity type contained in this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.ClrType">
            <summary>
            Gets the backing <see cref="T:System.Type"/> for the entity type contained in this navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.Name">
            <summary>
            Gets the name of this navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.HasUrl(System.String)">
            <summary>
            Configures the navigation source URL.
            </summary>
            <param name="url">The navigation source URL.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.HasEditLink(Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Configures the edit link for this navigation source.
            </summary>
            <param name="editLinkBuilder">The builder used to generate the edit link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.HasReadLink(Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Configures the read link for this navigation source.
            </summary>
            <param name="readLinkBuilder">The builder used to generate the read link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.HasIdLink(Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Configures the ID link for this navigation source.
            </summary>
            <param name="idLinkBuilder">The builder used to generate the ID.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.HasNavigationPropertyLink(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,Microsoft.AspNet.OData.Builder.NavigationLinkBuilder)">
            <summary>
            Configures the navigation link for the given navigation property for this navigation source.
            </summary>
            <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
            <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration},Microsoft.AspNet.OData.Builder.NavigationLinkBuilder)">
            <summary>
            Configures the navigation link for the given navigation properties for this navigation source.
            </summary>
            <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
            <param name="navigationLinkBuilder">The builder used to generate the navigation link.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.AddBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,Microsoft.AspNet.OData.Builder.INavigationSourceConfiguration)">
            <summary>
            Binds the given navigation property to the target navigation source.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <param name="targetNavigationSource">The target navigation source.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> so that it can be further configured.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.RemoveBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Removes the binding for the given navigation property.
            </summary>
            <param name="navigationConfiguration">The navigation property</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.FindBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Finds the binding for the given navigation property and tries to create it if it doesnot exist.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> so that it can be further configured.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.FindBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
            <summary>
            Finds the binding for the given navigation property.
            </summary>
            <param name="autoCreate">Tells whether the binding should be auto created if it does not exist.</param>
            <param name="navigationConfiguration">The navigation property.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> so that it can be further configured.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.GetUrl">
            <summary>
            Gets the navigation source URL.
            </summary>
            <returns>The navigation source URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.GetEditLink">
            <summary>
            Gets the builder used to generate edit links for this navigation source.
            </summary>
            <returns>The link builder.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.GetReadLink">
            <summary>
            Gets the builder used to generate read links for this navigation source.
            </summary>
            <returns>The link builder.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.GetIdLink">
            <summary>
            Gets the builder used to generate ID for this navigation source.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.GetNavigationPropertyLink(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Gets the builder used to generate navigation link for the given navigation property for this navigation source.
            </summary>
            <param name="navigationProperty">The navigation property.</param>
            <returns>The link builder.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration.FindBinding(System.String)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> for the navigation property with the given name.
            </summary>
            <param name="propertyName">The name of the navigation property.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration" />.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            <typeparam name="TEntityType">The entity type of the navigation source.</typeparam>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.EntityType">
            <summary>
            Gets the entity type contained in this navigation source configuration.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
            <summary>
            Configures an one-to-many relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
            <summary>
            Configures an one-to-many relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration{``0})">
            <summary>
            Configures an one-to-many relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration{``0})">
            <summary>
            Configures an one-to-many relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            Configures a required relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
            <summary>
            Configures a required relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration{``0})">
            <summary>
            Configures a required relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration{``0})">
            <summary>
            Configures a required relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            Configures an optional relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
            <summary>
            Configures an optional relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="entitySetName">The target navigation source (entity set) name for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration{``0})">
            <summary>
            Configures an optional relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration{``0})">
            <summary>
            Configures an optional relationship from this entity type and binds the corresponding navigation property to
            the given entity set.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="targetEntitySet">The target navigation source (entity set) for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasSingletonBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            Configures a required relationship from this entity type and binds the corresponding navigation property to
            the given singleton.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="singletonName">The target navigation source (singleton) name for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasSingletonBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
            <summary>
            Configures a required relationship from this entity type and binds the corresponding navigation property to
            the given singleton.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="singletonName">The target navigation source (singleton) name for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasSingletonBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration{``0})">
            <summary>
            Configures a required relationship from this entity type and binds the corresponding navigation property to
            the given singleton.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="targetSingleton">The target navigation source (singleton) for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasSingletonBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration{``0})">
            <summary>
            Configures a required relationship from this entity type and binds the corresponding navigation property to
            the given singleton.
            </summary>
            <typeparam name="TTargetType">The target navigation source type.</typeparam>
            <typeparam name="TDerivedEntityType">The target entity type.</typeparam>
            <param name="navigationExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <param name="targetSingleton">The target singleton for the binding.</param>
            <returns>A configuration object that can be used to further configure the relationship further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasEditLink(System.Func{Microsoft.AspNet.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
            <summary>
            Configures the edit link for the entities from this navigation source.
            </summary>
            <param name="editLinkFactory">The factory used to generate the edit link.</param>
            <param name="followsConventions"><c>true</c> if the factory follows OData edit link conventions;
            otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasReadLink(System.Func{Microsoft.AspNet.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
            <summary>
            Configures the read link for the entities from this navigation source.
            </summary>
            <param name="readLinkFactory">The factory used to generate the read link.</param>
            <param name="followsConventions"><c>true</c> if the factory follows OData read link conventions;
            otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasIdLink(System.Func{Microsoft.AspNet.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
            <summary>
            Configures the ID link for the entities from this navigation source.
            </summary>
            <param name="idLinkFactory">The factory used to generate the ID link.</param>
            <param name="followsConventions"><c>true</c> if the factory follows OData ID link conventions;
            otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasNavigationPropertyLink(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,System.Func{Microsoft.AspNet.OData.EntityInstanceContext{`0},Microsoft.OData.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
            <summary>
            Configures the navigation link for the given navigation property for entities from this navigation source.
            </summary>
            <param name="navigationProperty">The navigation property for which the navigation link is being generated.</param>
            <param name="navigationLinkFactory">The factory used to generate the navigation link.</param>
            <param name="followsConventions"><c>true</c> if the factory follows OData navigation link conventions;
            otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration},System.Func{Microsoft.AspNet.OData.EntityInstanceContext{`0},Microsoft.OData.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
            <summary>
            Configures the navigation link for the given navigation properties for entities from this navigation source.
            </summary>
            <param name="navigationProperties">The navigation properties for which the navigation link is being generated.</param>
            <param name="navigationLinkFactory">The factory used to generate the navigation link.</param>
            <param name="followsConventions"><c>true</c> if the factory follows OData navigation link conventions;
            otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.FindBinding(System.String)">
            <summary>
            Finds the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> for the navigation property with the given name.
            </summary>
            <param name="propertyName">The name of the navigation property.</param>
            <returns>The binding, if found; otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.FindBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration)">
            <summary>
            Finds the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> for the given navigation property and
            creates it if it does not exist.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <returns>The binding if found else the created binding.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration`1.FindBinding(Microsoft.AspNet.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
            <summary>
            Finds the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationPropertyBindingConfiguration"/> for the given navigation property.
            </summary>
            <param name="navigationConfiguration">The navigation property.</param>
            <param name="autoCreate">Represents a value specifying if the binding should be created if it is not found.</param>
            <returns>The binding if found.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> is a class used to annotate an <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource" /> inside an <see cref="T:Microsoft.OData.Edm.IEdmModel" />
            with information about how to build links related to that navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> class.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.#ctor(Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation"/> class.
            </summary>
            <param name="navigationSource">The navigation source for which the link builder is being constructed.</param>
            <param name="model">The EDM model that this navigation source belongs to.</param>
            <remarks>This constructor creates a link builder that generates URL's that follow OData conventions for the given navigation source.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.#ctor(Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri},Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri},Microsoft.AspNet.OData.Builder.SelfLinkBuilder{System.Uri})">
            <summary>
            Constructs an instance of an <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> class.
            </summary>
            <param name="navigationSource">The navigation source for which the link builder is being constructed.</param>
            <param name="idLinkBuilder">The ID link builder which is used to build the ID link.</param>
            <param name="editLinkBuilder">The Edit link builder which is used to build the Edit link.</param>
            <param name="readLinkBuilder">The Read link builder which is used to build the Read link.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.#ctor(Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration)">
            <summary>
            Constructs an instance of an <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation" /> from an <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceConfiguration" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.AddNavigationPropertyLinkBuilder(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.AspNet.OData.Builder.NavigationLinkBuilder)">
            <summary>
            Register a link builder for a <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty" /> that navigates from Entities in this navigation source. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildEntitySelfLinks(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.AspNet.OData.Formatter.ODataMetadataLevel)">
            <summary>
            Constructs the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.EntitySelfLinks" /> for a particular <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext" /> and <see cref="T:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildIdLink(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.AspNet.OData.Formatter.ODataMetadataLevel)">
            <summary>
            Constructs the IdLink for a particular <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext" /> and <see cref="T:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildEditLink(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.AspNet.OData.Formatter.ODataMetadataLevel,System.Uri)">
            <summary>
            Constructs the EditLink URL for a particular <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext" /> and <see cref="T:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildReadLink(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.AspNet.OData.Formatter.ODataMetadataLevel,System.Uri)">
            <summary>
            Constructs a ReadLink URL for a particular <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext" /> and <see cref="T:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation.BuildNavigationLink(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.AspNet.OData.Formatter.ODataMetadataLevel)">
            <summary>
            Constructs a NavigationLink for a particular <see cref="T:Microsoft.AspNet.OData.EntityInstanceContext" />, <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty" /> and <see cref="T:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.NonbindingParameterConfiguration">
            <summary>
            Represents a non-binding procedure parameter.
            <remarks>
            Non binding parameters are provided in the POST body for Actions
            Non binding parameters are provided in 3 ways for Functions
            - ~/.../Function(p1=value)
            - ~/.../Function(p1=@x)?@x=value
            - ~/.../Function?p1=value (only allowed if the Function is the last url path segment).
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.NonbindingParameterConfiguration"/> class.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="parameterType">The EDM type of the parameter.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NullableEnumTypeConfiguration.ClrType">
            <summary>
            The CLR type associated with the nullable enum type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NullableEnumTypeConfiguration.FullName">
            <summary>
            The fullname (including namespace) of the EdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NullableEnumTypeConfiguration.Namespace">
            <summary>
            The namespace of the EdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NullableEnumTypeConfiguration.Name">
            <summary>
            The name of the EdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NullableEnumTypeConfiguration.Kind">
            <summary>
            The kind of the EdmType.
            Examples include EntityType, ComplexType, PrimitiveType, CollectionType, EnumType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NullableEnumTypeConfiguration.ModelBuilder">
            <summary>
            The ODataModelBuilder used to create this IEdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.NullableEnumTypeConfiguration.EnumTypeConfiguration">
            <summary>
            The EnumTypeConfiguration used to create this class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ODataActionAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a method to specify
            that the method represents a OData Action. It's used in DefaultODataModelProvider.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/> is used to automatically map CLR classes to an EDM model based on a set of <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.IConvention"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.#ctor(Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/>.
            </summary>
            <param name="assemblyProvider">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider"/> to use.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.#ctor(Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/> class.
            </summary>
            <param name="assemblyProvider">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider"/> to use.</param>
            <param name="isQueryCompositionMode">If the model is being built for only querying.</param>
            <remarks>The model built if <paramref name="isQueryCompositionMode"/> is <c>true</c> has more relaxed
            inference rules and also treats all types as entity types. This constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.ModelAliasingEnabled">
            <summary>
            Gets or sets if model aliasing is enabled or not. The default value is true.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
            <summary>
            This action is invoked after the <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/> has run all the conventions, but before the configuration is locked
            down and used to build the <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.
            </summary>
            <remarks>Use this action to modify the <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> configuration that has been inferred by convention.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.Ignore``1">
            <summary>
            Excludes a type from the model. This is used to remove types from the model that were added by convention during initial model discovery.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>The same <c ref="ODataConventionModelBuilder"/> so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
            <summary>
            Excludes a type or types from the model. This is used to remove types from the model that were added by convention during initial model discovery.
            </summary>
            <param name="types">The types to be excluded from the model.</param>
            <returns>The same <c ref="ODataConventionModelBuilder"/> so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.AddEntityType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,Microsoft.AspNet.OData.Builder.EntityTypeConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.AddSingleton(System.String,Microsoft.AspNet.OData.Builder.EntityTypeConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.AddEnumType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.GetEdmModel">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder.ValidateModel(Microsoft.OData.Edm.IEdmModel)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilderExtensions.EnableLowerCamelCase(Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Enable lower camel case with default <see cref="T:Microsoft.AspNet.OData.Builder.NameResolverOptions"/>
            NameResolverOptions.ProcessReflectedPropertyNames |
            NameResolverOptions.ProcessDataMemberAttributePropertyNames |
            NameResolverOptions.ProcessExplicitPropertyNames.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/> to be enabled with lower camel case.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilderExtensions.EnableLowerCamelCase(Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder,Microsoft.AspNet.OData.Builder.NameResolverOptions)">
            <summary>
            Enable lower camel case with given <see cref="T:Microsoft.AspNet.OData.Builder.NameResolverOptions"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/> to be enabled with lower camel case.</param>
            <param name="options">The <see cref="T:Microsoft.AspNet.OData.Builder.NameResolverOptions"/> for the lower camel case.</param>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ODataFunctionAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a method to specify
            that the method represents a OData Function. It's used in DefaultODataModelProvider.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> is used to map CLR classes to an EDM model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.Namespace">
            <summary>
            Gets or sets the namespace that will be used for the resulting model
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.ContainerName">
            <summary>
            Gets or sets the name of the container that will hold all the navigation sources, actions and functions
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.DataServiceVersion">
            <summary>
            Gets or sets the data service version of the model. The default value is 4.0.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
            <summary>
            Gets or sets the maximum data service version of the model. The default value is 4.0.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.EntitySets">
            <summary>
            Gets the collection of EDM entity sets in the model to be built.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.StructuralTypes">
            <summary>
            Gets the collection of EDM types in the model to be built.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.EnumTypes">
            <summary>
            Gets the collection of EDM types in the model to be built.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.Singletons">
            <summary>
            Gets the collection of EDM singletons in the model to be built.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.NavigationSources">
            <summary>
            Gets the collection of EDM navigation sources (entity sets and singletons) in the model to be built.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.Procedures">
            <summary>
            Gets the collection of Procedures (i.e. Actions, Functions and ServiceOperations) in the model to be built.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.EntityType``1">
            <summary>
            Registers an entity type as part of the model and returns an object that can be used to configure the entity type.
            This method can be called multiple times for the same entity to perform multiple lines of configuration.
            </summary>
            <typeparam name="TEntityType">The type to be registered or configured.</typeparam>
            <returns>The configuration object for the specified entity type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.ComplexType``1">
            <summary>
            Registers a type as a complex type in the model and returns an object that can be used to configure the complex type.
            This method can be called multiple times for the same type to perform multiple lines of configuration.
            </summary>
            <typeparam name="TComplexType">The type to be registered or configured.</typeparam>
            <returns>The configuration object for the specified complex type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
            <summary>
            Registers an entity set as a part of the model and returns an object that can be used to configure the entity set.
            This method can be called multiple times for the same type to perform multiple lines of configuration.
            </summary>
            <typeparam name="TEntityType">The entity type of the entity set.</typeparam>
            <param name="name">The name of the entity set.</param>
            <returns>The configuration object for the specified entity set.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.EnumType``1">
            <summary>
            Registers an enum type as part of the model and returns an object that can be used to configure the enum.
            </summary>
            <typeparam name="TEnumType">The enum type to be registered or configured.</typeparam>
            <returns>The configuration object for the specified enum type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.Singleton``1(System.String)">
            <summary>
            Registers a singleton as a part of the model and returns an object that can be used to configure the singleton.
            This method can be called multiple times for the same type to perform multiple lines of configuration.
            </summary>
            <typeparam name="TEntityType">The entity type of the singleton.</typeparam>
            <param name="name">The name of the singleton.</param>
            <returns>The configuration object for the specified singleton.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.Action(System.String)">
            <summary>
            Adds an unbound action to the builder.
            </summary>
            <param name="name">The name of the action.</param>
            <returns>The configuration object for the specified action.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.Function(System.String)">
            <summary>
            Adds an unbound function to the builder.
            </summary>
            <param name="name">The name of the function.</param>
            <returns>The configuration object for the specified function.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.AddEntityType(System.Type)">
            <summary>
            Registers an entity type as part of the model and returns an object that can be used to configure the entity.
            This method can be called multiple times for the same entity to perform multiple lines of configuration.
            </summary>
            <param name="type">The type to be registered or configured.</param>
            <returns>The configuration object for the specified entity type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.AddPrimitiveType(System.Type)">
            <summary>
            Registers an entity type as part of the model and returns an object that can be used to configure the entity.
            This method can be called multiple times for the same entity to perform multiple lines of configuration.
            </summary>
            <param name="type">The type to be registered or configured.</param>
            <returns>The configuration object for the specified entity type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
            <summary>
            Registers an complex type as part of the model and returns an object that can be used to configure the entity.
            This method can be called multiple times for the same entity to perform multiple lines of configuration.
            </summary>
            <param name="type">The type to be registered or configured.</param>
            <returns>The configuration object for the specified complex type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.AddEnumType(System.Type)">
            <summary>
            Registers an enum type as part of the model and returns an object that can be used to configure the enum type.
            </summary>
            <param name="type">The type to be registered or configured.</param>
            <returns>The configuration object for the specified enum type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.AddProcedure(Microsoft.AspNet.OData.Builder.ProcedureConfiguration)">
            <summary>
            Adds a procedure to the model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,Microsoft.AspNet.OData.Builder.EntityTypeConfiguration)">
            <summary>
            Registers an entity set as a part of the model and returns an object that can be used to configure the entity set.
            This method can be called multiple times for the same type to perform multiple lines of configuration.
            </summary>
            <param name="name">The name of the entity set.</param>
            <param name="entityType">The type to be registered or configured.</param>
            <returns>The configuration object for the specified entity set.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.AddSingleton(System.String,Microsoft.AspNet.OData.Builder.EntityTypeConfiguration)">
            <summary>
            Registers a singleton as a part of the model and returns an object that can be used to configure the singleton.
            This method can be called multiple times for the same type to perform multiple lines of configuration.
            </summary>
            <param name="name">The name of the singleton.</param>
            <param name="entityType">The type to be registered or configured.</param>
            <returns>The configuration object for the specified singleton.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
            <summary>
            Removes the type from the model.
            </summary>
            <param name="type">The type to be removed.</param>
            <returns><c>true</c> if the type is present in the model and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.RemoveEnumType(System.Type)">
            <summary>
            Removes the type from the model.
            </summary>
            <param name="type">The type to be removed.</param>
            <returns><c>true</c> if the type is present in the model and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
            <summary>
            Removes the entity set from the model.
            </summary>
            <param name="name">The name of the entity set to be removed.</param>
            <returns><c>true</c> if the entity set is present in the model and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.RemoveSingleton(System.String)">
            <summary>
            Removes the singleton from the model.
            </summary>
            <param name="name">The name of the singleton to be removed.</param>
            <returns><c>true</c> if the singleton is present in the model and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
            <summary>
            Remove the procedure from the model
            <remarks>
            If there is more than one procedure with the name specified this method will not work.
            You need to use the other RemoveProcedure(..) overload instead.
            </remarks>
            </summary>
            <param name="name">The name of the procedure to be removed.</param>
            <returns><c>true</c> if the procedure is present in the model and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.RemoveProcedure(Microsoft.AspNet.OData.Builder.ProcedureConfiguration)">
            <summary>
            Remove the procedure from the model
            </summary>
            <param name="procedure">The procedure to be removed.</param>
            <returns><c>true</c> if the procedure is present in the model and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
            <summary>
            Attempts to find a pre-configured structural type or a primitive type or an enum type that matches the T.
            If no matches are found NULL is returned.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.GetEdmModel">
            <summary>
            Creates a <see cref="T:Microsoft.OData.Edm.IEdmModel"/> based on the configuration performed using this builder.
            </summary>
            <returns>The model that was built.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ODataModelBuilder.ValidateModel(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Validates the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> that is being created.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> that will be validated.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ParameterConfiguration">
            <summary>
            Represents a parameter to a Procedure
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ParameterConfiguration.#ctor(System.String,Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.ParameterConfiguration"/> class.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="parameterType">The EDM type of the parameter.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ParameterConfiguration.Name">
            <summary>
            The name of the parameter
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ParameterConfiguration.TypeConfiguration">
            <summary>
            The type of the parameter
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ParameterConfiguration.OptionalParameter">
            <summary>
            Gets or sets a value indicating whether this parameter is optional or not.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration">
            <summary>
            Used to configure a primitive property of an entity type or complex type.
            This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration"/> class.
            </summary>
            <param name="property">The name of the property.</param>
            <param name="declaringType">The declaring EDM type of the property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration.Kind">
            <summary>
            Gets the type of this property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType">
            <summary>
            Gets the backing CLR type of this property type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
            <summary>
            Configures the property to be optional.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
            <summary>
            Configures the property to be required.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration.IsConcurrencyToken">
            <summary>
            Configures the property to be used in concurrency checks. For OData this means to be part of the ETag.
            </summary>
            <returns>Returns itself so that multiple calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration">
            <summary>
            Represents a PrimitiveType
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,Microsoft.OData.Edm.IEdmPrimitiveType,System.Type)">
            <summary>
            This constructor is public only for unit testing purposes.
            To get a PrimitiveTypeConfiguration use ODataModelBuilder.GetTypeConfigurationOrNull(Type)
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration.ClrType">
            <summary>
            Gets the backing CLR type of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration.FullName">
            <summary>
            Gets the full name of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration.Namespace">
            <summary>
             Gets the namespace of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration.Name">
            <summary>
            Gets the name of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration.Kind">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.EdmTypeKind"/> of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> used to create this configuration.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
            <summary>
            Returns the IEdmPrimitiveType associated with this PrimitiveTypeConfiguration
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ProcedureConfiguration">
            <summary>
            Represents a Procedure that is exposed in the model
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Builder.ProcedureConfiguration" /> class.
            </summary>
            <param name="builder">The ODataModelBuilder to which this ProcedureConfiguration should be added.</param>
            <param name="name">The name of this ProcedureConfiguration.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.LinkFactory">
            <summary>
            Gets or sets the currently registered procedure link factory.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.FollowsConventions">
            <summary>
            Gets a value indicating whether procedure links follow OData conventions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.Name">
            <summary>
            The Name of the procedure
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.Title">
            <summary>
            The Title of the procedure. When customized, the title of the procedure
            will be sent back when the OData client asks for an entity or a feed in
            JSON full metadata.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.Kind">
            <summary>
            The Kind of procedure, which can be either Action or Function
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.IsComposable">
            <summary>
            Can the procedure be composed upon.
            
            For example can a URL that invokes the procedure be used as the base URL for 
            a request that invokes the procedure and does something else with the results
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.IsSideEffecting">
            <summary>
            Does the procedure have side-effects.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
            <summary>
            The FullyQualifiedName is the Name further qualified using the Namespace.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.ReturnType">
            <summary>
            The type returned when the procedure is invoked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.OptionalReturn">
            <summary>
            Gets or sets a value indicating whether the return is optional or not.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.NavigationSource">
            <summary>
            The Navigation Source that are returned from.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.EntitySetPath">
            <summary>
            The EntitySetPathExpression that entities are returned from.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.BindingParameter">
            <summary>
            Get the bindingParameter. 
            <remarks>Null means the procedure has no bindingParameter.</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.Parameters">
            <summary>
            The parameters the procedure takes
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.IsBindable">
            <summary>
            Can the procedure be bound to a URL representing the BindingParameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.ReturnsFromEntitySetImplementation``1(System.String)">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetName">The entitySetName which contains the return EntityType instance</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.ReturnsCollectionFromEntitySetImplementation``1(System.String)">
            <summary>
            Sets the return type to a collection of EntityType instances.
            </summary>
            <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetName">The entitySetName which contains the returned EntityType instances</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.ReturnsEntityViaEntitySetPathImplementation``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the return type to a single EntityType instance.
            </summary>
            <typeparam name="TEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the return EntityType instance</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.ReturnsCollectionViaEntitySetPathImplementation``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the return type to a collection of EntityType instances.
            </summary>
            <typeparam name="TElementEntityType">The type that is an EntityType</typeparam>
            <param name="entitySetPath">The entitySetPath which contains the returned EntityType instances</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.ReturnsImplementation``1">
            <summary>
            Established the return type of the procedure.
            <remarks>Used when the return type is a single Primitive or ComplexType.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.ReturnsCollectionImplementation``1">
            <summary>
            Establishes the return type of the procedure
            <remarks>Used when the return type is a collection of either Primitive or ComplexTypes.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.SetBindingParameterImplementation(System.String,Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration)">
            <summary>
            Specifies the bindingParameter name, type and whether it is alwaysBindable, use only if the procedure "isBindable".
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.AddParameter(System.String,Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration)">
            <summary>
            Adds a new non-binding parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.Parameter``1(System.String)">
            <summary>
            Adds a new non-binding parameter
            </summary>  
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.CollectionParameter``1(System.String)">
            <summary>
            Adds a new non-binding collection parameter
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.EntityParameter``1(System.String)">
            <summary>
            Adds a new non-binding entity type parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.CollectionEntityParameter``1(System.String)">
            <summary>
            Adds a new non-binding collection of entity type parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.ProcedureConfiguration.ModelBuilder">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> used to create this configuration.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ProcedureKind">
            <summary>
            The Kind of OData Procedure.
            One of Action, Function or ServiceOperation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.ProcedureKind.Action">
            <summary>
            An action
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.ProcedureKind.Function">
            <summary>
            A function
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.ProcedureKind.ServiceOperation">
            <summary>
            A service operation
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.PropertyConfiguration">
            <summary>
            Base class for all property configurations.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.PropertyConfiguration"/> class.
            </summary>
            <param name="property">The name of the property.</param>
            <param name="declaringType">The declaring EDM type of the property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.Name">
            <summary>
            Gets or sets the name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.DeclaringType">
            <summary>
            Gets the declaring type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.PropertyInfo">
            <summary>
            Gets the mapping CLR <see cref="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.RelatedClrType">
            <summary>
            Gets the CLR <see cref="T:System.Type"/> of the property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.Kind">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.PropertyKind"/> of the property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.AddedExplicitly">
            <summary>
            Gets or sets a value that is <c>true</c> if the property was added by the user; <c>false</c> if it was inferred through conventions.
            </summary>
            <remarks>The default value is <c>true</c></remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsRestricted">
            <summary>
            Gets whether the property is restricted, i.e. not filterable, not sortable, not navigable,
            not expandable, not countable, or automatically expand.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.NotFilterable">
            <summary>
            Gets or sets whether the property is not filterable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.AutoExpand">
            <summary>
            Gets or sets whether the property is automatically expanded. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.NonFilterable">
            <summary>
            Gets or sets whether the property is nonfilterable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.NotSortable">
            <summary>
            Gets or sets whether the property is not sortable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.Unsortable">
            <summary>
            Gets or sets whether the property is unsortable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.NotNavigable">
            <summary>
            Gets or sets whether the property is not navigable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.NotExpandable">
            <summary>
            Gets or sets whether the property is not expandable. default is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.PropertyConfiguration.NotCountable">
            <summary>
            Gets or sets whether the property is not countable. default is false.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsNotFilterable">
            <summary>
            Sets the property as not filterable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsNonFilterable">
            <summary>
            Sets the property as nonfilterable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsFilterable">
            <summary>
            Sets the property as filterable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsNotSortable">
            <summary>
            Sets the property as not sortable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsUnsortable">
            <summary>
            Sets the property as unsortable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsSortable">
            <summary>
            Sets the property as sortable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsNotNavigable">
            <summary>
            Sets the property as not navigable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsNavigable">
            <summary>
            Sets the property as navigable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsNotExpandable">
            <summary>
            Sets the property as not expandable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsExpandable">
            <summary>
            Sets the property as expandable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsNotCountable">
            <summary>
            Sets the property as not countable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.PropertyConfiguration.IsCountable">
            <summary>
            Sets the property as countable.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.PropertyKind">
            <summary>
            The kind of the EDM property.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.PropertyKind.Primitive">
            <summary>
            Represents an EDM primitive property.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.PropertyKind.Complex">
            <summary>
            Represents an EDM complex property.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.PropertyKind.Collection">
            <summary>
            Represents an EDM collection property.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.PropertyKind.Navigation">
            <summary>
            Represents an EDM navigation property.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.PropertyKind.Enum">
            <summary>
            Represents an EDM enum property.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Builder.PropertyKind.Dynamic">
            <summary>
            Represents a dynamic property dictionary for an open type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.ReturnedEntitySetAnnotation">
            <summary>
            This annotation indicates the mapping from an <see cref="T:Microsoft.OData.Edm.IEdmOperation"/> to a <see cref="T:System.String"/>.
            The <see cref="T:Microsoft.OData.Edm.IEdmOperation"/> is a bound action/function and the <see cref="T:System.String"/> is the
            entity set name given by user to indicate the entity set returned from this action/function.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.SelfLinkBuilder`1">
            <summary>
            Encapsulates a self link factory and whether the link factory follows conventions or not.
            </summary>
            <typeparam name="T">The type of the self link generated. This should be <see cref="T:System.String"/> for ID links and <see cref="T:System.Uri"/> for read and edit links.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{Microsoft.AspNet.OData.EntityInstanceContext,`0},System.Boolean)">
            <summary>
            Constructs a new instance of <see cref="T:Microsoft.AspNet.OData.Builder.SelfLinkBuilder`1"/>.
            </summary>
            <param name="linkFactory">The link factory.</param>
            <param name="followsConventions">Whether the factory follows odata conventions for link generation.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.SelfLinkBuilder`1.Factory">
            <summary>
            Gets the factory for generating links.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
            <summary>
            Gets a boolean indicating whether the link factory follows OData conventions or not.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.SingletonAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a property to specify
            that the property must bind to a singleton. It's used in convention model builder.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.SingletonConfiguration">
            <summary>
            Allows configuration to be performed for a singleton in a model.
            A <see cref="T:Microsoft.AspNet.OData.Builder.SingletonConfiguration"/> can be obtained by using the method <see cref="P:Microsoft.AspNet.OData.Builder.ODataModelBuilder.Singletons"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.SingletonConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.SingletonConfiguration"/> class.
            The default constructor is intended for use by unit testing only.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.SingletonConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.SingletonConfiguration"/> class.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</param>
            <param name="entityClrType">The <see cref="T:System.Type"/> of the entity type contained in this singleton.</param>
            <param name="name">The name of the singleton.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.SingletonConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,Microsoft.AspNet.OData.Builder.EntityTypeConfiguration,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.SingletonConfiguration"/> class.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</param>
            <param name="entityType">The entity type <see cref="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration"/> contained in this singleton.</param>
            <param name="name">The name of the singleton.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.SingletonConfiguration`1">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmSingleton"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.StructuralPropertyConfiguration">
            <summary>
            Base class for all structural property configurations.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.StructuralPropertyConfiguration"/> class.
            </summary>
            <param name="property">The property of the configuration.</param>
            <param name="declaringType">The declaring type of the property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralPropertyConfiguration.OptionalProperty">
            <summary>
            Gets or sets a value indicating whether this property is optional or not.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralPropertyConfiguration.ConcurrencyToken">
            <summary>
            Gets or sets a value indicating whether this property is a concurrency token or not.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/> class.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.#ctor(Microsoft.AspNet.OData.Builder.ODataModelBuilder,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/> class.
            </summary>
            <param name="clrType">The backing CLR type for this EDM structural type.</param>
            <param name="modelBuilder">The associated <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.Kind">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.EdmTypeKind"/> of this edm type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.ClrType">
            <summary>
            Gets the backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.FullName">
            <summary>
            Gets the full name of this edm type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.Namespace">
            <summary>
            Gets or sets the namespace of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.Name">
            <summary>
            Gets or sets the name of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.IsOpen">
            <summary>
            Gets a value indicating whether this type is open or not.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.DynamicPropertyDictionary">
            <summary>
            Gets the CLR property info of the dynamic property dictionary on this structural type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.IsAbstract">
            <summary>
            Gets or sets a value indicating whether this type is abstract.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.BaseTypeConfigured">
            <summary>
            Gets a value that represents whether the base type is explicitly configured or inferred.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.Properties">
            <summary>
            Gets the declared properties on this edm type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
            <summary>
            Gets the properties from the backing CLR type that are to be ignored on this edm type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.AddedExplicitly">
            <summary>
            Gets or sets a value that is <c>true</c> if the type's name or namespace was set by the user; <c>false</c> if it was inferred through conventions.
            </summary>
            <remarks>The default value is <c>false</c>.</remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
            <summary>
            The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.RemovedProperties">
            <summary>
            Gets the collection of explicitly removed properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.ExplicitProperties">
            <summary>
            Gets the collection of explicitly added properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.BaseTypeInternal">
            <summary>
            Gets the base type of this structural type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a primitive property to this edm type.
            </summary>
            <param name="propertyInfo">The property being added.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.PrimitivePropertyConfiguration"/> so that the property can be configured further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.AddEnumProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds an enum property to this edm type.
            </summary>
            <param name="propertyInfo">The property being added.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.EnumPropertyConfiguration"/> so that the property can be configured further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a complex property to this edm type.
            </summary>
            <param name="propertyInfo">The property being added.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.ComplexPropertyConfiguration"/> so that the property can be configured further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
            <summary>
            Adds a collection property to this edm type.
            </summary>
            <param name="propertyInfo">The property being added.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.CollectionPropertyConfiguration"/> so that the property can be configured further.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.AddDynamicPropertyDictionary(System.Reflection.PropertyInfo)">
            <summary>
            Adds the property info of the dynamic properties to this structural type.
            </summary>
            <param name="propertyInfo">The property being added.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
            <summary>
            Removes the given property.
            </summary>
            <param name="propertyInfo">The property being removed.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that can be built using <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.#ctor(Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1"/> class.
            </summary>
            <param name="configuration">The inner configuration of the structural type.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Properties">
            <summary>
            Gets the collection of EDM structural properties that belong to this type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.FullName">
            <summary>
            Gets the full name of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Namespace">
            <summary>
            Gets and sets the namespace of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Name">
            <summary>
            Gets and sets the name of this EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.IsOpen">
            <summary>
            Gets an indicator whether this EDM type is an open type or not.
            Returns <c>true</c> if this is an open type; <c>false</c> otherwise.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Excludes a property from the type.
            </summary>
            <typeparam name="TProperty">The property type.</typeparam>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <remarks>This method is used to exclude properties from the type that would have been added by convention during model discovery.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Adds a string property to the EDM type.
            </summary>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
            <summary>
            Adds a binary property to the EDM type.
            </summary>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})">
            <summary>
            Adds a stream property the EDM type.
            </summary>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
            <summary>
            Adds an optional primitive property to the EDM type.
            </summary>
            <typeparam name="T">The primitive property type.</typeparam>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Adds a required primitive property to the EDM type.
            </summary>
            <typeparam name="T">The primitive property type.</typeparam>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.EnumProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
            <summary>
            Adds an optional enum property to the EDM type.
            </summary>
            <typeparam name="T">The enum property type.</typeparam>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.EnumProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Adds a required enum property to the EDM type.
            </summary>
            <typeparam name="T">The enum property type.</typeparam>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Adds a complex property to the EDM type.
            </summary>
            <typeparam name="TComplexType">The complex type.</typeparam>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Adds a collection property to the EDM type.
            </summary>
            <typeparam name="TElementType">The element type of the collection.</typeparam>
            <param name="propertyExpression">A lambda expression representing the navigation property for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
            <returns>A configuration object that can be used to further configure the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration`1.HasDynamicProperties(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}})">
            <summary>
            Adds a dynamic property dictionary property.
            </summary>
            <param name="propertyExpression">A lambda expression representing the dynamic property dictionary for the relationship.
            For example, in C# <c>t => t.MyProperty</c> and in Visual Basic .NET <c>Function(t) t.MyProperty</c>.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.AbstractEntityTypeDiscoveryConvention">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.EntityTypeConvention"/> to figure out if an entity is abstract or not.
            <remarks>This convention configures all entity types backed by an abstract CLR type as abstract entities.</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.AbstractTypeDiscoveryConvention">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.AbstractTypeDiscoveryConvention"/> to figure out if a structural type is abstract or not.
            <remarks>This convention configures all structural types backed by an abstract CLR type as abstract.</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.ActionLinkGenerationConvention">
            <summary>
            The ActionLinkGenerationConvention calls action.HasActionLink(..) if the action binds to a single entity and has not previously been configured.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.AssociationSetDiscoveryConvention">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.INavigationSourceConvention"/> to configure the EDM association sets for the given entity set.
            <remarks>This convention adds an association set for each EDM navigation property defined in this type, its base types and all its derived types.
            The target navigation source chosen is the default navigation source for the navigation property's target entity type.
            The default navigation source for an entity type is the navigation source that contains entity of that entity type. 
            If more than one navigation source match, the default navigation source is none.
            If no navigation sources match the default navigation source is the default navigation source of the base type.</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.EntityKeyConvention">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.EntityTypeConvention"/> for figuring out the entity keys.
            <remarks>This convention configures properties that are named 'ID' (case-insensitive) or {EntityName}+ID (case-insensitive) as the key.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.EntityKeyConvention.Apply(Microsoft.AspNet.OData.Builder.EntityTypeConfiguration,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Figures out the key properties and marks them as Keys in the EDM model.
            </summary>
            <param name="entity">The entity type being configured.</param>
            <param name="model">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.EntityTypeConvention">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.EntityTypeConvention"/> is used to configure an <see cref="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration"/> in the 
            <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.EntityTypeConvention.Apply(Microsoft.AspNet.OData.Builder.EntityTypeConfiguration,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="entity">The <see cref="T:Microsoft.AspNet.OData.Builder.EntityTypeConfiguration"/> to apply the convention on.</param>
            <param name="model">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataModelBuilder"/> instance.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.FunctionLinkGenerationConvention">
            <summary>
            The FunctionLinkGenerationConvention calls function.HasFunctionLink(..) if the function binds to a single entity and has not previously been configured.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.IEdmPropertyConvention">
            <summary>
            Convention to process properties of <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.IEdmPropertyConvention.Apply(Microsoft.AspNet.OData.Builder.PropertyConfiguration,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property the convention is applied on.</param>
            <param name="structuralTypeConfiguration">The <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/> the edmProperty belongs to.</param>
            <param name="model">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/>that contains the type this property is being applied to.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.IEdmPropertyConvention`1">
            <summary>
            Convention to process properties of <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/>.
            </summary>
            <typeparam name="TPropertyConfiguration"></typeparam>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.IEdmPropertyConvention`1.Apply(`0,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property the convention is applied on.</param>
            <param name="structuralTypeConfiguration">The <see cref="T:Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration"/> the edmProperty belongs to.</param>
            <param name="model">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/>that contains the type this property is being applied to.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.IProcedureConvention">
            <summary>
            Convention to apply to <see cref="T:Microsoft.AspNet.OData.Builder.ProcedureConfiguration"/> instances in the model
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeConvention">
            <summary>
            Base class for all attribute based conventions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeConvention.#ctor(System.Func{System.Attribute,System.Boolean},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeConvention"/> class.
            </summary>
            <param name="attributeFilter">A function to test whether this convention applies to an attribute or not.</param>
            <param name="allowMultiple"><c>true</c> if the convention allows multiple attribues; otherwise, <c>false</c>.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeConvention.AttributeFilter">
            <summary>
            Gets the filter that finds the attributes that this convention applies to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeConvention.AllowMultiple">
            <summary>
            Gets whether this convention allows multiple instances of the attribute.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeConvention.GetAttributes(System.Reflection.MemberInfo)">
            <summary>
            Returns the attributes on <paramref name="member"/> that this convention applies to.
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeConvention.GetAttributes(System.Type)">
            <summary>
            Returns the attributes on <paramref name="type"/> that this convention applies to.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1">
            <summary>
            Base class for all attribute based <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.IEdmPropertyConvention"/>'s.
            </summary>
            <typeparam name="TPropertyConfiguration">The type of the property this configuration applies to.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1.#ctor(System.Func{System.Attribute,System.Boolean},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1"/> class.
            </summary>
            <param name="attributeFilter">A function to test whether this convention applies to an attribute or not.</param>
            <param name="allowMultiple"><c>true</c> if the convention allows multiple attributes; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1.Apply(Microsoft.AspNet.OData.Builder.PropertyConfiguration,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property being configured.</param>
            <param name="structuralTypeConfiguration">The type being configured.</param>
            <param name="model">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/>that contains the type this property is being applied to.</param>        
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1.Apply(`0,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property being configured.</param>
            <param name="structuralTypeConfiguration">The type being configured.</param>
            <param name="model">The <see cref="T:Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder"/>that contains the type this property is being applied to.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmPropertyConvention`1.Apply(`0,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,System.Attribute,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmProperty">The property being configured.</param>
            <param name="structuralTypeConfiguration">The type being configured.</param>
            <param name="attribute">The attribute to be used during configuration.</param>
            <param name="model">The ODataConventionModelBuilder used to build the model.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1">
            <summary>
            Base class for all <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.IEdmTypeConvention"/>'s based on a attribute on the type.
            </summary>
            <typeparam name="TEdmTypeConfiguration">The kind of Edm type that this convention must be applied to.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1.#ctor(System.Func{System.Attribute,System.Boolean},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1"/> class.
            </summary>
            <param name="attributeFilter">A function to test whether this convention applies to an attribute or not.</param>
            <param name="allowMultiple"><c>true</c> if the convention allows multiple attributes; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1.Apply(Microsoft.AspNet.OData.Builder.IEdmTypeConfiguration,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmTypeConfiguration">The edm type to apply the convention to.</param>
            <param name="model">The model that this edm type belongs to.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1.Apply(`0,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmTypeConfiguration">The edm type to apply the convention to.</param>
            <param name="model">The model that this edm type belongs to.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.AttributeEdmTypeConvention`1.Apply(`0,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder,System.Attribute)">
            <summary>
            Applies the convention.
            </summary>
            <param name="edmTypeConfiguration">The edm type to apply the convention to.</param>
            <param name="model">The model that this edm type belongs to.</param>
            <param name="attribute">The attribute found on this edm type.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.ConcurrencyCheckAttributeEdmPropertyConvention">
            <summary>
            Marks properties that have <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute"/> as non-optional on their EDM type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.ConcurrencyCheckAttributeEdmPropertyConvention.Apply(Microsoft.AspNet.OData.Builder.PropertyConfiguration,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,System.Attribute,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Marks the property with concurrency token on the EDM type.
            </summary>
            <param name="edmProperty">The EDM property.</param>
            <param name="structuralTypeConfiguration">The EDM type being configured.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found.</param>
            <param name="model">The ODataConventionModelBuilder used to build the model.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.DataContractAttributeEdmTypeConvention">
            <summary>
            Configures classes that have the <see cref="T:System.Runtime.Serialization.DataContractAttribute"/> to follow DataContract serialization/deserialization rules.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.DataContractAttributeEdmTypeConvention.Apply(Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder,System.Attribute)">
            <summary>
            Removes properties that do not have the <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/> attribute from the edm type.
            </summary>
            <param name="edmTypeConfiguration">The edm type to configure.</param>
            <param name="model">The edm model that this type belongs to.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found on this type.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.DataMemberAttributeEdmPropertyConvention">
            <summary>
            Configures properties that have <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/> as optional or required on their edm type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.ForeignKeyAttributeConvention.Apply(Microsoft.AspNet.OData.Builder.PropertyConfiguration,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,System.Attribute,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.IgnoreDataMemberAttributeEdmPropertyConvention">
            <summary>
            Removes properties that have <see cref="T:System.Runtime.Serialization.IgnoreDataMemberAttribute"/> from their edm type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.IgnoreDataMemberAttributeEdmPropertyConvention.Apply(Microsoft.AspNet.OData.Builder.PropertyConfiguration,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,System.Attribute,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Removes the property from the edm type.
            </summary>
            <param name="edmProperty">The property being removed.</param>
            <param name="structuralTypeConfiguration">The edm type from which the property is being removed.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found on this type.</param>
            <param name="model">The ODataConventionModelBuilder used to build the model.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.KeyAttributeEdmPropertyConvention">
            <summary>
            Configures properties that have the <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/> as keys in the <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.KeyAttributeEdmPropertyConvention.Apply(Microsoft.AspNet.OData.Builder.StructuralPropertyConfiguration,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,System.Attribute,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Configures the property as a key on the edm type.
            </summary>
            <param name="edmProperty">The key property.</param>
            <param name="structuralTypeConfiguration">The edm type being configured.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found on the property.</param>
            <param name="model">The ODataConventionModelBuilder used to build the model.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.NotMappedAttributeConvention">
            <summary>
            Ignores properties with the NotMappedAttribute from <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Builder.Conventions.Attributes.RequiredAttributeEdmPropertyConvention">
            <summary>
            Marks properties that have <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> as non-optional on their edm type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Builder.Conventions.Attributes.RequiredAttributeEdmPropertyConvention.Apply(Microsoft.AspNet.OData.Builder.PropertyConfiguration,Microsoft.AspNet.OData.Builder.StructuralTypeConfiguration,System.Attribute,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Marks the property non-optional on the edm type.
            </summary>
            <param name="edmProperty">The edm property.</param>
            <param name="structuralTypeConfiguration">The edm type being configured.</param>
            <param name="attribute">The <see cref="T:System.Attribute"/> found.</param>
            <param name="model">The ODataConventionModelBuilder used to build the model.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Common.Error">
            <summary>
            Utility class for creating and unwrapping <see cref="T:System.Exception"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.Format(System.String,System.Object[])">
            <summary>
            Formats the specified resource string using <see cref="M:CultureInfo.CurrentCulture"/>.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.Argument(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.Argument(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.PropertyNull">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.ArgumentNull(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.ArgumentNullOrEmpty(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a default message.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.ArgumentMustBeGreaterThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="minValue">The minimum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.InvalidEnumArgument(System.String,System.Int32,System.Type)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> for an invalid enum argument.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="invalidValue">The value of the argument that failed.</param>
            <param name="enumClass">A <see cref="T:System.Type"/> that represents the enumeration class with the valid values.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.InvalidOperation(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.InvalidOperation(System.Exception,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="innerException">Inner exception</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.Error.NotSupported(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.NotSupportedException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast property helper. This constructor does not cache the helper.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.PropertyHelper.MakeFastPropertySetter``1(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast setter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of this instance.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Common.TypeHelper.GetImplementedIEnumerableType(System.Type)">
            <summary>
            Returns type of T if the type implements IEnumerable of T, otherwise, return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.EdmModelExtensions.GetActionLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmAction)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.ActionLinkBuilder"/> to be used while generating action links for the given action.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the action.</param>
            <param name="action">The action for which the link builder is needed.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.ActionLinkBuilder"/> for the given action if one is set; otherwise, a new
            <see cref="T:Microsoft.AspNet.OData.Builder.ActionLinkBuilder"/> that generates action links following OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.EdmModelExtensions.SetActionLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmAction,Microsoft.AspNet.OData.Builder.ActionLinkBuilder)">
            <summary>
            Sets the <see cref="T:Microsoft.AspNet.OData.Builder.ActionLinkBuilder"/> to be used for generating the OData action link for the given action.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the entity set.</param>
            <param name="action">The action for which the action link is to be generated.</param>
            <param name="actionLinkBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.ActionLinkBuilder"/> to set.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.EdmModelExtensions.SetFunctionLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmFunction,Microsoft.AspNet.OData.Builder.FunctionLinkBuilder)">
            <summary>
            Sets the <see cref="T:Microsoft.AspNet.OData.Builder.FunctionLinkBuilder"/> to be used for generating the OData function link for the given function.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the entity set.</param>
            <param name="function">The function for which the function link is to be generated.</param>
            <param name="functionLinkBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.FunctionLinkBuilder"/> to set.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.EdmModelExtensions.GetNavigationSourceLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation"/> to be used while generating self and navigation
            links for the given navigation source.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the navigation source.</param>
            <param name="navigationSource">The navigation source.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation"/> if set for the given the singleton; otherwise,
            a new <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation"/> that generates URLs that follow OData URL conventions.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.EdmModelExtensions.SetNavigationSourceLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation)">
            <summary>
            Sets the <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation"/> to be used while generating self and navigation
            links for the given navigation source.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the navigation source.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="navigationSourceLinkBuilder">The <see cref="T:Microsoft.AspNet.OData.Builder.NavigationSourceLinkBuilderAnnotation"/> to set.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Extensions.EdmTypeExtensions">
            <summary>
            Extension methods for the <see cref="T:Microsoft.OData.Edm.IEdmType"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.EdmTypeExtensions.IsDeltaFeed(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Method to determine whether the current type is containing a Delta Feed
            </summary>
            <param name="type">IEdmType to be compared</param>
            <returns>True or False if type is same as <see cref="T:Microsoft.AspNet.OData.EdmDeltaCollectionType"/></returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Extensions.HttpErrorExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Web.Http.HttpError"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.HttpErrorExtensions.CreateODataError(System.Web.Http.HttpError)">
            <summary>
            Converts the <paramref name="httpError"/> to an <see cref="T:Microsoft.OData.Core.ODataError"/>.
            </summary>
            <param name="httpError">The <see cref="T:System.Web.Http.HttpError"/> instance to convert.</param>
            <returns>The converted <see cref="T:Microsoft.OData.Core.ODataError"/></returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.HttpRequestExtensions.ODataProperties(Microsoft.AspNet.Http.HttpRequest)">
            <summary>
            Gets the <see cref="!:HttpRequestProperties"/> instance containing OData methods and properties
            for given <see cref="T:Microsoft.AspNet.Http.HttpRequest"/>.
            </summary>
            <param name="request">The request of interest.</param>
            <returns>
            An object through which OData methods and properties for given <paramref name="request"/> are available.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Extensions.UrlHelperExtensions">
            <summary>
            Provides extension methods for the <see cref="!:UrlHelper"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.UrlHelperExtensions.CreateODataLink(Microsoft.AspNet.Mvc.IUrlHelper,Microsoft.AspNet.OData.Routing.ODataPathSegment[])">
            <summary>
            Generates an OData link using the request's OData route name and path handler and given segments.
            </summary>
            <param name="urlHelper">The URL helper.</param>
            <param name="segments">The OData path segments.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.UrlHelperExtensions.CreateODataLink(Microsoft.AspNet.Mvc.IUrlHelper,System.Collections.Generic.IList{Microsoft.AspNet.OData.Routing.ODataPathSegment})">
            <summary>
            Generates an OData link using the request's OData route name and path handler and given segments.
            </summary>
            <param name="urlHelper">The URL helper.</param>
            <param name="segments">The OData path segments.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Extensions.UrlHelperExtensions.CreateODataLink(Microsoft.AspNet.Mvc.IUrlHelper,System.String,Microsoft.AspNet.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{Microsoft.AspNet.OData.Routing.ODataPathSegment})">
            <summary>
            Generates an OData link using the given OData route name, path handler, and segments.
            </summary>
            <param name="urlHelper">The URL helper.</param>
            <param name="routeName">The name of the OData route.</param>
            <param name="pathHandler">The path handler to use for generating the link.</param>
            <param name="segments">The OData path segments.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="F:Microsoft.AspNet.OData.Formatter.DefaultODataETagHandler.NullLiteralInETag">
            <summary>null liternal that needs to be return in ETag value when the value is null</summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.IETagHandler">
            <summary>
            Exposes the ability to convert a collection of concurrency property names and values into an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/>
            and parse an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> into a list of concurrency property values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.IETagHandler.CreateETag(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an ETag from concurrency property names and values.
            </summary>
            <param name="properties">The input property names and values.</param>
            <returns>The generated ETag string.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.IETagHandler.ParseETag(Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Parses an ETag header value into concurrency property names and values.
            </summary>
            <param name="etagHeaderValue">The ETag header value.</param>
            <returns>Concurrency property names and values.</returns>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.ModernInputFormatter.SerializerSettings">
            <summary>
            Gets or sets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.ModernInputFormatter.ReadRequestBodyAsync(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.ModernInputFormatter.CreateJsonReader(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Called during deserialization to get the <see cref="T:Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.Formatters.InputFormatterContext"/> for the read.</param>
            <param name="readStream">The <see cref="T:System.IO.Stream"/> from which to read.</param>
            <param name="effectiveEncoding">The <see cref="T:System.Text.Encoding"/> to use when reading.</param>
            <returns>The <see cref="T:Newtonsoft.Json.JsonReader"/> used during deserialization.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.ModernInputFormatter.CreateJsonSerializer">
            <summary>
            Called during deserialization to get the <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <returns>The <see cref="T:Newtonsoft.Json.JsonSerializer"/> used during serialization and deserialization.</returns>
        </member>
        <member name="F:Microsoft.AspNet.OData.Formatter.ModernOutputFormatter.UTF8EncodingWithoutBOM">
            <summary>
            Returns UTF8 Encoding without BOM and throws on invalid bytes.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.ODataCountMediaTypeMapping">
            <summary>
            Media type mapping that associates requests with $count.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.ODataMediaTypes">
            <summary>
            Contains media types used by the OData formatter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.ODataMessageWrapper">
            <summary>
            Wrapper for IODataRequestMessage and IODataResponseMessage.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel">
            <summary>
            The amount of metadata information to serialize in an OData response (for JSON).
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel.MinimalMetadata">
            <summary>
            JSON minimal metadata.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel.FullMetadata">
            <summary>
            JSON full metadata.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Formatter.ODataMetadataLevel.NoMetadata">
            <summary>
            JSON no metadata.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.ODataOutputFormatters">
            <summary>
            <see cref="T:Microsoft.AspNet.OData.Formatter.ODataOutputFormatter"/> classes to handle OData.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.ODataOutputFormatters.Create">
            <summary>
            Creates a list of media type formatters to handle OData.
            The default serializer provider is <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.DefaultODataSerializerProvider"/>.
            </summary>
            <returns>A list of output formatters to handle OData.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.ODataOutputFormatters.Create(Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider)">
            <summary>
            Creates a list of media type formatters to handle OData with the given <paramref name="serializerProvider"/>.
            </summary>
            <param name="serializerProvider">The serializer provider to use.</param>
            <returns>A list of media type formatters to handle OData.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.ODataRawValueMediaTypeMapping">
            <summary>
            Media type mapping that associates requests for the raw value of properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.ODataRawValueMediaTypeMapping.IsMatch(Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment)">
            <summary>
            This method determines if the <see cref="T:Microsoft.AspNet.Http.HttpRequest"/> is an OData Raw value request.
            </summary>
            <param name="propertySegment">The <see cref="T:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment"/> of the path.</param>
            <returns>True if the request is an OData raw value request.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer"/> is used to read an ODataMessage into a CLR object.
            </summary>
            <remarks>
            Each supported CLR type has a corresponding <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer" />. A CLR type is supported if it is one of
            the special types or if it has a backing EDM type. Some of the special types are Uri which maps to ODataReferenceLink payload, 
            Uri[] which maps to ODataReferenceLinks payload, ODataWorkspace which maps to ODataServiceDocument payload.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer.#ctor(Microsoft.OData.Core.ODataPayloadKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer"/> class.
            </summary>
            <param name="payloadKind">The kind of payload this deserializer handles.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer.ODataPayloadKind">
            <summary>
            The kind of ODataPayload this deserializer handles.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer.Read(Microsoft.OData.Core.ODataMessageReader,System.Type,Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Reads an <see cref="T:Microsoft.OData.Core.IODataRequestMessage"/> using messageReader.
            </summary>
            <param name="messageReader">The messageReader to use.</param>
            <param name="type">The type of the object to read into.</param>
            <param name="readContext">The read context.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext">
            <summary>
            This class encapsulates the state and settings that get passed to <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer"/>
            from the <see cref="!:ODataMediaTypeFormatter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceType">
            <summary>
            Gets or sets the type of the top-level object the request needs to be deserialized into.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceEdmType">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> of the top-level object the request needs to be deserialized into.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext.Path">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Core.UriParser.Semantic.ODataPath"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext.Model">
            <summary>
            Gets or sets the EDM model associated with the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext.Request">
            <summary>
            Gets or sets the HTTP Request that is being deserialized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext.RequestContext">
            <summary>Gets or sets the request context.</summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerProvider">
            <summary>
            Represents a factory that creates an <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer"/> for the given EDM type.
            </summary>
            <param name="edmType">The EDM type.</param>
            <returns>An <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer"/> that can deserialize the given EDM type.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerProvider.GetODataDeserializer(Microsoft.OData.Edm.IEdmModel,System.Type,Microsoft.AspNet.Http.HttpRequest)">
            <summary>
            Gets an <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer"/> for the given type.
            </summary>
            <param name="model">The EDM model.</param>
            <param name="type">The CLR type.</param>
            <param name="request">The request being deserialized.</param>
            <returns>An <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer"/> that can deserialize the given type.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer">
            <summary>
            Base class for all <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializer" />s that deserialize into an object backed by <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.OData.Core.ODataPayloadKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload that this deserializer reads.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.OData.Core.ODataPayloadKind,Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload this deserializer handles.</param>
            <param name="deserializerProvider">The <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.DeserializerProvider">
            <summary>
            The <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerProvider"/> to use for deserializing inner items.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the item into a new object of type corresponding to <paramref name="edmType"/>.
            </summary>
            <param name="item">The item to deserialize.</param>
            <param name="edmType">The EDM type of the object to read into.</param>
            <param name="readContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Deserialization.ODataDeserializerContext"/>.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.DefaultODataSerializerProvider">
            <summary>
            The default <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.DefaultODataSerializerProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.DefaultODataSerializerProvider"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.DefaultODataSerializerProvider.Instance">
            <summary>
            Gets the default instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.DefaultODataSerializerProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetEdmTypeSerializer(Microsoft.OData.Edm.IEdmTypeReference)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetODataPayloadSerializer(Microsoft.OData.Edm.IEdmModel,System.Type,Microsoft.AspNet.Http.HttpRequest)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.EntitySelfLinks">
            <summary>
            EntitySelfLinks contains the Id, Edit and Read links for an entity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.EntitySelfLinks.IdLink">
            <summary>
            A string that uniquely identifies the resource.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.EntitySelfLinks.EditLink">
            <summary>
            A URL that can be used to edit a copy of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.EntitySelfLinks.ReadLink">
            <summary>
            A URL that can be used to retrieve a copy of the resource.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataCollectionSerializer">
            <summary>
            ODataSerializer for serializing collection of Entities or Complex types or primitives.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataCollectionSerializer.#ctor(Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataCollectionSerializer"/> class.
            </summary>
            <param name="serializerProvider">The serializer provider to use to serialize nested objects.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataCollectionSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataCollectionSerializer.WriteCollection(Microsoft.OData.Core.ODataCollectionWriter,System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given <paramref name="graph"/> using the given <paramref name="writer"/>.
            </summary>
            <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataCollectionWriter"/> to use.</param>
            <param name="graph">The collection to write.</param>
            <param name="collectionType">The EDM type of the collection.</param>
            <param name="writeContext">The serializer context.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataCollectionValue(System.Collections.IEnumerable,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.Core.ODataCollectionValue"/> for the enumerable represented by <paramref name="enumerable"/>.
            </summary>
            <param name="enumerable">The value of the collection to be created.</param>
            <param name="elementType">The element EDM type of the collection.</param>
            <param name="writeContext">The serializer context to be used while creating the collection.</param>
            <returns>The created <see cref="T:Microsoft.OData.Core.ODataCollectionValue"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataCollectionSerializer.AddTypeNameAnnotationAsNeeded(Microsoft.OData.Core.ODataCollectionValue,Microsoft.AspNet.OData.Formatter.ODataMetadataLevel)">
            <summary>
            Adds the type name annotations required for proper json light serialization.
            </summary>
            <param name="value">The collection value for which the annotations have to be added.</param>
            <param name="metadataLevel">The OData metadata level of the response.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataComplexTypeSerializer">
            <summary>
            ODataSerializer for serializing complex types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataComplexTypeSerializer.#ctor(Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataComplexTypeSerializer"/> class.
            </summary>
            <param name="serializerProvider">The serializer provider to use to serialize nested objects.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataComplexTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheitdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataComplexValue(System.Object,Microsoft.OData.Edm.IEdmComplexTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.Core.ODataComplexValue"/> for the object represented by <paramref name="graph"/>.
            </summary>
            <param name="graph">The value of the <see cref="T:Microsoft.OData.Core.ODataComplexValue"/> to be created.</param>
            <param name="complexType">The EDM complex type of the object.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>The created <see cref="T:Microsoft.OData.Core.ODataComplexValue"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer">
            <summary>
            OData serializer for serializing a collection of <see cref="T:Microsoft.OData.Edm.IEdmEntityType" />
            The Collection is of <see cref="T:Microsoft.AspNet.OData.IEdmChangedObject"/> which is the base interface implemented by all objects which are a part of the DeltaFeed payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer.#ctor(Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer"/>.
            </summary>
            <param name="serializerProvider">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider"/> to use to write nested entries.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer.WriteDeltaFeedInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Core.ODataDeltaWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written.</param>
            <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph"/>.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer.CreateODataDeltaFeed(System.Collections.IEnumerable,Microsoft.OData.Edm.IEdmCollectionTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Create the <see cref="T:Microsoft.OData.Core.ODataDeltaFeed"/> to be written for the given feed instance.
            </summary>
            <param name="feedInstance">The instance representing the feed being written.</param>
            <param name="feedType">The EDM type of the feed being written.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>The created <see cref="T:Microsoft.OData.Core.ODataDeltaFeed"/> object.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer.WriteDeltaDeletedEntry(System.Object,Microsoft.OData.Core.ODataDeltaWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given deltaDeletedEntry specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer.WriteDeltaDeletedLink(System.Object,Microsoft.OData.Core.ODataDeltaWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given deltaDeletedLink specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataDeltaFeedSerializer.WriteDeltaLink(System.Object,Microsoft.OData.Core.ODataDeltaWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given deltaLink specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer"/> that serializes instances of objects backed by an <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.OData.Core.ODataPayloadKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.OData.Core.ODataPayloadKind,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
            <param name="serializerProvider">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider"/> to use to write inner objects.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer.SerializerProvider">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider"/> that can be used to write inner objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer.WriteObjectInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Core.ODataWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written.</param>
            <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph"/>.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.Core.ODataValue"/> for the object represented by <paramref name="graph"/>.
            </summary>
            <param name="graph">The value of the <see cref="T:Microsoft.OData.Core.ODataValue"/> to be created.</param>
            <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph"/>.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
            <returns>The <see cref="T:Microsoft.OData.Core.ODataValue"/> created.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Core.ODataSerializer"/> for serializing $ref response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Core.ODataSerializer"/> for serializing $ref response for a collection navigation property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheridoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer">
            <summary>
            ODataSerializer for serializing instances of <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.#ctor(Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObjectInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Core.ODataWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteDeltaObjectInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Core.ODataDeltaWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a part of an existing OData message using the given
            deltaWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written.</param>
            <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph"/>.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.Core.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateSelectExpandNode(Microsoft.AspNet.OData.EntityInstanceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNet.OData.Query.SelectExpandNode"/> that describes the set of properties and actions to select and expand while writing this entity.
            </summary>
            <param name="entityInstanceContext">Contains the entity instance being written and the context.</param>
            <returns>
            The <see cref="T:Microsoft.AspNet.OData.Query.SelectExpandNode"/> that describes the set of properties and actions to select and expand while writing this entity.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateEntry(Microsoft.AspNet.OData.Query.SelectExpandNode,Microsoft.AspNet.OData.EntityInstanceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.OData.Core.ODataEntry"/> to be written while writing this entity.
            </summary>
            <param name="selectExpandNode">The <see cref="T:Microsoft.AspNet.OData.Query.SelectExpandNode"/> describing the response graph.</param>
            <param name="entityInstanceContext">The context for the entity instance being written.</param>
            <returns>The created <see cref="T:Microsoft.OData.Core.ODataEntry"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateETag(Microsoft.AspNet.OData.EntityInstanceContext)">
            <summary>
            Creates the ETag for the given entity.
            </summary>
            <param name="entityInstanceContext">The context for the entity instance being written.</param>
            <returns>The created ETag.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateNavigationLink(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.AspNet.OData.EntityInstanceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.OData.Core.ODataNavigationLink"/> to be written while writing this entity.
            </summary>
            <param name="navigationProperty">The navigation property for which the navigation link is being created.</param>
            <param name="entityInstanceContext">The context for the entity instance being written.</param>
            <returns>The navigation link to be written.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateStructuralProperty(Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.AspNet.OData.EntityInstanceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.OData.Core.ODataProperty"/> to be written for the given entity and the structural property.
            </summary>
            <param name="structuralProperty">The EDM structural property being written.</param>
            <param name="entityInstanceContext">The context for the entity instance being written.</param>
            <returns>The <see cref="T:Microsoft.OData.Core.ODataProperty"/> to write.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateODataAction(Microsoft.OData.Edm.IEdmAction,Microsoft.AspNet.OData.EntityInstanceContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.Core.ODataAction" /> to be written for the given action and the entity instance.
            </summary>
            <param name="action">The OData action.</param>
            <param name="entityInstanceContext">The context for the entity instance being written.</param>
            <returns>The created action or null if the action should not be written.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEnumSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Core.ODataSerializer"/> for serializing <see cref="T:Microsoft.OData.Edm.IEdmEnumType" />'s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEnumSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEnumSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEnumSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEnumSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataEnumSerializer.CreateODataEnumValue(System.Object,Microsoft.OData.Edm.IEdmEnumTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.Core.ODataEnumValue"/> for the object represented by <paramref name="graph"/>.
            </summary>
            <param name="graph">The enum value.</param>
            <param name="enumType">The EDM enum type of the value.</param>
            <param name="writeContext">The serializer write context.</param>
            <returns>The created <see cref="T:Microsoft.OData.Core.ODataEnumValue"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataErrorSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer"/> to serialize <see cref="T:Microsoft.OData.Core.ODataError"/>s and <see cref="T:System.Web.Http.HttpError"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataErrorSerializer.#ctor">
            <summary>
            Initializes a new instance of the class <see cref="T:Microsoft.OData.Core.ODataSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataErrorSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataFeedSerializer">
            <summary>
            OData serializer for serializing a collection of <see cref="T:Microsoft.OData.Edm.IEdmEntityType" />
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataFeedSerializer.#ctor(Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataFeedSerializer"/>.
            </summary>
            <param name="serializerProvider">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider"/> to use to write nested entries.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataFeedSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataFeedSerializer.WriteObjectInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Core.ODataWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataFeedSerializer.CreateODataFeed(System.Collections.IEnumerable,Microsoft.OData.Edm.IEdmCollectionTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Create the <see cref="T:Microsoft.OData.Core.ODataFeed"/> to be written for the given feed instance.
            </summary>
            <param name="feedInstance">The instance representing the feed being written.</param>
            <param name="feedType">The EDM type of the feed being written.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>The created <see cref="T:Microsoft.OData.Core.ODataFeed"/> object.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataMetadataSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Core.ODataSerializer"/> for serializing $metadata. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataMetadataSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataMetadataSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataMetadataSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
            <remarks>The metadata written is from the model set on the <paramref name="messageWriter"/>. The <paramref name="graph" />
            is not used.</remarks>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataPrimitiveSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer"/> for serializing <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType" />'s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataPrimitiveSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataPrimitiveSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataPrimitiveSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataPrimitiveValue(System.Object,Microsoft.OData.Edm.IEdmPrimitiveTypeReference,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.Core.ODataPrimitiveValue"/> for the object represented by <paramref name="graph"/>.
            </summary>
            <param name="graph">The primitive value.</param>
            <param name="primitiveType">The EDM primitive type of the value.</param>
            <param name="writeContext">The serializer write context.</param>
            <returns>The created <see cref="T:Microsoft.OData.Core.ODataPrimitiveValue"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataRawValueSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Core.ODataSerializer"/> for serializing the raw value of an <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataRawValueSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataRawValueSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataRawValueSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer">
            <summary>
            An ODataSerializer is used to write a CLR object to an ODataMessage.
            </summary>
            <remarks>
            Each supported CLR type has a corresponding <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer" />. A CLR type is supported if it is one of
            the special types or if it has a backing EDM type. Some of the special types are Uri which maps to ODataReferenceLink payload, 
            Uri[] which maps to ODataReferenceLinks payload, ODataWorkspace which maps to ODataServiceDocument payload.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer.#ctor(Microsoft.OData.Core.ODataPayloadKind)">
            <summary>
            Constructs an ODataSerializer that can generate OData payload of the specified kind.
            </summary>
            <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind">
            <summary>
            Gets the <see cref="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind"/> that this serializer generates.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a whole using the given messageWriter and writeContext.
            </summary>
            <param name="graph">The object to be written</param>
            <param name="type">The type of the object to be written.</param>
            <param name="messageWriter">The <see cref="T:Microsoft.OData.Core.ODataMessageWriter"/> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext">
            <summary>
            Context information used by the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer"/> when serializing objects in OData message format.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.#ctor(Microsoft.AspNet.OData.EntityInstanceContext,Microsoft.OData.Core.UriParser.Semantic.SelectExpandClause,Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext"/> class.
            </summary>
            <param name="entity">The entity whose navigation property is being expanded.</param>
            <param name="selectExpandClause">The <see cref="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause"/> for the navigation property being expanded.</param>
            <param name="navigationProperty">The navigation property being expanded.</param>
            <remarks>This constructor is used to construct the serializer context for writing expanded properties.</remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.Request">
            <summary>
            Gets or sets the HTTP Request whose response is being serialized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.RequestContext">
            <summary>
            Gets or sets the request context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.Url">
            <summary>
            Gets or sets the <see cref="!:UrlHelper"/> to use for generating OData links.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.NavigationSource">
            <summary>
            Gets or sets the navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.Model">
            <summary>
            Gets or sets the EDM model associated with the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.Path">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.RootElementName">
            <summary>
            Gets or sets the root element name which is used when writing primitive types
            and complex types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.SkipExpensiveAvailabilityChecks">
            <summary>
            Get or sets whether expensive links should be calculated.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.MetadataLevel">
            <summary>
            Gets or sets the metadata level of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.ExpandedEntity">
            <summary>
            Gets or sets the entity that is being expanded.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.NavigationProperty">
            <summary>
            Gets or sets the navigation property being expanded.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext.Items">
            <summary>
            Gets a property bag associated with this context to store any generic data.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider">
            <summary>
            An ODataSerializerProvider is a factory for creating <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider.GetEdmTypeSerializer(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets an <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataEdmTypeSerializer"/> for the given edmType.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerProvider.GetODataPayloadSerializer(Microsoft.OData.Edm.IEdmModel,System.Type,Microsoft.AspNet.Http.HttpRequest)">
            <summary>
            Gets an <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer"/> for the given <paramref name="model"/> and <paramref name="type"/>.
            </summary>
            <param name="model">The EDM model associated with the request.</param>
            <param name="type">The <see cref="T:System.Type"/> for which the serializer is being requested.</param>
            <param name="request">The request for which the response is being serialized.</param>
            <returns>The <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializer"/> for the given type.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataServiceDocumentSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.OData.Core.ODataSerializer"/> for serializing <see cref="T:Microsoft.OData.Core.ODataServiceDocument" />'s for generating servicedoc's.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataServiceDocumentSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.ODataServiceDocumentSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.ODataServiceDocumentSerializer.WriteObject(System.Object,System.Type,Microsoft.OData.Core.ODataMessageWriter,Microsoft.AspNet.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmComplexObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmComplexObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmComplexTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmComplexObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmEntityObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmEntityObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmEntityTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmEntityObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmStructuredObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.OData.IEdmStructuredObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmStructuredObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmStructuredObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmStructuredObject.Instance">
            <summary>
            Gets the backing CLR object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmStructuredObject.Model">
            <summary>
            Gets the EDM model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmStructuredObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Formatter.Serialization.TypedEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNet.OData.CommonWebApiResources.ArgumentMustBeGreaterThanOrEqualTo">
            <summary>
            Value must be greater than or equal to {0}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.CommonWebApiResources.FormatArgumentMustBeGreaterThanOrEqualTo(System.Object)">
            <summary>
            Value must be greater than or equal to {0}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.CommonWebApiResources.ArgumentNullOrEmpty">
            <summary>
            The argument '{0}' is null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.CommonWebApiResources.FormatArgumentNullOrEmpty(System.Object)">
            <summary>
            The argument '{0}' is null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.CommonWebApiResources.InvalidEnumArgument">
            <summary>
            The value of argument '{0}' ({1}) is invalid for Enum type '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.CommonWebApiResources.FormatInvalidEnumArgument(System.Object,System.Object,System.Object)">
            <summary>
            The value of argument '{0}' ({1}) is invalid for Enum type '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotSerializerNull">
            <summary>
            Cannot serialize a null '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotSerializerNull(System.Object)">
            <summary>
            Cannot serialize a null '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeCannotBeSerialized">
            <summary>
            '{0}' cannot be serialized using the {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeCannotBeSerialized(System.Object,System.Object)">
            <summary>
            '{0}' cannot be serialized using the {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.WriteObjectInlineNotSupported">
            <summary>
            {0} does not support WriteObjectInline.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatWriteObjectInlineNotSupported(System.Object)">
            <summary>
            {0} does not support WriteObjectInline.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyMustHavePublicGetterAndSetter">
            <summary>
            The PropertyInfo provided must have public 'get' and 'set' accessor methods.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyMustHavePublicGetterAndSetter">
            <summary>
            The PropertyInfo provided must have public 'get' and 'set' accessor methods.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CreateODataValueNotSupported">
            <summary>
            {0} does not support CreateODataValue.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCreateODataValueNotSupported(System.Object)">
            <summary>
            {0} does not support CreateODataValue.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeMustBeEntityCollection">
            <summary>
            {0} is not a collection of type {1}. Only entity collections are supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeMustBeEntityCollection(System.Object,System.Object)">
            <summary>
            {0} is not a collection of type {1}. Only entity collections are supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.WriteObjectNotSupported">
            <summary>
            {0} does not support WriteObject.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatWriteObjectNotSupported(System.Object)">
            <summary>
            {0} does not support WriteObject.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UriQueryStringInvalid">
            <summary>
            The query specified in the URI is not valid. {0}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUriQueryStringInvalid(System.Object)">
            <summary>
            The query specified in the URI is not valid. {0}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.LambdaExpressionMustHaveExactlyOneParameter">
            <summary>
            The LambdaExpression must have exactly one parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatLambdaExpressionMustHaveExactlyOneParameter">
            <summary>
            The LambdaExpression must have exactly one parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.LambdaExpressionMustHaveExactlyTwoParameters">
            <summary>
            The LambdaExpression must have exactly two parameters.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatLambdaExpressionMustHaveExactlyTwoParameters">
            <summary>
            The LambdaExpression must have exactly two parameters.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MemberExpressionsMustBeBoundToLambdaParameter">
            <summary>
            MemberExpressions must be bound to the LambdaExpression parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMemberExpressionsMustBeBoundToLambdaParameter">
            <summary>
            MemberExpressions must be bound to the LambdaExpression parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MemberExpressionsMustBeProperties">
            <summary>
            Member '{0}.{1}' is not a property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMemberExpressionsMustBeProperties(System.Object,System.Object)">
            <summary>
            Member '{0}.{1}' is not a property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EqualExpressionsMustHaveSameTypes">
            <summary>
            The type of left property '{0}.{1}' is '{2}' while the type of right property '{3}.{4}' is '{5}'. The left and right type of the equal expression must be same.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEqualExpressionsMustHaveSameTypes(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The type of left property '{0}.{1}' is '{2}' while the type of right property '{3}.{4}' is '{5}'. The left and right type of the equal expression must be same.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnsupportedExpressionNodeType">
            <summary>
            Unsupported Expression NodeType.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnsupportedExpressionNodeType">
            <summary>
            Unsupported Expression NodeType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnsupportedExpressionNodeTypeWithName">
            <summary>
            Unsupported Expression NodeType '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnsupportedExpressionNodeTypeWithName(System.Object)">
            <summary>
            Unsupported Expression NodeType '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.FailedToBuildEdmModelBecauseReturnTypeIsNull">
            <summary>
            Cannot create an EDM model as the action '{0}' on controller '{1}' has a void return type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatFailedToBuildEdmModelBecauseReturnTypeIsNull(System.Object,System.Object)">
            <summary>
            Cannot create an EDM model as the action '{0}' on controller '{1}' has a void return type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.FailedToRetrieveTypeToBuildEdmModel">
            <summary>
            Cannot create an EDM model as the action '{0}' on controller '{1}' has a return type '{2}' that does not implement IEnumerable&lt;T&gt;.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatFailedToRetrieveTypeToBuildEdmModel(System.Object,System.Object,System.Object)">
            <summary>
            Cannot create an EDM model as the action '{0}' on controller '{1}' has a return type '{2}' that does not implement IEnumerable&lt;T&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.QueryParameterNotSupported">
            <summary>
            The query parameter '{0}' is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatQueryParameterNotSupported(System.Object)">
            <summary>
            The query parameter '{0}' is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RequestMustContainConfiguration">
            <summary>
            Request message does not contain an HttpConfiguration object.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRequestMustContainConfiguration">
            <summary>
            Request message does not contain an HttpConfiguration object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ActionContextMustHaveDescriptor">
            <summary>
            The HttpActionContext.ActionDescriptor is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatActionContextMustHaveDescriptor">
            <summary>
            The HttpActionContext.ActionDescriptor is null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ActionContextMustHaveRequest">
            <summary>
            The HttpActionContext.Request is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatActionContextMustHaveRequest">
            <summary>
            The HttpActionContext.Request is null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ActionExecutedContextMustHaveActionContext">
            <summary>
            The HttpActionExecutedContext.ActionContext is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatActionExecutedContextMustHaveActionContext">
            <summary>
            The HttpActionExecutedContext.ActionContext is null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ActionExecutedContextMustHaveRequest">
            <summary>
            The HttpExecutedActionContext.Request is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatActionExecutedContextMustHaveRequest">
            <summary>
            The HttpExecutedActionContext.Request is null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.OrderByClauseNotSupported">
            <summary>
            Only ordering by properties is supported for non-primitive collections. Expressions are not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatOrderByClauseNotSupported">
            <summary>
            Only ordering by properties is supported for non-primitive collections. Expressions are not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EntitySetNotFoundForName">
            <summary>
            No EntitySet exists in the EdmModel with entitySetName '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEntitySetNotFoundForName(System.Object)">
            <summary>
            No EntitySet exists in the EdmModel with entitySetName '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.QueryCannotBeEmpty">
            <summary>
            The value for OData query '{0}' cannot be empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatQueryCannotBeEmpty(System.Object)">
            <summary>
            The value for OData query '{0}' cannot be empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EdmTypeNotSupported">
            <summary>
            {0} is not a supported EDM type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEdmTypeNotSupported(System.Object)">
            <summary>
            {0} is not a supported EDM type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MultipleMatchingClrTypesForEdmType">
            <summary>
            More than one matching CLR type found for the EDM type {0}.\nThe matching CLR types are {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMultipleMatchingClrTypesForEdmType(System.Object,System.Object)">
            <summary>
            More than one matching CLR type found for the EDM type {0}.\nThe matching CLR types are {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ODataFunctionNotSupported">
            <summary>
            Unknown function '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatODataFunctionNotSupported(System.Object)">
            <summary>
            Unknown function '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.QueryNodeBindingNotSupported">
            <summary>
            Binding OData QueryNode of kind {0} is not supported by {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatQueryNodeBindingNotSupported(System.Object,System.Object)">
            <summary>
            Binding OData QueryNode of kind {0} is not supported by {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.QueryNodeValidationNotSupported">
            <summary>
            Validating OData QueryNode of kind {0} is not supported by {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatQueryNodeValidationNotSupported(System.Object,System.Object)">
            <summary>
            Validating OData QueryNode of kind {0} is not supported by {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnaryNodeValidationNotSupported">
            <summary>
            Validating OData UnaryOperatorNode of kind {0} is not supported by {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnaryNodeValidationNotSupported(System.Object,System.Object)">
            <summary>
            Validating OData UnaryOperatorNode of kind {0} is not supported by {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.OrderByDuplicateProperty">
            <summary>
            Duplicate property named '{0}' is not supported in '$orderby'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatOrderByDuplicateProperty(System.Object)">
            <summary>
            Duplicate property named '{0}' is not supported in '$orderby'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotRecognizeNodeType">
            <summary>
            '{0}' does not recognize the node with type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotRecognizeNodeType(System.Object,System.Object)">
            <summary>
            '{0}' does not recognize the node with type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TargetKindNotImplemented">
            <summary>
            '{0}' of kind '{1}' is not implemented.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTargetKindNotImplemented(System.Object,System.Object)">
            <summary>
            '{0}' of kind '{1}' is not implemented.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidDollarId">
            <summary>
            The value of $id '{0}' is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidDollarId(System.Object)">
            <summary>
            The value of $id '{0}' is invalid.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ErrorTypeMustBeODataErrorOrHttpError">
            <summary>
            The type '{0}' is not supported by the ODataErrorSerializer. The type must be ODataError or HttpError.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatErrorTypeMustBeODataErrorOrHttpError(System.Object)">
            <summary>
            The type '{0}' is not supported by the ODataErrorSerializer. The type must be ODataError or HttpError.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotAutoCreateMultipleCandidates">
            <summary>
            Cannot automatically bind the navigation property '{0}' on entity type '{1}' for the entity set or singleton '{2}' because there are two or more matching target entity sets or singletons. The matching entity sets or singletons are: {3}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotAutoCreateMultipleCandidates(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Cannot automatically bind the navigation property '{0}' on entity type '{1}' for the entity set or singleton '{2}' because there are two or more matching target entity sets or singletons. The matching entity sets or singletons are: {3}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyDoesNotBelongToType">
            <summary>
            The property '{0}' does not belong to the type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyDoesNotBelongToType(System.Object,System.Object)">
            <summary>
            The property '{0}' does not belong to the type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EntitySetAlreadyConfiguredDifferentEntityType">
            <summary>
            The entity set '{0}' was already configured with a different EntityType ('{1}').
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEntitySetAlreadyConfiguredDifferentEntityType(System.Object,System.Object)">
            <summary>
            The entity set '{0}' was already configured with a different EntityType ('{1}').
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeCannotBeComplexWasEntity">
            <summary>
            The type '{0}' cannot be configured as a ComplexType. It was previously configured as an EntityType.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeCannotBeComplexWasEntity(System.Object)">
            <summary>
            The type '{0}' cannot be configured as a ComplexType. It was previously configured as an EntityType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeCannotBeEntityWasComplex">
            <summary>
            The type '{0}' cannot be configured as an EntityType. It was previously configured as a ComplexType.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeCannotBeEntityWasComplex(System.Object)">
            <summary>
            The type '{0}' cannot be configured as an EntityType. It was previously configured as a ComplexType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeCannotBeEnum">
            <summary>
            The type '{0}' cannot be configured as an enum type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeCannotBeEnum(System.Object)">
            <summary>
            The type '{0}' cannot be configured as an enum type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EnumValueCannotBeLong">
            <summary>
            The value of enum member '{0}' cannot be converted to a long type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEnumValueCannotBeLong(System.Object)">
            <summary>
            The value of enum member '{0}' cannot be converted to a long type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EnumTypeDoesNotExist">
            <summary>
            The enum type '{0}' does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEnumTypeDoesNotExist(System.Object)">
            <summary>
            The enum type '{0}' does not exist.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RecursiveComplexTypesNotAllowed">
            <summary>
            The complex type '{0}' has a reference to itself through the property '{1}'. A recursive loop of complex types is not allowed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRecursiveComplexTypesNotAllowed(System.Object,System.Object)">
            <summary>
            The complex type '{0}' has a reference to itself through the property '{1}'. A recursive loop of complex types is not allowed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DeserializerDoesNotSupportRead">
            <summary>
            '{0}' does not support Read.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDeserializerDoesNotSupportRead(System.Object)">
            <summary>
            '{0}' does not support Read.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MappingDoesNotContainEntityType">
            <summary>
            The provided mapping does not contain an entry for the entity type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMappingDoesNotContainEntityType(System.Object)">
            <summary>
            The provided mapping does not contain an entry for the entity type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ManyToManyNavigationPropertyMustReturnCollection">
            <summary>
            The property '{0}' on the type '{1}' is being configured as a Many-to-Many navigation property. Many to Many navigation properties must be collections.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatManyToManyNavigationPropertyMustReturnCollection(System.Object,System.Object)">
            <summary>
            The property '{0}' on the type '{1}' is being configured as a Many-to-Many navigation property. Many to Many navigation properties must be collections.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DoesNotSupportReadInLine">
            <summary>
            Type '{0}' does not support ReadInline.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDoesNotSupportReadInLine(System.Object)">
            <summary>
            Type '{0}' does not support ReadInline.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.FormatterReadIsNotSupportedForType">
            <summary>
            Reading type '{0}' is not supported by '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatFormatterReadIsNotSupportedForType(System.Object,System.Object)">
            <summary>
            Reading type '{0}' is not supported by '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MustBeComplexProperty">
            <summary>
            The property '{0}' on type '{1}' must be a Complex property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMustBeComplexProperty(System.Object,System.Object)">
            <summary>
            The property '{0}' on type '{1}' must be a Complex property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MustBeNavigationProperty">
            <summary>
            The property  '{0}' on type '{1}' must be a Navigation property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMustBeNavigationProperty(System.Object,System.Object)">
            <summary>
            The property  '{0}' on type '{1}' must be a Navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MustBePrimitiveProperty">
            <summary>
            The property '{0}'  on type '{1}' must be a Primitive property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMustBePrimitiveProperty(System.Object,System.Object)">
            <summary>
            The property '{0}'  on type '{1}' must be a Primitive property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MustBeEnumProperty">
            <summary>
            The property '{0}' on type '{1}' must be an Enum property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMustBeEnumProperty(System.Object,System.Object)">
            <summary>
            The property '{0}' on type '{1}' must be an Enum property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MustHaveMatchingMultiplicity">
            <summary>
            The multiplicity of the '{0}' property must be '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMustHaveMatchingMultiplicity(System.Object,System.Object)">
            <summary>
            The multiplicity of the '{0}' property must be '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MustBePrimitiveType">
            <summary>
            The type '{0}' must be a primitive type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMustBePrimitiveType(System.Object)">
            <summary>
            The type '{0}' must be a primitive type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RebindingNotSupported">
            <summary>
            Rebinding is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRebindingNotSupported">
            <summary>
            Rebinding is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MaxNodeLimitExceeded">
            <summary>
            The node count limit of '{0}' has been exceeded. To increase the limit, set the '{1}' property on EnableQueryAttribute or ODataValidationSettings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMaxNodeLimitExceeded(System.Object,System.Object)">
            <summary>
            The node count limit of '{0}' has been exceeded. To increase the limit, set the '{1}' property on EnableQueryAttribute or ODataValidationSettings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidEntitySetName">
            <summary>
            '{0}' is not a valid entity set name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidEntitySetName(System.Object)">
            <summary>
            '{0}' is not a valid entity set name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotCastFilter">
            <summary>
            Cannot cast $filter of type '{0}' to type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotCastFilter(System.Object,System.Object)">
            <summary>
            Cannot cast $filter of type '{0}' to type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ComplexTypeRefersToEntityType">
            <summary>
            The complex type '{0}' refers to the entity type '{1}' through the property '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatComplexTypeRefersToEntityType(System.Object,System.Object,System.Object)">
            <summary>
            The complex type '{0}' refers to the entity type '{1}' through the property '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MultipleAttributesFound">
            <summary>
            The member '{0}' on type '{1}' contains multiple instances of the attribute '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMultipleAttributesFound(System.Object,System.Object,System.Object)">
            <summary>
            The member '{0}' on type '{1}' contains multiple instances of the attribute '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.GetEdmModelCalledMoreThanOnce">
            <summary>
            GetEdmModel cannot be called more than once. Consider using a different instance of the model builder or reusing the model you have built earlier.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatGetEdmModelCalledMoreThanOnce">
            <summary>
            GetEdmModel cannot be called more than once. Consider using a different instance of the model builder or reusing the model you have built earlier.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CollectionPropertiesMustReturnIEnumerable">
            <summary>
            CollectionProperties must implement IEnumerable&lt;&gt;. The property '{0}' declared on '{1}' does not implement IEnumerable&lt;&gt;.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCollectionPropertiesMustReturnIEnumerable(System.Object,System.Object)">
            <summary>
            CollectionProperties must implement IEnumerable&lt;&gt;. The property '{0}' declared on '{1}' does not implement IEnumerable&lt;&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MustBeCollectionProperty">
            <summary>
            The '{0}' property on '{1}' must be a Collection property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMustBeCollectionProperty(System.Object,System.Object)">
            <summary>
            The '{0}' property on '{1}' must be a Collection property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotPatchNavigationProperties">
            <summary>
            Cannot apply PATCH to navigation property '{0}' on entity type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotPatchNavigationProperties(System.Object,System.Object)">
            <summary>
            Cannot apply PATCH to navigation property '{0}' on entity type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeMustBeEnumOrNullableEnum">
            <summary>
            The type '{0}' must be an enum or Nullable&lt;T&gt; where T is an enum type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeMustBeEnumOrNullableEnum(System.Object)">
            <summary>
            The type '{0}' must be an enum or Nullable&lt;T&gt; where T is an enum type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyMustBeEnum">
            <summary>
            The value with type '{0}' must have type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyMustBeEnum(System.Object,System.Object)">
            <summary>
            The value with type '{0}' must have type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyMustBeString">
            <summary>
            The value must be a string.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyMustBeString">
            <summary>
            The value must be a string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyMustBeDateTimeOffset">
            <summary>
            The value must be a DateTimeOffset.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyMustBeDateTimeOffset">
            <summary>
            The value must be a DateTimeOffset.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyMustBeStringLengthOne">
            <summary>
            The value must be a string with a length of 1.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyMustBeStringLengthOne">
            <summary>
            The value must be a string with a length of 1.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyMustBeStringMaxLengthOne">
            <summary>
            The value must be a string with a maximum length of 1.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyMustBeStringMaxLengthOne">
            <summary>
            The value must be a string with a maximum length of 1.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ArgumentMustBeOfType">
            <summary>
            The argument must be of type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatArgumentMustBeOfType(System.Object)">
            <summary>
            The argument must be of type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CollectionShouldHaveAddMethod">
            <summary>
            The type '{0}' of the property '{1}' on type '{2}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCollectionShouldHaveAddMethod(System.Object,System.Object,System.Object)">
            <summary>
            The type '{0}' of the property '{1}' on type '{2}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidBindingParameterType">
            <summary>
            Invalid bindingParameter type '{0}'. A bindingParameter must be either an EntityType or a Collection of EntityTypes.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidBindingParameterType(System.Object)">
            <summary>
            Invalid bindingParameter type '{0}'. A bindingParameter must be either an EntityType or a Collection of EntityTypes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MoreThanOneProcedureFound">
            <summary>
            More than one Procedure called '{0}' was found. Try using the other RemoveProcedure override.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMoreThanOneProcedureFound(System.Object)">
            <summary>
            More than one Procedure called '{0}' was found. Try using the other RemoveProcedure override.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NoMatchingIEdmTypeFound">
            <summary>
            No IEdmType could be found for '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNoMatchingIEdmTypeFound(System.Object)">
            <summary>
            No IEdmType could be found for '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnsupportedEdmTypeKind">
            <summary>
            Found unsupported EdmTypeKind '{0}' in list of available types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnsupportedEdmTypeKind(System.Object)">
            <summary>
            Found unsupported EdmTypeKind '{0}' in list of available types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotDefineKeysOnDerivedTypes">
            <summary>
            Cannot define keys on type '{0}' deriving from '{1}'. The base type in the entity inheritance hierarchy already contains keys.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotDefineKeysOnDerivedTypes(System.Object,System.Object)">
            <summary>
            Cannot define keys on type '{0}' deriving from '{1}'. The base type in the entity inheritance hierarchy already contains keys.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotRedefineBaseTypeProperty">
            <summary>
            Cannot redefine property '{0}' already defined on the base type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotRedefineBaseTypeProperty(System.Object,System.Object)">
            <summary>
            Cannot redefine property '{0}' already defined on the base type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeDoesNotInheritFromBaseType">
            <summary>
            '{0}' does not inherit from '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeDoesNotInheritFromBaseType(System.Object,System.Object)">
            <summary>
            '{0}' does not inherit from '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyAlreadyDefinedInDerivedType">
            <summary>
            Cannot define property '{0}' in the base type '{1}' as the derived type '{2}' already defines it.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyAlreadyDefinedInDerivedType(System.Object,System.Object,System.Object)">
            <summary>
            Cannot define property '{0}' in the base type '{1}' as the derived type '{2}' already defines it.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ConvertToEnumFailed">
            <summary>
            Cannot compare an enum of type '{0}' to an expression of type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatConvertToEnumFailed(System.Object,System.Object)">
            <summary>
            Cannot compare an enum of type '{0}' to an expression of type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.FunctionNotSupportedOnEnum">
            <summary>
            The '{0}' function cannot be applied to an enumeration-typed argument.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatFunctionNotSupportedOnEnum(System.Object)">
            <summary>
            The '{0}' function cannot be applied to an enumeration-typed argument.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotInstantiateAbstractEntityType">
            <summary>
            An instance of the abstract entity type '{0}' was found. Abstract entity types cannot be instantiated.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotInstantiateAbstractEntityType(System.Object)">
            <summary>
            An instance of the abstract entity type '{0}' was found. Abstract entity types cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotInstantiateAbstractComplexType">
            <summary>
            An instance of the abstract complex type '{0}' was found. Abstract complex types cannot be instantiated.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotInstantiateAbstractComplexType(System.Object)">
            <summary>
            An instance of the abstract complex type '{0}' was found. Abstract complex types cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NullElementInCollection">
            <summary>
            Collections cannot contain null elements.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNullElementInCollection">
            <summary>
            Collections cannot contain null elements.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.WriteToStreamAsyncMustHaveRequest">
            <summary>
            The OData formatter does not support writing client requests. This formatter instance must have an associated request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatWriteToStreamAsyncMustHaveRequest">
            <summary>
            The OData formatter does not support writing client requests. This formatter instance must have an associated request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ValueIsInvalid">
            <summary>
            The value '{0}' is invalid. {1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatValueIsInvalid(System.Object,System.Object)">
            <summary>
            The value '{0}' is invalid. {1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ModelBinderUtil_ValueCannotBeEnum">
            <summary>
            The binding value '{0}' cannot be bound to the enum type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatModelBinderUtil_ValueCannotBeEnum(System.Object,System.Object)">
            <summary>
            The binding value '{0}' cannot be bound to the enum type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ModelBinderUtil_ModelMetadataCannotBeNull">
            <summary>
            The binding context cannot have a null ModelMetadata.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatModelBinderUtil_ModelMetadataCannotBeNull">
            <summary>
            The binding context cannot have a null ModelMetadata.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EntityTypeMismatch">
            <summary>
            The entity type '{0}' does not match the expected entity type '{1}' as set on the query context.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEntityTypeMismatch(System.Object,System.Object)">
            <summary>
            The entity type '{0}' does not match the expected entity type '{1}' as set on the query context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotApplyODataQueryOptionsOfT">
            <summary>
            Cannot apply {0} of '{1}' to {2} of '{3}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotApplyODataQueryOptionsOfT(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Cannot apply {0} of '{1}' to {2} of '{3}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.HasActionLinkRequiresBindToEntity">
            <summary>
            To register an action link factory, actions must be bindable to a single entity. Action '{0}' does not meet this requirement.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatHasActionLinkRequiresBindToEntity(System.Object)">
            <summary>
            To register an action link factory, actions must be bindable to a single entity. Action '{0}' does not meet this requirement.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NavigationPropertyNotInHierarchy">
            <summary>
            The declaring entity type '{0}' of the given navigation property is not a part of the entity type '{1}' hierarchy of the entity set or singleton '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNavigationPropertyNotInHierarchy(System.Object,System.Object,System.Object)">
            <summary>
            The declaring entity type '{0}' of the given navigation property is not a part of the entity type '{1}' hierarchy of the entity set or singleton '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TargetEntityTypeMissing">
            <summary>
            Could not find the target entity type for the navigation property '{0}' on entity type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTargetEntityTypeMissing(System.Object,System.Object)">
            <summary>
            Could not find the target entity type for the navigation property '{0}' on entity type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.KeyValueCannotBeNull">
            <summary>
            Key property '{0}' of type '{1}' is null. Key properties cannot have null values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatKeyValueCannotBeNull(System.Object,System.Object)">
            <summary>
            Key property '{0}' of type '{1}' is null. Key properties cannot have null values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.BinaryOperatorNotSupported">
            <summary>
            A binary operator with incompatible types was detected. Found operand types '{0}' and '{1}' for operator kind '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatBinaryOperatorNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            A binary operator with incompatible types was detected. Found operand types '{0}' and '{1}' for operator kind '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.QueryingRequiresObjectContent">
            <summary>
            Queries can not be applied to a response content of type '{0}'. The response content must be an ObjectContent.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatQueryingRequiresObjectContent(System.Object)">
            <summary>
            Queries can not be applied to a response content of type '{0}'. The response content must be an ObjectContent.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MaxAnyAllExpressionLimitExceeded">
            <summary>
            The Any/All nesting limit of '{0}' has been exceeded. '{1}' can be configured on ODataQuerySettings or EnableQueryAttribute.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMaxAnyAllExpressionLimitExceeded(System.Object,System.Object)">
            <summary>
            The Any/All nesting limit of '{0}' has been exceeded. '{1}' can be configured on ODataQuerySettings or EnableQueryAttribute.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotAddToNullCollection">
            <summary>
            The property '{0}' on type '{1}' returned a null value. The input stream contains collection items which cannot be added if the instance is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotAddToNullCollection(System.Object,System.Object)">
            <summary>
            The property '{0}' on type '{1}' returned a null value. The input stream contains collection items which cannot be added if the instance is null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyIsNotCollection">
            <summary>
            The type '{0}' of the property '{1}' on type '{2}' must be a collection.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyIsNotCollection(System.Object,System.Object,System.Object)">
            <summary>
            The type '{0}' of the property '{1}' on type '{2}' must be a collection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.GetOnlyCollectionCannotBeArray">
            <summary>
            The value of the property '{0}' on type '{1}' is an array. Consider adding a setter for the property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatGetOnlyCollectionCannotBeArray(System.Object,System.Object)">
            <summary>
            The value of the property '{0}' on type '{1}' is an array. Consider adding a setter for the property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidPathSegment">
            <summary>
            The URI segment '{0}' is invalid after the segment '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidPathSegment(System.Object,System.Object)">
            <summary>
            The URI segment '{0}' is invalid after the segment '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RequestNotActionInvocation">
            <summary>
            The last segment of the request URI '{0}' was not recognized as an OData action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRequestNotActionInvocation(System.Object)">
            <summary>
            The last segment of the request URI '{0}' was not recognized as an OData action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NoMatchingResource">
            <summary>
            No HTTP resource was found that matches the request URI '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNoMatchingResource(System.Object)">
            <summary>
            No HTTP resource was found that matches the request URI '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NoRoutingHandlerToSelectAction">
            <summary>
            No routing convention was found to select an action for the OData path with template '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNoRoutingHandlerToSelectAction(System.Object)">
            <summary>
            No routing convention was found to select an action for the OData path with template '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DeltaTypeMismatch">
            <summary>
            Cannot use Delta of type '{0}' on an entity of type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDeltaTypeMismatch(System.Object,System.Object)">
            <summary>
            Cannot use Delta of type '{0}' on an entity of type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DeltaEntityTypeNotAssignable">
            <summary>
            The actual entity type '{0}' is not assignable to the expected type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDeltaEntityTypeNotAssignable(System.Object,System.Object)">
            <summary>
            The actual entity type '{0}' is not assignable to the expected type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotAllowedArithmeticOperator">
            <summary>
            Arithmetic operator '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotAllowedArithmeticOperator(System.Object,System.Object)">
            <summary>
            Arithmetic operator '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotAllowedFunction">
            <summary>
            Function '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotAllowedFunction(System.Object,System.Object)">
            <summary>
            Function '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotAllowedLogicalOperator">
            <summary>
            Logical operator '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotAllowedLogicalOperator(System.Object,System.Object)">
            <summary>
            Logical operator '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotAllowedOrderByProperty">
            <summary>
            Order by '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotAllowedOrderByProperty(System.Object,System.Object)">
            <summary>
            Order by '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotAllowedQueryOption">
            <summary>
            Query option '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotAllowedQueryOption(System.Object,System.Object)">
            <summary>
            Query option '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.SkipTopLimitExceeded">
            <summary>
            The limit of '{0}' for {1} query has been exceeded. The value from the incoming request is '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatSkipTopLimitExceeded(System.Object,System.Object,System.Object)">
            <summary>
            The limit of '{0}' for {1} query has been exceeded. The value from the incoming request is '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EntitySetMissingDuringSerialization">
            <summary>
            The related entity set could not be found from the OData path. The related entity set is required to serialize the payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEntitySetMissingDuringSerialization">
            <summary>
            The related entity set could not be found from the OData path. The related entity set is required to serialize the payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnableToDetermineMetadataUrl">
            <summary>
            The ODataMediaTypeFormatter must be able to determine the metadata URL for a request in order to serialize the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnableToDetermineMetadataUrl">
            <summary>
            The ODataMediaTypeFormatter must be able to determine the metadata URL for a request in order to serialize the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ODataPathMissing">
            <summary>
            The operation cannot be completed because no ODataPath is available for the request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatODataPathMissing">
            <summary>
            The operation cannot be completed because no ODataPath is available for the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.OrderByDuplicateIt">
            <summary>
            Multiple '$it' nodes are not supported in '$orderby'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatOrderByDuplicateIt">
            <summary>
            Multiple '$it' nodes are not supported in '$orderby'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ClrTypeNotInModel">
            <summary>
            The given model does not contain the type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatClrTypeNotInModel(System.Object)">
            <summary>
            The given model does not contain the type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ReadFromStreamAsyncMustHaveRequest">
            <summary>
            The OData formatter requires an attached request in order to deserialize. Controller classes must derive from ODataController or be marked with ODataFormattingAttribute. Custom parameter bindings must call GetPerRequestFormatterInstance on each formatter and use these per-request instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatReadFromStreamAsyncMustHaveRequest">
            <summary>
            The OData formatter requires an attached request in order to deserialize. Controller classes must derive from ODataController or be marked with ODataFormattingAttribute. Custom parameter bindings must call GetPerRequestFormatterInstance on each formatter and use these per-request instances.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RequestMustHaveModel">
            <summary>
            The request must have an associated EDM model. Consider using the extension method HttpConfiguration.Routes.MapODataServiceRoute to register a route that parses the OData URI and attaches the model information.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRequestMustHaveModel">
            <summary>
            The request must have an associated EDM model. Consider using the extension method HttpConfiguration.Routes.MapODataServiceRoute to register a route that parses the OData URI and attaches the model information.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.QueryGetModelMustNotReturnNull">
            <summary>
            A model is required for querying. Consider implementing the EnableQueryAttribute.GetModel method never to return a null value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatQueryGetModelMustNotReturnNull">
            <summary>
            A model is required for querying. Consider implementing the EnableQueryAttribute.GetModel method never to return a null value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RequestMustHaveODataRouteName">
            <summary>
            The request must have an associated OData route name. Consider using the extension request.ODataProperties().RouteName to set a route name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRequestMustHaveODataRouteName">
            <summary>
            The request must have an associated OData route name. Consider using the extension request.ODataProperties().RouteName to set a route name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ManyNavigationPropertiesCannotBeChanged">
            <summary>
            Cannot change multiplicity of the collection navigation property '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatManyNavigationPropertiesCannotBeChanged(System.Object)">
            <summary>
            Cannot change multiplicity of the collection navigation property '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnableToDetermineBaseUrl">
            <summary>
            The ODataMediaTypeFormatter was unable to determine the base URI for the request. The request must be processed by an OData route for the OData formatter to serialize the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnableToDetermineBaseUrl">
            <summary>
            The ODataMediaTypeFormatter was unable to determine the base URI for the request. The request must be processed by an OData route for the OData formatter to serialize the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotWriteType">
            <summary>
            {0} cannot write an object of type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotWriteType(System.Object,System.Object)">
            <summary>
            {0} cannot write an object of type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RootElementNameMissing">
            <summary>
            The 'RootElementName' property is required on '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRootElementNameMissing(System.Object)">
            <summary>
            The 'RootElementName' property is required on '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeCannotBeDeserialized">
            <summary>
            '{0}' cannot be deserialized using the {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeCannotBeDeserialized(System.Object,System.Object)">
            <summary>
            '{0}' cannot be deserialized using the {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EntityTypeNotInModel">
            <summary>
            Cannot find the entity type '{0}' in the model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEntityTypeNotInModel(System.Object)">
            <summary>
            Cannot find the entity type '{0}' in the model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ComplexTypeNotInModel">
            <summary>
            Cannot find the complex type '{0}' in the model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatComplexTypeNotInModel(System.Object)">
            <summary>
            Cannot find the complex type '{0}' in the model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ModelMissingFromReadContext">
            <summary>
            The EDM model is missing on the read context. The model is required on the read context to deserialize the payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatModelMissingFromReadContext">
            <summary>
            The EDM model is missing on the read context. The model is required on the read context to deserialize the payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NavigationPropertyNotfound">
            <summary>
            Cannot find navigation property '{0}' on the entity type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNavigationPropertyNotfound(System.Object,System.Object)">
            <summary>
            Cannot find navigation property '{0}' on the entity type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.SelectExpandEmptyOrNull">
            <summary>
            'select' and 'expand' cannot be both null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatSelectExpandEmptyOrNull">
            <summary>
            'select' and 'expand' cannot be both null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.SelectionTypeNotSupported">
            <summary>
            $select does not support selections of type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatSelectionTypeNotSupported(System.Object)">
            <summary>
            $select does not support selections of type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.SelectNonEntity">
            <summary>
            The type '{0}' is not an entity type. Only entity types support $select and $expand.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatSelectNonEntity(System.Object)">
            <summary>
            The type '{0}' is not an entity type. Only entity types support $select and $expand.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.PropertyNotFound">
            <summary>
            The EDM instance of type '{0}' is missing the property '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatPropertyNotFound(System.Object,System.Object)">
            <summary>
            The EDM instance of type '{0}' is missing the property '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EdmTypeCannotBeNull">
            <summary>
            The EDM type of the object of type '{0}' is null. The EDM type of an {1} cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEdmTypeCannotBeNull(System.Object,System.Object)">
            <summary>
            The EDM type of the object of type '{0}' is null. The EDM type of an {1} cannot be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EdmObjectNull">
            <summary>
            The property 'EdmObject' of {0} cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEdmObjectNull(System.Object)">
            <summary>
            The property 'EdmObject' of {0} cannot be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.BatchRequestInvalidMediaType">
            <summary>
            The batch request must have '{0}' as the media type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatBatchRequestInvalidMediaType(System.Object)">
            <summary>
            The batch request must have '{0}' as the media type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.BatchRequestMissingBoundary">
            <summary>
            The batch request must have a boundary specification in the "Content-Type" header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatBatchRequestMissingBoundary">
            <summary>
            The batch request must have a boundary specification in the "Content-Type" header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.BatchRequestMissingContentType">
            <summary>
            The batch request must have a "Content-Type" header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatBatchRequestMissingContentType">
            <summary>
            The batch request must have a "Content-Type" header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidBatchReaderState">
            <summary>
            The current batch reader state '{0}' is invalid. The expected state is '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidBatchReaderState(System.Object,System.Object)">
            <summary>
            The current batch reader state '{0}' is invalid. The expected state is '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.BatchRequestMissingContent">
            <summary>
            The 'Content' property on the batch request cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatBatchRequestMissingContent">
            <summary>
            The 'Content' property on the batch request cannot be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidExpansionDepthValue">
            <summary>
            '{0}' should be less than or equal to '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidExpansionDepthValue(System.Object,System.Object)">
            <summary>
            '{0}' should be less than or equal to '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MaxExpandDepthExceeded">
            <summary>
            The request includes a $expand path which is too deep. The maximum depth allowed is {0}. To increase the limit, set the '{1}' property on EnableQueryAttribute or ODataValidationSettings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMaxExpandDepthExceeded(System.Object,System.Object)">
            <summary>
            The request includes a $expand path which is too deep. The maximum depth allowed is {0}. To increase the limit, set the '{1}' property on EnableQueryAttribute or ODataValidationSettings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NonSelectExpandOnSingleEntity">
            <summary>
            The requested resource is not a collection. Query options $filter, $orderby, $count, $skip, and $top can be applied only on collections.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNonSelectExpandOnSingleEntity">
            <summary>
            The requested resource is not a collection. Query options $filter, $orderby, $count, $skip, and $top can be applied only on collections.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.SingleResultHasMoreThanOneEntity">
            <summary>
            The action '{0}' on controller '{1}' returned a {2} containing more than one element. {2} must have zero or one elements.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatSingleResultHasMoreThanOneEntity(System.Object,System.Object,System.Object)">
            <summary>
            The action '{0}' on controller '{1}' returned a {2} containing more than one element. {2} must have zero or one elements.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnsupportedSelectExpandPath">
            <summary>
            A path within the select or expand query option is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnsupportedSelectExpandPath">
            <summary>
            A path within the select or expand query option is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UrlHelperNull">
            <summary>
            The property 'Url' of {0} cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUrlHelperNull(System.Object)">
            <summary>
            The property 'Url' of {0} cannot be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EdmComplexObjectNullRef">
            <summary>
            Cannot get property '{0}' of a null EDM object of type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEdmComplexObjectNullRef(System.Object,System.Object)">
            <summary>
            Cannot get property '{0}' of a null EDM object of type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnsupportedEdmType">
            <summary>
            The EDM type '{0}' of kind '{1}' is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnsupportedEdmType(System.Object,System.Object)">
            <summary>
            The EDM type '{0}' of kind '{1}' is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnexpectedElementType">
            <summary>
            The element type '{0}' of the given collection type '{1}' is not of the type '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnexpectedElementType(System.Object,System.Object,System.Object)">
            <summary>
            The element type '{0}' of the given collection type '{1}' is not of the type '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ActionNotBoundToEntity">
            <summary>
            The action '{0}' is not bound to an entity. Only actions that are bound to entities can have action links.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatActionNotBoundToEntity(System.Object)">
            <summary>
            The action '{0}' is not bound to an entity. Only actions that are bound to entities can have action links.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeMustBeEntity">
            <summary>
            {0} is not an entity type. Only entity types are supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeMustBeEntity(System.Object)">
            <summary>
            {0} is not an entity type. Only entity types are supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EditLinkNullForLocationHeader">
            <summary>
            The edit link builder for the entity set '{0}' returned null. An edit link is required for the location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEditLinkNullForLocationHeader(System.Object)">
            <summary>
            The edit link builder for the entity set '{0}' returned null. An edit link is required for the location header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ApplyToOnUntypedQueryOption">
            <summary>
            The query option is not bound to any CLR type. '{0}' is only supported with a query option bound to a CLR type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatApplyToOnUntypedQueryOption(System.Object)">
            <summary>
            The query option is not bound to any CLR type. '{0}' is only supported with a query option bound to a CLR type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ElementClrTypeNull">
            <summary>
            The property 'ElementClrType' of {0} cannot be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatElementClrTypeNull(System.Object)">
            <summary>
            The property 'ElementClrType' of {0} cannot be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CollectionShouldHaveClearMethod">
            <summary>
            The type '{0}' of the property '{1}' on type '{2}' does not have a Clear method. Consider using a collection type that does have a Clear method, such as IList&lt;T&gt; or ICollection&lt;T&gt;.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCollectionShouldHaveClearMethod(System.Object,System.Object,System.Object)">
            <summary>
            The type '{0}' of the property '{1}' on type '{2}' does not have a Clear method. Consider using a collection type that does have a Clear method, such as IList&lt;T&gt; or ICollection&lt;T&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.OrderByNodeCountExceeded">
            <summary>
            The number of clauses in $orderby query option exceeded the maximum number allowed. The maximum number of $orderby clauses allowed is {0}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatOrderByNodeCountExceeded(System.Object)">
            <summary>
            The number of clauses in $orderby query option exceeded the maximum number allowed. The maximum number of $orderby clauses allowed is {0}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ReturnEntityCollectionWithoutEntitySet">
            <summary>
            The EDM type '{0}' is already declared as an entity type. Use the method 'ReturnsCollectionFromEntitySet' if the return type is an entity collection.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatReturnEntityCollectionWithoutEntitySet(System.Object)">
            <summary>
            The EDM type '{0}' is already declared as an entity type. Use the method 'ReturnsCollectionFromEntitySet' if the return type is an entity collection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ReturnEntityWithoutEntitySet">
            <summary>
            The EDM type '{0}' is already declared as an entity type. Use the method 'ReturnsFromEntitySet' if the return type is an entity.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatReturnEntityWithoutEntitySet(System.Object)">
            <summary>
            The EDM type '{0}' is already declared as an entity type. Use the method 'ReturnsFromEntitySet' if the return type is an entity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NullCollectionsCannotBeSerialized">
            <summary>
            Null collections cannot be serialized.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNullCollectionsCannotBeSerialized">
            <summary>
            Null collections cannot be serialized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnterminatedStringLiteral">
            <summary>
            Unterminated string literal at {0} in segment '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnterminatedStringLiteral(System.Object,System.Object)">
            <summary>
            Unterminated string literal at {0} in segment '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidSingleQuoteCountForNonStringLiteral">
            <summary>
            The count of single quotes in non-string literal '{0}' must be 0 or 2 in segment '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidSingleQuoteCountForNonStringLiteral(System.Object,System.Object)">
            <summary>
            The count of single quotes in non-string literal '{0}' must be 0 or 2 in segment '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.LiteralHasABadFormat">
            <summary>
            The literal '{0}' has a bad format in segment '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatLiteralHasABadFormat(System.Object,System.Object)">
            <summary>
            The literal '{0}' has a bad format in segment '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NoKeyNameFoundInSegment">
            <summary>
            No key name was found at {0} in segment '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNoKeyNameFoundInSegment(System.Object,System.Object)">
            <summary>
            No key name was found at {0} in segment '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NoValueLiteralFoundInSegment">
            <summary>
            No value for key '{0}' was found at {1} in segment '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNoValueLiteralFoundInSegment(System.Object,System.Object,System.Object)">
            <summary>
            No value for key '{0}' was found at {1} in segment '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DuplicateKeyInSegment">
            <summary>
            Duplicate key '{0}' found in segment '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDuplicateKeyInSegment(System.Object,System.Object)">
            <summary>
            Duplicate key '{0}' found in segment '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NonNullUriRequiredForMediaTypeMapping">
            <summary>
            A non-null request URI must be provided to determine if a '{0}' matches a given request or response message.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNonNullUriRequiredForMediaTypeMapping(System.Object)">
            <summary>
            A non-null request URI must be provided to determine if a '{0}' matches a given request or response message.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EmptyParameterAlias">
            <summary>
            Parameter alias '{0}' in segment '{1}' is empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEmptyParameterAlias(System.Object,System.Object)">
            <summary>
            Parameter alias '{0}' in segment '{1}' is empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ParameterAliasMustBeInCurlyBraces">
            <summary>
            Parameter alias '{0}' in segment '{1}' does not start with '{{' or ends with '}}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatParameterAliasMustBeInCurlyBraces(System.Object,System.Object)">
            <summary>
            Parameter alias '{0}' in segment '{1}' does not start with '{{' or ends with '}}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.UnresolvedPathSegmentInTemplate">
            <summary>
            Found an unresolved path segment '{0}' in the OData path template '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatUnresolvedPathSegmentInTemplate(System.Object,System.Object)">
            <summary>
            Found an unresolved path segment '{0}' in the OData path template '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidODataPathTemplate">
            <summary>
            The given OData path template '{0}' is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidODataPathTemplate(System.Object)">
            <summary>
            The given OData path template '{0}' is invalid.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidODataRouteOnAction">
            <summary>
            The path template '{0}' on the action '{1}' in controller '{2}' is not a valid OData path template. {3}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidODataRouteOnAction(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The path template '{0}' on the action '{1}' in controller '{2}' is not a valid OData path template. {3}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RoutePrefixStartsWithSlash">
            <summary>
            The OData route prefix '{0}' on the controller '{1}' starts with a '/'. Route prefixes cannot start with a '/'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRoutePrefixStartsWithSlash(System.Object,System.Object)">
            <summary>
            The OData route prefix '{0}' on the controller '{1}' starts with a '/'. Route prefixes cannot start with a '/'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.FunctionNotBoundToEntity">
            <summary>
            The function '{0}' is not bound to an entity. Only actions that are bound to entities can have function links.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatFunctionNotBoundToEntity(System.Object)">
            <summary>
            The function '{0}' is not bound to an entity. Only actions that are bound to entities can have function links.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MoreThanOneOverloadActionBoundToSameTypeFound">
            <summary>
            Found more than one action with name '{0}' bound to the same type '{1}'. Each bound action must have a different binding type or name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMoreThanOneOverloadActionBoundToSameTypeFound(System.Object,System.Object)">
            <summary>
            Found more than one action with name '{0}' bound to the same type '{1}'. Each bound action must have a different binding type or name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MoreThanOneUnboundActionFound">
            <summary>
            Found more than one unbound action with name '{0}'. Each unbound action must have an unique action name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMoreThanOneUnboundActionFound(System.Object)">
            <summary>
            Found more than one unbound action with name '{0}'. Each unbound action must have an unique action name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ProcedureHasInvalidEntitySetPath">
            <summary>
            Invalid EntitySetPath detected. '{0}' is not a valid entity set path for procedure '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatProcedureHasInvalidEntitySetPath(System.Object,System.Object)">
            <summary>
            Invalid EntitySetPath detected. '{0}' is not a valid entity set path for procedure '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.FunctionParameterNotFound">
            <summary>
            The function parameter '{0}' cannot be found.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatFunctionParameterNotFound(System.Object)">
            <summary>
            The function parameter '{0}' cannot be found.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidETagHandler">
            <summary>
            The ETag handler set in the configuration property is of type '{0}', which does not implement IETagHandler.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidETagHandler(System.Object)">
            <summary>
            The ETag handler set in the configuration property is of type '{0}', which does not implement IETagHandler.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NullETagHandler">
            <summary>
            The ETag handler set in the configuration property must not be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNullETagHandler">
            <summary>
            The ETag handler set in the configuration property must not be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidTimeZoneInfo">
            <summary>
            The time zone info set in the configuration property is of type '{0}'. The time zone info type must be type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidTimeZoneInfo(System.Object,System.Object)">
            <summary>
            The time zone info set in the configuration property is of type '{0}'. The time zone info type must be type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotApplyETagOfT">
            <summary>
            Cannot apply {0} of '{1}' to {2} of '{3}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotApplyETagOfT(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Cannot apply {0} of '{1}' to {2} of '{3}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ETagNotWellFormed">
            <summary>
            The ETag is not well-formed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatETagNotWellFormed">
            <summary>
            The ETag is not well-formed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotFilterablePropertyUsedInFilter">
            <summary>
            The property '{0}' cannot be used in the $filter query option.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotFilterablePropertyUsedInFilter(System.Object)">
            <summary>
            The property '{0}' cannot be used in the $filter query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotSortablePropertyUsedInOrderBy">
            <summary>
            The property '{0}' cannot be used in the $orderby query option.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotSortablePropertyUsedInOrderBy(System.Object)">
            <summary>
            The property '{0}' cannot be used in the $orderby query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotExpandablePropertyUsedInExpand">
            <summary>
            The property '{0}' cannot be used in the $expand query option.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotExpandablePropertyUsedInExpand(System.Object)">
            <summary>
            The property '{0}' cannot be used in the $expand query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotNavigablePropertyUsedInNavigation">
            <summary>
            The property '{0}' cannot be used for navigation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotNavigablePropertyUsedInNavigation(System.Object)">
            <summary>
            The property '{0}' cannot be used for navigation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NotCountablePropertyUsedForCount">
            <summary>
            The property '{0}' cannot be used for $count.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNotCountablePropertyUsedForCount(System.Object)">
            <summary>
            The property '{0}' cannot be used for $count.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EntityTypeDoesntHaveKeyDefined">
            <summary>
            The entity '{0}' does not have a key defined.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEntityTypeDoesntHaveKeyDefined(System.Object)">
            <summary>
            The entity '{0}' does not have a key defined.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidPropertyMapper">
            <summary>
            The mapper provider must return a valid '{0}' instance for the given '{1}' IEdmType.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidPropertyMapper(System.Object,System.Object)">
            <summary>
            The mapper provider must return a valid '{0}' instance for the given '{1}' IEdmType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidPropertyMapping">
            <summary>
            The key mapping for the property '{0}' can't be null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidPropertyMapping(System.Object)">
            <summary>
            The key mapping for the property '{0}' can't be null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidSingletonName">
            <summary>
            '{0}' is not a valid singleton name. The singleton name cannot contain '.'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidSingletonName(System.Object)">
            <summary>
            '{0}' is not a valid singleton name. The singleton name cannot contain '.'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.SingletonAlreadyConfiguredDifferentEntityType">
            <summary>
            The singleton '{0}' was already configured with a different EntityType ('{1}').
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatSingletonAlreadyConfiguredDifferentEntityType(System.Object,System.Object)">
            <summary>
            The singleton '{0}' was already configured with a different EntityType ('{1}').
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EntitySetNameAlreadyConfiguredAsSingleton">
            <summary>
            The entity set name '{0}' was already configured as a singleton.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEntitySetNameAlreadyConfiguredAsSingleton(System.Object)">
            <summary>
            The entity set name '{0}' was already configured as a singleton.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.SingletonNameAlreadyConfiguredAsEntitySet">
            <summary>
            The singleton name '{0}' was already configured as an entity set.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatSingletonNameAlreadyConfiguredAsEntitySet(System.Object)">
            <summary>
            The singleton name '{0}' was already configured as an entity set.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NavigationSourceMissingDuringSerialization">
            <summary>
            The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to serialize the payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNavigationSourceMissingDuringSerialization">
            <summary>
            The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to serialize the payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NavigationSourceMissingDuringDeserialization">
            <summary>
            The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to deserialize the payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNavigationSourceMissingDuringDeserialization">
            <summary>
            The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to deserialize the payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.Object_NotYetInitialized">
            <summary>
            The object has not yet been initialized. Ensure that HttpConfiguration.EnsureInitialized() is called in the application's startup code after all other initialization code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatObject_NotYetInitialized">
            <summary>
            The object has not yet been initialized. Ensure that HttpConfiguration.EnsureInitialized() is called in the application's startup code after all other initialization code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.MoreThanOneDynamicPropertyContainerFound">
            <summary>
            Found more than one dynamic property container in type '{0}'. Each open type must have at most one dynamic property container.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatMoreThanOneDynamicPropertyContainerFound(System.Object)">
            <summary>
            Found more than one dynamic property container in type '{0}'. Each open type must have at most one dynamic property container.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DynamicPropertyNameAlreadyUsedAsDeclaredPropertyName">
            <summary>
            The name of dynamic property '{0}' was already used as the declared property name of open complex type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDynamicPropertyNameAlreadyUsedAsDeclaredPropertyName(System.Object,System.Object)">
            <summary>
            The name of dynamic property '{0}' was already used as the declared property name of open complex type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DuplicateDynamicPropertyNameFound">
            <summary>
            Duplicate dynamic property name '{0}' found in open type '{1}'. Each dynamic property name must be unique.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDuplicateDynamicPropertyNameFound(System.Object,System.Object)">
            <summary>
            Duplicate dynamic property name '{0}' found in open type '{1}'. Each dynamic property name must be unique.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotSetDynamicPropertyDictionary">
            <summary>
            The dynamic dictionary property '{0}' of type '{1}' cannot be set. The dynamic property dictionary must have a setter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotSetDynamicPropertyDictionary(System.Object,System.Object)">
            <summary>
            The dynamic dictionary property '{0}' of type '{1}' cannot be set. The dynamic property dictionary must have a setter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidPropertyInfoForDynamicPropertyAnnotation">
            <summary>
            Type '{0}' is not supported as dynamic property annotation. Referenced property must be of type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidPropertyInfoForDynamicPropertyAnnotation(System.Object,System.Object)">
            <summary>
            Type '{0}' is not supported as dynamic property annotation. Referenced property must be of type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.RequestUriTooShortForODataPath">
            <summary>
            Request URI '{0}' too short to contain OData path '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatRequestUriTooShortForODataPath(System.Object,System.Object)">
            <summary>
            Request URI '{0}' too short to contain OData path '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ODataPathNotFound">
            <summary>
            Request URI '{0}' does not contain OData path '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatODataPathNotFound(System.Object,System.Object)">
            <summary>
            Request URI '{0}' does not contain OData path '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.IdLinkNullForEntityIdHeader">
            <summary>
            The Id link builder for the entity set '{0}' returned null. An Id link is required for the OData-EntityId header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatIdLinkNullForEntityIdHeader(System.Object)">
            <summary>
            The Id link builder for the entity set '{0}' returned null. An Id link is required for the OData-EntityId header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NestedCollectionsNotSupported">
            <summary>
            The type '{0}' is a nested collection type. Nested collection types are not allowed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNestedCollectionsNotSupported(System.Object)">
            <summary>
            The type '{0}' is a nested collection type. Nested collection types are not allowed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DynamicPropertyCannotBeSerialized">
            <summary>
            The dynamic property '{0}' with Edm type '{1}' cannot be serialized.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDynamicPropertyCannotBeSerialized(System.Object,System.Object)">
            <summary>
            The dynamic property '{0}' with Edm type '{1}' cannot be serialized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.TypeOfDynamicPropertyNotSupported">
            <summary>
            The type '{0}' of dynamic property '{1}' is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatTypeOfDynamicPropertyNotSupported(System.Object,System.Object)">
            <summary>
            The type '{0}' of dynamic property '{1}' is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotReconfigEntityTypeAsComplexType">
            <summary>
            The entity type '{0}' cannot be configured as a complex type because the derived type '{1}' is already configured as an entity type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotReconfigEntityTypeAsComplexType(System.Object,System.Object)">
            <summary>
            The entity type '{0}' cannot be configured as a complex type because the derived type '{1}' is already configured as an entity type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CannotInferEdmType">
            <summary>
            Cannot determine the Edm type for the CLR type '{0}' because the derived type '{1}' is configured as entity type and another derived type '{2}' is configured as complex type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCannotInferEdmType(System.Object,System.Object,System.Object)">
            <summary>
            Cannot determine the Edm type for the CLR type '{0}' because the derived type '{1}' is configured as entity type and another derived type '{2}' is configured as complex type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.DependentAndPrincipalTypeNotMatch">
            <summary>
            The dependent property type '{0}' is not same as the principal property type '{1}. The dependent and principal properties must have must have same types in the same order.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatDependentAndPrincipalTypeNotMatch(System.Object,System.Object)">
            <summary>
            The dependent property type '{0}' is not same as the principal property type '{1}. The dependent and principal properties must have must have same types in the same order.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ReferentialConstraintPropertyTypeNotValid">
            <summary>
            The property type '{0}' of the referential constraint is not valid. The referential constraint property type must be primitive type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatReferentialConstraintPropertyTypeNotValid(System.Object)">
            <summary>
            The property type '{0}' of the referential constraint is not valid. The referential constraint property type must be primitive type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ReferentialConstraintOnManyNavigationPropertyNotSupported">
            <summary>
            Referential constraint for navigation property '{0}' on type '{1}' is not supported. Only required or optional navigation properties support referential constraint.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatReferentialConstraintOnManyNavigationPropertyNotSupported(System.Object,System.Object)">
            <summary>
            Referential constraint for navigation property '{0}' on type '{1}' is not supported. Only required or optional navigation properties support referential constraint.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ReferentialConstraintAlreadyConfigured">
            <summary>
            The '{0}' property '{1}' is already configured to have a relationship with '{2}' property '{3}' in the referential constraint.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatReferentialConstraintAlreadyConfigured(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The '{0}' property '{1}' is already configured to have a relationship with '{2}' property '{3}' in the referential constraint.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.NavigationSourceTypeHasNoKeys">
            <summary>
            The entity set or singleton '{0}' is based on type '{1}' that has no keys defined.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatNavigationSourceTypeHasNoKeys(System.Object,System.Object)">
            <summary>
            The entity set or singleton '{0}' is based on type '{1}' that has no keys defined.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.ParameterTypeIsNotCollection">
            <summary>
            The type '{0}' of the parameter '{1}' must be a collection.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatParameterTypeIsNotCollection(System.Object,System.Object)">
            <summary>
            The type '{0}' of the parameter '{1}' must be a collection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.EntityReferenceMustHasKeySegment">
            <summary>
            The Uri '{0}' in the parameter is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatEntityReferenceMustHasKeySegment(System.Object)">
            <summary>
            The Uri '{0}' in the parameter is invalid.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.CollectionParameterShouldHaveAddMethod">
            <summary>
            The type '{0}' of the parameter '{1}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatCollectionParameterShouldHaveAddMethod(System.Object,System.Object)">
            <summary>
            The type '{0}' of the parameter '{1}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.SRResources.InvalidAttributeRoutingTemplateSegment">
            <summary>
            The attribute routing template contains invalid segment '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.SRResources.FormatInvalidAttributeRoutingTemplateSegment(System.Object)">
            <summary>
            The attribute routing template contains invalid segment '{0}'.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.AllowedArithmeticOperators">
            <summary>
            Arithmetic operators to allow for querying using $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedArithmeticOperators.None">
            <summary>
            A value that corresponds to allowing no arithmetic operators in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedArithmeticOperators.Add">
            <summary>
            A value that corresponds to allowing 'Add' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedArithmeticOperators.Subtract">
            <summary>
            A value that corresponds to allowing 'Subtract' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedArithmeticOperators.Multiply">
            <summary>
            A value that corresponds to allowing 'Multiply' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedArithmeticOperators.Divide">
            <summary>
            A value that corresponds to allowing 'Divide' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedArithmeticOperators.Modulo">
            <summary>
            A value that corresponds to allowing 'Modulo' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedArithmeticOperators.All">
            <summary>
            A value that corresponds to allowing all arithmetic operators in $filter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.AllowedFunctions">
            <summary>
            Functions to allow for querying using $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.None">
            <summary>
            A value that corresponds to allowing no functions in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.StartsWith">
            <summary>
            A value that corresponds to allowing 'StartsWith' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.EndsWith">
            <summary>
            A value that corresponds to allowing 'EndsWith' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.SubstringOf">
            <summary>
            A value that corresponds to allowing 'SubstringOf' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Length">
            <summary>
            A value that corresponds to allowing 'Length' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.IndexOf">
            <summary>
            A value that corresponds to allowing 'IndexOf' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Concat">
            <summary>
            A value that corresponds to allowing 'Concat' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Substring">
            <summary>
            A value that corresponds to allowing 'Substring' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.ToLower">
            <summary>
            A value that corresponds to allowing 'ToLower' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.ToUpper">
            <summary>
            A value that corresponds to allowing 'ToUpper' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Trim">
            <summary>
            A value that corresponds to allowing 'Trim' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Cast">
            <summary>
            A value that corresponds to allowing 'Cast' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Year">
            <summary>
            A value that corresponds to allowing 'Year' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Date">
            <summary>
            A value that corresponds to allowing 'Date' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Month">
            <summary>
            A value that corresponds to allowing 'Month' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Time">
            <summary>
            A value that corresponds to allowing 'Time' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Day">
            <summary>
            A value that corresponds to allowing 'Day' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Hour">
            <summary>
            A value that corresponds to allowing 'Hour' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Minute">
            <summary>
            A value that corresponds to allowing 'Minute' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Second">
            <summary>
            A value that corresponds to allowing 'Second' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.FractionalSeconds">
            <summary>
            A value that corresponds to allowing 'Fractionalseconds' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Round">
            <summary>
            A value that corresponds to allowing 'Round' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Floor">
            <summary>
            A value that corresponds to allowing 'Floor' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Ceiling">
            <summary>
            A value that corresponds to allowing 'Ceiling' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.IsOf">
            <summary>
            A value that corresponds to allowing 'IsOf' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.Any">
            <summary>
            A value that corresponds to allowing 'Any' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.All">
            <summary>
            A value that corresponds to allowing 'All' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.AllStringFunctions">
            <summary>
            A value that corresponds to allowing all string related functions in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.AllDateTimeFunctions">
            <summary>
            A value that corresponds to allowing all datetime related functions in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.AllMathFunctions">
            <summary>
            A value that corresponds to allowing math related functions in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedFunctions.AllFunctions">
            <summary>
            A value that corresponds to allowing all functions in $filter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.AllowedLogicalOperators">
            <summary>
            Logical operators to allow for querying using $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.None">
            <summary>
            A value that corresponds to allowing no logical operators in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.Or">
            <summary>
            A value that corresponds to allowing 'Or' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.And">
            <summary>
            A value that corresponds to allowing 'And' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.Equal">
            <summary>
            A value that corresponds to allowing 'Equal' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.NotEqual">
            <summary>
            A value that corresponds to allowing 'NotEqual' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.GreaterThan">
            <summary>
            A value that corresponds to allowing 'GreaterThan' logical operator in $filter.
            </summary>   
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
            <summary>
            A value that corresponds to allowing 'GreaterThanOrEqual' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.LessThan">
            <summary>
            A value that corresponds to allowing 'LessThan' logical operator in $filter.
            </summary>  
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
            <summary>
            A value that corresponds to allowing 'LessThanOrEqual' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.Not">
            <summary>
            A value that corresponds to allowing 'Not' logical operator in $filter.
            </summary>  
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.Has">
            <summary>
            A value that corresponds to allowing 'Has' logical operator in $filter.
            </summary>  
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedLogicalOperators.All">
            <summary>
            A value that corresponds to allowing all logical operators in $filter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.AllowedQueryOptions">
            <summary>
            OData query options to allow for querying.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.None">
            <summary>
            A value that corresponds to allowing no query options.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.Filter">
            <summary>
            A value that corresponds to allowing the $filter query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.Expand">
            <summary>
            A value that corresponds to allowing the $expand query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.Select">
            <summary>
            A value that corresponds to allowing the $select query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.OrderBy">
            <summary>
            A value that corresponds to allowing the $orderby query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.Top">
            <summary>
            A value that corresponds to allowing the $top query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.Skip">
            <summary>
            A value that corresponds to allowing the $skip query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.Count">
            <summary>
            A value that corresponds to allowing the $count query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.Format">
            <summary>
            A value that corresponds to allowing the $format query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.SkipToken">
            <summary>
            A value that corresponds to allowing the $skiptoken query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.DeltaToken">
            <summary>
            A value that corresponds to allowing the $deltatoken query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.Supported">
            <summary>
            A value that corresponds to the default query options supported by <see cref="T:Microsoft.AspNet.OData.EnableQueryAttribute"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.AllowedQueryOptions.All">
            <summary>
            A value that corresponds to allowing all query options.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.FilterQueryOption">
            <summary>
            This defines a $filter OData query option for querying.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.FilterQueryOption.#ctor(System.String,Microsoft.AspNet.OData.ODataQueryContext,Microsoft.OData.Core.UriParser.ODataQueryOptionParser)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNet.OData.Query.FilterQueryOption"/> based on the raw $filter value and 
            an EdmModel from <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $filter query. It can be null or empty.</param>
            <param name="context">The <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.Core.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.FilterQueryOption.Context">
            <summary>
             Gets the given <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.FilterQueryOption.FilterClause">
            <summary>
            Gets the parsed <see cref="P:Microsoft.AspNet.OData.Query.FilterQueryOption.FilterClause"/> for this query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.FilterQueryOption.RawValue">
            <summary>
             Gets the raw $filter value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNet.OData.Query.ODataQuerySettings,Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider)">
            <summary>
            Apply the filter query to the given IQueryable.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.AspNet.OData.Query.ODataQuerySettings.HandleNullPropagation"/> property specifies
            how this method should handle null propagation.
            </remarks>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <param name="assemblyProvider">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider"/> to use.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the filter query has been applied to.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.HandleNullPropagationOption">
            <summary>
            This enum defines how to handle null propagation in queryable support.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.HandleNullPropagationOption.Default">
            <summary>
            Determine how to handle null propagation based on the
            query provider during query composition.  This is the
            default value used in <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/>
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.HandleNullPropagationOption.True">
            <summary>
            Handle null propagation during query composition.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.HandleNullPropagationOption.False">
            <summary>
            Do not handle null propagation during query composition.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.IPropertyMapper">
            <summary>
            The result of a $select and $expand projection is represented as an <see cref="T:Microsoft.AspNet.OData.Query.ISelectExpandWrapper"/>
            instance. That instance can be projected into an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance by calling
            <see cref="!:ISelectExpandWrapper.ToDictionary(Func&lt;IEdmModel,IEdmStructuredType,IPropertyMapper&gt;)"/>. 
            That method will use the function to construct an <see cref="T:Microsoft.AspNet.OData.Query.IPropertyMapper"/> that will map the property 
            names in that projection to the keys in the returned <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            The main purpose of converting an <see cref="T:Microsoft.AspNet.OData.Query.ISelectExpandWrapper"/> instance into an 
            <see cref="T:System.Collections.Generic.IDictionary`2"/> (using the method mentioned above) is to allow changing the names of the 
            properties in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that will be used during the serialization of the $select 
            and $expand projection by a given formatter. For example, to support custom serialization attributes of a
            particular formatter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.IPropertyMapper.MapProperty(System.String)">
            <summary>
            Defines a mapping between the name of an <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> of an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>
            and the name that should be used in other contexts, for example, when projecting an instance of an 
            <see cref="T:Microsoft.AspNet.OData.Query.ISelectExpandWrapper"/> into an instance of an <see cref="T:System.Collections.Generic.IDictionary`2"/>
            </summary>
            <param name="propertyName">
            The name of the property in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> represented
            by this instance of <see cref="T:Microsoft.AspNet.OData.Query.ISelectExpandWrapper"/>.
            </param>
            <returns>
            The value that will be used as the key for this property in the <see cref="T:System.Collections.Generic.IDictionary`2" />
            resulting from calling ToDictionary on an <see cref="T:Microsoft.AspNet.OData.Query.ISelectExpandWrapper"/> instance.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.ISelectExpandWrapper">
            <summary>
            Represents the result of a $select and $expand query operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.ISelectExpandWrapper.ToDictionary">
            <summary>
            Projects the result of a $select and $expand query to a <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the $select and $expand result.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.ISelectExpandWrapper.ToDictionary(System.Func{Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.AspNet.OData.Query.IPropertyMapper})">
            <summary>
            Projects the result of a $select and/or $expand query to an <see cref="T:System.Collections.Generic.IDictionary`2" /> using 
            the given <paramref name="propertyMapperProvider"/>. The <paramref name="propertyMapperProvider"/> is used 
            to obtain an <see cref="T:Microsoft.AspNet.OData.Query.IPropertyMapper"/> for the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that this 
            <see cref="T:Microsoft.AspNet.OData.Query.ISelectExpandWrapper"/> instance represents. This <see cref="T:Microsoft.AspNet.OData.Query.IPropertyMapper"/> will be used to 
            map the properties of the <see cref="T:Microsoft.AspNet.OData.Query.ISelectExpandWrapper"/> instance to the keys of the 
            returned <see cref="T:System.Collections.Generic.IDictionary`2"/>. This method can be used, for example, to map the property 
            names in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> to the names that should be used to serialize the properties 
            that this projection contains.
            </summary>
            <param name="propertyMapperProvider">
            A function that provides a new instance of an <see cref="T:Microsoft.AspNet.OData.Query.IPropertyMapper"/> for a given 
            <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> and a given <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.
            </param>
            <returns>An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the $select and $expand result.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.ITruncatedCollection">
            <summary>
            Represents a collection that is truncated to a given page size.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ITruncatedCollection.PageSize">
            <summary>
            Gets the page size the collection is truncated to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ITruncatedCollection.IsTruncated">
            <summary>
            Gets a value representing if the collection is truncated or not.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.NonFilterableAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a property to specify that the property cannot be used in the $filter OData query option.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.NotCountableAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a property to specify that
            the $count cannot be applied on the property.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.NotExpandableAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a property to specify that the property cannot be used in the $expand OData query option.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.NotFilterableAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a property to specify that 
            the property cannot be used in the $filter OData query option.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.NotNavigableAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a property to specify that the property cannot be navigated in OData query.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.NotSortableAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a property to specify that 
            the property cannot be used in the $orderby OData query option.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.ODataQueryOptions.#ctor(Microsoft.AspNet.OData.ODataQueryContext,Microsoft.AspNet.Http.HttpRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.ODataQueryOptions"/> class based on the incoming request and some metadata information from
            the <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information.</param>
            <param name="request">The incoming request message.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQueryOptions.Context">
            <summary>
             Gets the given <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQueryOptions.Request">
            <summary>
            Gets the request message associated with this instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQueryOptions.RawValues">
            <summary>
            Gets the raw string of all the OData query options
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQueryOptions.Filter">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.OData.Query.FilterQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQueryOptions.Skip">
            <summary>
            Specifies a non-negative integer n that excludes the first n items of the queried collection from the result.         
            </summary>
            <remarks>
            Corresponds to the $skip query option.  The service returns items starting at position n+1.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQueryOptions.Top">
            <summary>
            Specifies a non-negative integer n that limits the number of items returned from a collection.
            </summary>
            <remarks>
            Corresponds to the $take query option.  he service returns the number of available items up to but not greater than the specified value n.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQueryOptions.Count">
            <summary>
            The $count system query option allows clients to request a count of the matching resources included with the resources in the response. 
            The $count query option has a Boolean value of true or false.       
            </summary>
            <remarks>
            The semantics of $count is covered in the [OData - Protocol] document.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.ODataQueryOptions.ApplyForCount(System.Linq.IQueryable,Microsoft.AspNet.OData.Query.ODataQuerySettings)">
            <summary>
            Applies the queries that are applicable to the $count computation, as per the OData protocol.
            </summary>
            <remarks>
            According to the protocol:
            <para>
            The $count system query option ignores any $top, $skip, or $expand query options, and returns the total count of results across all pages including only those results matching any specified $filter and $search. Clients should be aware that the count returned inline may not exactly equal the actual number of items returned, due to latency between calculating the count and enumerating the last value or due to inexact calculations on the service.
            </para>
            </remarks>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The settings to use in query composition.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,Microsoft.AspNet.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The settings to use in query composition.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the query has been applied to.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.ODataQuerySettings">
            <summary>
            This class describes the settings to use during query composition.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.ODataQuerySettings.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/> class
            and initializes the default settings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.ODataQuerySettings.#ctor(Microsoft.AspNet.OData.Query.ODataQuerySettings)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/> class based on an existing one. 
            </summary>
            <param name="settings">The setting to copy from.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQuerySettings.EnsureStableOrdering">
            <summary>
            Gets or sets a value indicating whether query composition should
            alter the original query when necessary to ensure a stable sort order.
            </summary>
            <value>A <c>true</c> value indicates the original query should
            be modified when necessary to guarantee a stable sort order.
            A <c>false</c> value indicates the sort order can be considered
            stable without modifying the query.  Query providers that ensure
            a stable sort order should set this value to <c>false</c>.
            The default value is <c>true</c>.</value>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQuerySettings.HandleNullPropagation">
            <summary>
            Gets or sets a value indicating how null propagation should
            be handled during query composition. 
            </summary>
            <value>
            The default is <see cref="F:Microsoft.AspNet.OData.Query.HandleNullPropagationOption.Default"/>.
            </value>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQuerySettings.EnableConstantParameterization">
            <summary>
            Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants 
            would result in better performance with Entity framework.
            </summary>
            <value>The default value is <c>true</c>.</value>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataQuerySettings.PageSize">
            <summary>
            Gets or sets the maximum number of query results to return.
            </summary>
            <value>
            The maximum number of query results to return, or <c>null</c> if there is no limit.
            </value>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.ODataRawQueryOptions">
            <summary>
            Represents the raw query values in the string format from the incoming request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.Filter">
            <summary>
             Gets the raw $filter query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.OrderBy">
            <summary>
             Gets the raw $orderby query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.Top">
            <summary>
             Gets the raw $top query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.Skip">
            <summary>
             Gets the raw $skip query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.Select">
            <summary>
             Gets the raw $select query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.Expand">
            <summary>
             Gets the raw $expand query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.Count">
            <summary>
             Gets the raw $count query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.Format">
            <summary>
             Gets the raw $format query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.SkipToken">
            <summary>
             Gets the raw $skiptoken query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataRawQueryOptions.DeltaToken">
            <summary>
             Gets the raw $deltatoken query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.ODataValidationSettings">
            <summary>
            This class describes the validation settings for querying.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
            <summary>
            Gets or sets a list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.AllowedFunctions">
             <summary>
             Gets or sets a list of allowed functions used in the $filter query. 
             
             The allowed functions include the following:
             
             String related: substringof, endswith, startswith, length, indexof, substring, tolower, toupper, trim, concat
            
             e.g. ~/Customers?$filter=length(CompanyName) eq 19
            
             Date and Time related: year, month, day, hour, minute, second, fractionalseconds, date, time
            
             e.g. ~/Employees?$filter=year(BirthDate) eq 1971
            
             Math related: round, floor, ceiling
            
             Type related:isof, cast, 
            
             Collection related: any, all
              
             </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
            <summary>
            Gets or sets a list of allowed logical operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
            <summary>
            Gets a list of properties one can orderby the result with. Note, by default this list is empty, 
            it means it can be ordered by any property.
            
            For example, having an empty collection means client can order the queryable result by any properties.  
            Adding "Name" to this list means that it only allows queryable result to be ordered by Name property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.AllowedQueryOptions">
            <summary>
            Gets or sets the query parameters that are allowed inside query. The default is all query options,
            including $filter, $skip, $top, $orderby, $expand, $select, $count, $format, $skiptoken and $deltatoken.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.MaxOrderByNodeCount">
            <summary>
            Gets or sets the maximum number of expressions that can be present in the $orderby.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth">
            <summary>
            Gets or sets the maximum depth of the Any or All elements nested inside the query.
            </summary>
            <remarks>
            The default value is 1.
            </remarks>
            <value>
            The maximum depth of the Any or All elements nested inside the query.
            </value>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.MaxNodeCount">
            <summary>
            Gets or sets the maximum number of the nodes inside the $filter syntax tree.
            </summary>
            <remarks>
            The default value is 100.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.MaxSkip">
            <summary>
            Gets or sets the max value of $skip that a client can request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.MaxTop">
            <summary>
            Gets or sets the max value of $top that a client can request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.MaxExpansionDepth">
            <summary>
            Gets or sets the max expansion depth for the $expand query option.
            </summary>
            <remarks>To disable the maximum expansion depth check, set this property to 0.</remarks>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.SelectExpandNode">
            <summary>
            Describes the set of structural properties and navigation properties and actions to select and navigation properties to expand while 
            writing an <see cref="T:Microsoft.OData.Core.ODataEntry"/> in the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.SelectExpandNode.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.SelectExpandNode"/> class.
            </summary>
            <remarks>The default constructor is for unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.SelectExpandNode.#ctor(Microsoft.OData.Core.UriParser.Semantic.SelectExpandClause,Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.SelectExpandNode"/> class describing the set of structural properties,
            navigation properties, and actions to select and expand for the given <paramref name="selectExpandClause"/>.
            </summary>
            <param name="selectExpandClause">The parsed $select and $expand query options.</param>
            <param name="entityType">The entity type of the entry that would be written.</param>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> that contains the given entity type.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandNode.SelectedStructuralProperties">
            <summary>
            Gets the list of EDM structural properties to be included in the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandNode.SelectedNavigationProperties">
            <summary>
            Gets the list of EDM navigation properties to be included as links in the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandNode.ExpandedNavigationProperties">
            <summary>
            Gets the list of EDM navigation properties to be expanded in the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandNode.SelectedDynamicProperties">
            <summary>
            Gets the list of dynamic properties to select.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandNode.SelectAllDynamicProperties">
            <summary>
            Gets the flag to indicate the dynamic property to be included in the response or not.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandNode.SelectedActions">
            <summary>
            Gets the list of OData actions to be included in the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandNode.SelectedFunctions">
            <summary>
            Gets the list of OData functions to be included in the response.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.SelectExpandQueryOption">
            <summary>
            Represents the OData $select and $expand query options.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.#ctor(System.String,System.String,Microsoft.AspNet.OData.ODataQueryContext,Microsoft.OData.Core.UriParser.ODataQueryOptionParser,Microsoft.AspNet.Http.HttpRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.SelectExpandQueryOption"/> class.
            </summary>
            <param name="select">The $select query parameter value.</param>
            <param name="expand">The $expand query parameter value.</param>
            <param name="context">The <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information.</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.Core.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.Context">
            <summary>
             Gets the given <see cref="T:Microsoft.AspNet.OData.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.RawSelect">
            <summary>
            Gets the raw $select value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.RawExpand">
            <summary>
            Gets the raw $expand value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.Validator">
            <summary>
            Gets or sets the $select and $expand query validator.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.SelectExpandClause">
            <summary>
            Gets the parsed <see cref="P:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.SelectExpandClause"/> for this query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.LevelsMaxLiteralExpansionDepth">
            <summary>
            Gets or sets the number of levels that a top level $expand=NavigationProperty($levels=max)
            will be expanded.
            This value will decrease by one with each nesting level in the $expand clause.
            For example, with a property value 5, the following query $expand=A($expand=B($expand=C($levels=max)))
            will be interpreted as $expand=A($expand=B($expand=C($levels=3))).
            If the query gets validated, the <see cref="P:Microsoft.AspNet.OData.Query.ODataValidationSettings.MaxExpansionDepth"/> value
            must be greater than or equal to this value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNet.OData.Query.ODataQuerySettings)">
            <summary>
            Applies the $select and $expand query options to the given <see cref="T:System.Linq.IQueryable"/> using the given
            <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/>.
            </summary>
            <param name="queryable">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="settings">The <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the filter query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNet.OData.Query.ODataQuerySettings,Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider)">
            <summary>
            Applies the $select and $expand query options to the given <see cref="T:System.Linq.IQueryable"/> using the given
            <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/>.
            </summary>
            <param name="queryable">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="settings">The <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <param name="assembliesProvider">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider"/> to use.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the filter query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.ApplyTo(System.Object,Microsoft.AspNet.OData.Query.ODataQuerySettings)">
            <summary>
            Applies the $select and $expand query options to the given entity using the given <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/>.
            </summary>
            <param name="entity">The original entity.</param>
            <param name="settings">The <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new entity after the $select and $expand query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.ApplyTo(System.Object,Microsoft.AspNet.OData.Query.ODataQuerySettings,Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider)">
            <summary>
            Applies the $select and $expand query options to the given entity using the given <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/>.
            </summary>
            <param name="entity">The original entity.</param>
            <param name="settings">The <see cref="T:Microsoft.AspNet.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <param name="assembliesProvider">The <see cref="!:IAssembliesResolver"/> to use.</param>
            <returns>The new entity after the $select and $expand query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.SelectExpandQueryOption.Validate(Microsoft.AspNet.OData.Query.ODataValidationSettings)">
            <summary>
            Validate the $select and $expand query based on the given <paramref name="validationSettings"/>. It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNet.OData.Query.ODataValidationSettings"/> instance which contains all the validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.TruncatedCollection`1">
            <summary>
            Represents a class that truncates a collection to a given page size.
            </summary>
            <typeparam name="T">The collection element type.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.TruncatedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.TruncatedCollection`1"/> class.
            </summary>
            <param name="source">The collection to be truncated.</param>
            <param name="pageSize">The page size.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.TruncatedCollection`1"/> class.
            </summary>
            <param name="source">The queryable collection to be truncated.</param>
            <param name="pageSize">The page size.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.TruncatedCollection`1.PageSize">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.TruncatedCollection`1.IsTruncated">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.UnsortableAttribute">
            <summary>
            Represents an <see cref="T:System.Attribute"/> that can be placed on a property to specify that the property cannot be used in the $orderby OData query option.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Expressions.ClrSafeFunctions">
            <summary>
            This class contains safe equivalents of CLR functions that
            could throw exceptions at runtime.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Expressions.FilterBinder">
            <summary>
            Translates an OData $filter parse tree represented by <see cref="T:Microsoft.OData.Core.UriParser.Semantic.FilterClause"/> to 
            an <see cref="T:System.Linq.Expressions.Expression"/> and applies it to an <see cref="T:System.Linq.IQueryable"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysEqualMethodInfo">
            <summary>Method info for byte array comparison.</summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysNotEqualMethodInfo">
            <summary>Method info for byte array comparison.</summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <param name="left">First byte array.</param>
            <param name="right">Second byte array.</param>
            <returns>true if the arrays are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysNotEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <param name="left">First byte array.</param>
            <param name="right">Second byte array.</param>
            <returns>true if the arrays are not equal; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Expressions.ModelContainer">
            <summary>
            EntityFramework does not let you inject non primitive constant values (like IEdmModel) in Select queries. Primitives like strings and guids can be
            injected as they can be translated into a SQL query. This container associates a unique string with each EDM model, so that, given the string the model
            can be retrieved later.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Expressions.NamedPropertyExpression">
            <summary>
            Represents a container that captures a named property that is a part of the select expand query.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Expressions.PropertyContainer">
            <summary>
            A container of property names and property values.
            </summary>
            <remarks>
            EntityFramework understands only member initializations in Select expressions. Also, it doesn't understand type casts for non-primitive types. So, 
            SelectExpandBinder has to generate strongly types expressions that involve only property access. This class represents the base class for a bunch of 
            generic derived types that are used in the expressions that SelectExpandBinder generates.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.Expressions.PropertyContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Query.Expressions.PropertyContainer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.Expressions.PropertyContainer.ToDictionary(Microsoft.AspNet.OData.Query.IPropertyMapper,System.Boolean)">
            <summary>
            Builds the dictionary of properties in this container keyed by the property name.
            </summary>
            <returns>The dictionary of properties in this container keyed by the property name.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.Expressions.PropertyContainer.ToDictionaryCore(System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.AspNet.OData.Query.IPropertyMapper,System.Boolean)">
            <summary>
            Adds the properties in this container to the given dictionary.
            </summary>
            <param name="dictionary">The dictionary to add the properties to.</param>
            <param name="includeAutoSelected">Specifies whether auto selected properties should be included.</param>
            <param name="propertyMapper">An object responsible to map the properties in this property container to the
            the value that will be used as the key in the dictionary we are adding properties to.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Expressions.SelectExpandBinder">
            <summary>
            Applies the given <see cref="T:Microsoft.AspNet.OData.Query.SelectExpandQueryOption"/> to the given <see cref="T:System.Linq.IQueryable"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapper`1">
            <summary>
            Represents a container class that contains properties that are either selected or expanded using $select and $expand.
            </summary>
            <typeparam name="TElement">The element being selected and expanded.</typeparam>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapper`1.Instance">
            <summary>
            Gets or sets the instance of the element being selected and expanded.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapper`1.ModelID">
            <summary>
            An ID to uniquely identify the model in the <see cref="T:Microsoft.AspNet.OData.Query.Expressions.ModelContainer"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapper`1.TypeName">
            <summary>
            Gets or sets the EDM type name of the element being selected and expanded. 
            </summary>
            <remarks>This is required by the <see cref="!:ODataMediaTypeFormatter"/> during serialization. If the instance property is not
            null, the type name will not be set as the type name can be figured from the instance runtime type.</remarks>
        </member>
        <member name="P:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapper`1.Container">
            <summary>
            Gets or sets the property container that contains the properties being expanded. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapper`1.GetEdmType">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapper`1.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapperConverter">
            <summary>
            Represents a custom <see cref="T:Newtonsoft.Json.JsonConverter"/> to serialize <see cref="T:Microsoft.AspNet.OData.Query.Expressions.SelectExpandWrapper`1"/> instances to JSON.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Query.Validators.SelectExpandQueryValidator">
            <summary>
            Represents a validator used to validate a <see cref="T:Microsoft.AspNet.OData.Query.SelectExpandQueryOption" /> based on the <see cref="T:Microsoft.AspNet.OData.Query.ODataValidationSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Query.Validators.SelectExpandQueryValidator.Validate(Microsoft.AspNet.OData.Query.SelectExpandQueryOption,Microsoft.AspNet.OData.Query.ODataValidationSettings)">
            <summary>
            Validates a <see cref="!:TopQueryOption" />.
            </summary>
            <param name="selectExpandQueryOption">The $select and $expand query.</param>
            <param name="validationSettings">The validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.BatchPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a $batch segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BatchPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BatchPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BatchPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BatchPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.BoundActionPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a bound action invocation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundActionPathSegment.#ctor(Microsoft.OData.Edm.IEdmAction,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.BoundActionPathSegment" /> class.
            </summary>
            <param name="action">The action being invoked.</param>
            <param name="model">The edm model containing the action.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BoundActionPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BoundActionPathSegment.Action">
            <summary>
            Gets the action being invoked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BoundActionPathSegment.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundActionPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundActionPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundActionPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundActionPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a bound function invocation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.#ctor(Microsoft.OData.Edm.IEdmFunction,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment" /> class.
            </summary>
            <param name="function">The function being invoked.</param>
            <param name="model">The edm model containing the function.</param>
            <param name="parameterValues">The raw parameter values indexed by the parameter names.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.Function">
            <summary>
            Gets the function being invoked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.GetParameterValue(System.String)">
            <summary>
            Gets the parameter value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns> The value of the parameter. </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegmentTemplate">
            <summary>
            Represents a template that can match a <see cref="T:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegmentTemplate.#ctor(Microsoft.AspNet.OData.Routing.BoundFunctionPathSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegmentTemplate"/> class.
            </summary>
            <param name="function">The function segment to be templatized</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegmentTemplate.ParameterMappings">
            <summary>
            Gets the dictionary representing the mappings from the parameter names in the current function segment to the 
            parameter names in route data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegmentTemplate.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.BoundFunctionPathSegmentTemplate.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.CastPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a cast.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CastPathSegment.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.CastPathSegment" /> class.
            </summary>
            <param name="castType">The type of the cast.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CastPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.CastPathSegment" /> class.
            </summary>
            <param name="castTypeName">Name of the cast type.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.CastPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.CastPathSegment.CastType">
            <summary>
            Gets the type of the cast.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.CastPathSegment.CastTypeName">
            <summary>
            Gets the name of the cast type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CastPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CastPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CastPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CastPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a complex type cast.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.#ctor(Microsoft.OData.Edm.IEdmComplexType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment" /> class.
            </summary>
            <param name="castType">The type of the cast.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment" /> class.
            </summary>
            <param name="castTypeName">Name of the cast type.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.CastType">
            <summary>
            Gets the type of the cast.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.CastTypeName">
            <summary>
            Gets the name of the cast type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ComplexCastPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.CountPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a $count segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.CountPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CountPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CountPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CountPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.CountPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.DefaultODataPathHandler">
            <summary>
            Parses an OData path as an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> and converts an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> into an OData link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.OData.Edm.IEdmModel,System.String,System.String)">
            <summary>
            Parses the specified OData path as an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> that contains additional information about the EDM type and entity set for the path.
            </summary>
            <param name="model">The model to use for path parsing.</param>
            <param name="serviceRoot">The service root of the OData path.</param>
            <param name="odataPath">The OData path to parse.</param>
            <returns>A parsed representation of the path, or <c>null</c> if the path does not match the model.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DefaultODataPathHandler.ParseTemplate(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Parses the specified OData path template as an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathTemplate"/> that can be matched to an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/>.
            </summary>
            <param name="model">The model to use for path parsing.</param>
            <param name="odataPathTemplate">The OData path template to parse.</param>
            <returns>A parsed representation of the path template, or <c>null</c> if the path does not match the model.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DefaultODataPathHandler.Link(Microsoft.AspNet.OData.Routing.ODataPath)">
            <summary>
            Converts an instance of <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath" /> into an OData link.
            </summary>
            <param name="path">The OData path to convert into a link.</param>
            <returns>
            The generated OData link.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a dynamic property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment" /> class.
            </summary>
            <param name="propertyName">The name of the dynamic property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment.PropertyName">
            <summary>
            Gets the name of the dynamic property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegmentTemplate">
            <summary>
            Represents a template that can match a <see cref="T:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegmentTemplate.#ctor(Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegmentTemplate"/> class.
            </summary>
            <param name="dynamicPropertyPathSegment">The path template segment to be parsed as a template.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegmentTemplate.PropertyName">
            <summary>
            The parameter name of the dynamic property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegmentTemplate.TreatPropertyNameAsParameterName">
            <summary>
            Indicates whether the template should match the name, or treat it as a parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.DynamicPropertyPathSegmentTemplate.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.EntitySetPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing an entity set.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.OData.Edm.IEdmEntitySetBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.EntitySetPathSegment" /> class.
            </summary>
            <param name="entitySet">The entity set being accessed.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.EntitySetPathSegment" /> class.
            </summary>
            <param name="entitySetName">Name of the entity set.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.EntitySetBase">
            <summary>
            Gets the entity set represented by this segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.EntitySetName">
            <summary>
            Gets the name of the entity set.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.EntitySetPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.IODataPathHandler">
            <summary>
            Exposes the ability to parse an OData path as an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> and convert an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> into an OData link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.IODataPathHandler.Parse(Microsoft.OData.Edm.IEdmModel,System.String,System.String)">
            <summary>
            Parses the specified OData path as an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> that contains additional information about the EDM type and entity set for the path.
            </summary>
            <param name="model">The model to use for path parsing.</param>
            <param name="serviceRoot">The service root of the OData path.</param>
            <param name="odataPath">The OData path to parse.</param>
            <returns>A parsed representation of the URI, or <c>null</c> if the URI does not match the model.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.IODataPathHandler.Link(Microsoft.AspNet.OData.Routing.ODataPath)">
            <summary>
            Converts an instance of <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> into an OData link.
            </summary>
            <param name="path">The OData path to convert into a link.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.IODataPathTemplateHandler">
            <summary>
            Exposes the ability to parse an OData path template as an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathTemplate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.IODataPathTemplateHandler.ParseTemplate(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Parses the specified OData path template as an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathTemplate"/>.
            </summary>
            <param name="model">The model to use for path template parsing.</param>
            <param name="odataPathTemplate">The OData path template to parse.</param>
            <returns>A parsed representation of the template, or <c>null</c> if the template does not match the model.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.KeyValueParser">
            <summary>
            Parses the OData multi-key value (same for function call parameters) as a dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.KeyValuePathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing an indexing into an entity collection by key.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.KeyValuePathSegment" /> class.
            </summary>
            <param name="value">The key value to use for indexing into the collection.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.KeyValuePathSegment.Value">
            <summary>
            The raw text of the path segment and the source of the Values collection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.KeyValuePathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.KeyValuePathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.KeyValuePathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.KeyValuePathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.KeyValuePathSegmentTemplate">
            <summary>
            Represents a template that can match a <see cref="T:Microsoft.AspNet.OData.Routing.KeyValuePathSegment"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.KeyValuePathSegmentTemplate.#ctor(Microsoft.AspNet.OData.Routing.KeyValuePathSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.KeyValuePathSegmentTemplate"/> class.
            </summary>
            <param name="keyValueSegment">The key value segment to be parsed as a template.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.KeyValuePathSegmentTemplate.ParameterMappings">
            <summary>
            Gets the dictionary representing the mappings from the key names in the segment to the key names in route data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.KeyValuePathSegmentTemplate.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.MetadataPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a $metadata segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.MetadataPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>
            The EDM type for this segment.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.MetadataPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.MetadataPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.MetadataPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.NavigationPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a navigation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.NavigationPathSegment.#ctor(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.NavigationPathSegment" /> class.
            </summary>
            <param name="navigationProperty">The navigation property being accessed by this segment.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.NavigationPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.NavigationPathSegment" /> class.
            </summary>
            <param name="navigationPropertyName">Name of the navigation property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.NavigationPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.NavigationPathSegment.NavigationProperty">
            <summary>
            Gets the navigation property being accessed by this segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.NavigationPathSegment.NavigationPropertyName">
            <summary>
            Gets the name of the navigation property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.NavigationPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.NavigationPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.NavigationPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ODataPath">
            <summary>
            Provides an object representation for an OData path with additional information about the EDM type and entity set for the path.
            TODO: Replace with ODataPath in ODL
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPath.#ctor(Microsoft.AspNet.OData.Routing.ODataPathSegment[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath" /> class.
            </summary>
            <param name="segments">The path segments for the path.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.OData.Routing.ODataPathSegment})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath" /> class.
            </summary>
            <param name="segments">The path segments for the path.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ODataPath.EdmType">
            <summary>
            Gets or sets the EDM type of the path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ODataPath.NavigationSource">
            <summary>
            Gets or sets the navigation source of the path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ODataPath.PathTemplate">
            <summary>
            Gets the path template describing the types of segments in the path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ODataPath.Segments">
            <summary>
            Gets the path segments for the OData path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPath.ToString">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ODataPathParameterBindingAttribute">
            <summary>
            Implementation of <see cref="!:ParameterBindingAttribute"/> used to bind an instance of <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> as an action parameter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ODataPathSegment">
            <summary>
            Provides an object representation for an OData path segment with additional information about the EDM type and entity set for the path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ODataPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Gets the EDM type for this segment.
            </summary>
            <param name="previousEdmType">The EDM type of the previous path segment.</param>
            <returns>The EDM type for this segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Gets the navigation source for this segment.
            </summary>
            <param name="previousNavigationSource">The navigation source of the previous path segment.</param>
            <returns>The navigation source for this segment.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ODataPathSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegmentTemplate"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTemplate.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Matches the template with an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/>.
            </summary>
            <param name="pathSegment">The path segment to match this template with.</param>
            <param name="values">The dictionary of matches to be updated if the segment matches the template.</param>
            <returns><c>true</c> if the segment matches the template; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator">
            <summary>
            Translator to convert an OData path segment to WebAPI path segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.TranslateODLPathToWebAPIPath(Microsoft.OData.Core.UriParser.Semantic.ODataPath,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNet.OData.Routing.UnresolvedPathSegment,Microsoft.OData.Core.UriParser.Semantic.KeySegment,System.Boolean,System.Collections.Generic.IDictionary{System.String,Microsoft.OData.Core.UriParser.Semantic.SingleValueNode})">
            <summary>
            Translates an ODL path to Web API path.
            </summary>
            <param name="path">The ODL path to be translated.</param>
            <param name="model">The model used to translate.</param>
            <param name="unresolvedPathSegment">Unresolved path segment.</param>
            <param name="id">The key segment from $id.</param>
            <param name="enableUriTemplateParsing">Specifies the ODL path is template or not.</param>
            <param name="parameterAliasNodes">The parameter alias nodes info.</param>
            <returns>The translated Web API path.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.#ctor(Microsoft.OData.Edm.IEdmModel,System.Boolean,System.Collections.Generic.IDictionary{System.String,Microsoft.OData.Core.UriParser.Semantic.SingleValueNode})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator" /> class.
            </summary>
            <param name="model">The model used to parse the path.</param>
            <param name="enableUriTemplateParsing">Specifies parsing path template or not.</param>
            <param name="parameterAliasNodes">The parameter alias nodes info.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.TranslateParameterAlias(Microsoft.OData.Core.UriParser.Semantic.SingleValueNode,System.Collections.Generic.IDictionary{System.String,Microsoft.OData.Core.UriParser.Semantic.SingleValueNode})">
            <summary>
            Translate parameter alias node to corresponding single value node.
            </summary>
            <param name="node">The node to be translated.</param>
            <param name="parameterAliasNodes">The parameter alias node mapping.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.TypeSegment)">
            <summary>
            Translate a TypeSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.NavigationPropertySegment)">
            <summary>
            Translate a NavigationPropertySegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.EntitySetSegment)">
            <summary>
            Translate an EntitySetSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.SingletonSegment)">
            <summary>
            Translate an SingletonSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.KeySegment)">
            <summary>
            Translate a KeySegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.PropertySegment)">
            <summary>
            Translate a PropertySegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.OperationImportSegment)">
            <summary>
            Translate a OperationImportSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.OperationSegment)">
            <summary>
            Translate a OperationSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.OpenPropertySegment)">
            <summary>
            Translate an OpenPropertySegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.CountSegment)">
            <summary>
            Translate a CountSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.NavigationPropertyLinkSegment)">
            <summary>
            Visit a NavigationPropertyLinkSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.ValueSegment)">
            <summary>
            Translate a ValueSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.BatchSegment)">
            <summary>
            Translate a BatchSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.BatchReferenceSegment)">
            <summary>
            Translate a BatchReferenceSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.MetadataSegment)">
            <summary>
            Translate a MetadataSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathSegmentTranslator.Translate(Microsoft.OData.Core.UriParser.Semantic.PathTemplateSegment)">
            <summary>
            Translate a PathTemplateSegment
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated WebApi path segment.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ODataPathTemplate">
            <summary>
            Represents a template for an <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/> that can be matched to an actual <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathTemplate.#ctor(Microsoft.AspNet.OData.Routing.ODataPathSegmentTemplate[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathTemplate" /> class.
            </summary>
            <param name="segments">The path segment templates for the path.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathTemplate.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.OData.Routing.ODataPathSegmentTemplate})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.ODataPath" /> class.
            </summary>
            <param name="segments">The path segments for the path.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ODataPathTemplate.Segments">
            <summary>
            Gets the path segments for the OData path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ODataPathTemplate.TryMatch(Microsoft.AspNet.OData.Routing.ODataPath,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Matches the current template with an OData path.
            </summary>
            <param name="path">The OData path to be matched against.</param>
            <param name="values">The dictionary of matches to be updated in case of a match.</param>
            <returns><c>true</c> in case of a match; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ODataSegmentKinds">
            <summary>
            Provides the values of segment kinds for implementations of <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment" />.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.ServiceBase">
            <summary>
            Represents the service root segment (for OData service document).
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Batch">
            <summary>
            Represents the OData $batch segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Ref">
            <summary>
            Represents the OData $ref segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Metadata">
            <summary>
            Represents the OData $metadata segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Value">
            <summary>
            Represents the OData $value segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Count">
            <summary>
            Represents the OData $count segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Action">
            <summary>
            Represents a segment indicating a bound OData action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Function">
            <summary>
            Represents a segment indicating a bound OData function.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.UnboundAction">
            <summary>
            Represents a segment indicating an unbound OData action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.UnboundFunction">
            <summary>
            Represents a segment indicating an unbound OData function.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Cast">
            <summary>
            Represents a segment indicating a type cast.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.ComplexCast">
            <summary>
            Represents a segment indicating a complex type cast.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.EntitySet">
            <summary>
            Represents a segment indicating an entity set.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Singleton">
            <summary>
            Represents a segment indicating a singleton.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Key">
            <summary>
            Represents a segment indicating an index by key operation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Navigation">
            <summary>
            Represents a segment indicating a navigation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Property">
            <summary>
            Represents a segment indicating a property access.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.DynamicProperty">
            <summary>
            Represents a segment indicating an dynamic property access.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.OData.Routing.ODataSegmentKinds.Unresolved">
            <summary>
            Represents a segment that is not understood.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a property access.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment" /> class.
            </summary>
            <param name="property">The property being accessed by this segment.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment" /> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.Property">
            <summary>
            Gets the property property being accessed by this segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.PropertyAccessPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.RefPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a $ref segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.RefPathSegment.SegmentKind">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.RefPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.RefPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.RefPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.RefPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.SingletonPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a singleton in a path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.SingletonPathSegment.#ctor(Microsoft.OData.Edm.IEdmSingleton)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.SingletonPathSegment" /> class.
            </summary>
            <param name="singleton">The singleton being accessed.</param>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.SingletonPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.SingletonPathSegment" /> class.
            </summary>
            <param name="singletonName">Name of the singleton.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.SingletonPathSegment.Singleton">
            <summary>
            Gets the singleton represented by this segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.SingletonPathSegment.SingletonName">
            <summary>
            Gets the name of the singleton.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.SingletonPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.SingletonPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.SingletonPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.SingletonPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.SingletonPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing an unbound action invocation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment.#ctor(Microsoft.OData.Edm.IEdmActionImport)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment" /> class.
            </summary>
            <param name="action">The action being invoked.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment.Action">
            <summary>
            Gets the action being invoked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns> A <see cref="T:System.String" /> to represent this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundActionPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing an unbound function invocation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.#ctor(Microsoft.OData.Edm.IEdmFunctionImport,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment" /> class.
            </summary>
            <param name="function">The function being invoked.</param>
            <param name="model">The edm model containing the function.</param>
            <param name="parameterValues">The raw parameter values indexed by the parameter names.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.Function">
            <summary>
            Gets the function being invoked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.GetParameterValue(System.String)">
            <summary>
            Gets the parameter value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <returns>
            The value of the parameter.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns> a <see cref="T:System.String" /> to represent this instance. </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegmentTemplate">
            <summary>
            Represents a template that can match a <see cref="T:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegmentTemplate.#ctor(Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegmentTemplate"/> class.
            </summary>
            <param name="function">The function segment to be templatized.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegmentTemplate.ParameterMappings">
            <summary>
            Gets the dictionary representing the mappings from the parameter names in the current function segment to the 
            parameter names in route data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnboundFunctionPathSegmentTemplate.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a segment that could not be resolved.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment" /> class.
            </summary>
            <param name="segmentValue">The unresolved segment value.</param>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment.SegmentValue">
            <summary>
            Gets the unresolved segment value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.UnresolvedPathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.OData.Routing.ValuePathSegment">
            <summary>
            An <see cref="T:Microsoft.AspNet.OData.Routing.ODataPathSegment"/> implementation representing a $value segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.OData.Routing.ValuePathSegment.SegmentKind">
            <summary>
            Gets the segment kind for the current segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ValuePathSegment.GetNavigationSource(Microsoft.OData.Edm.IEdmNavigationSource)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ValuePathSegment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.OData.Routing.ValuePathSegment.TryMatch(Microsoft.AspNet.OData.Routing.ODataPathSegment,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
    </members>
</doc>
